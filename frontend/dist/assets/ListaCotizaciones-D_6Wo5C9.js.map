{"version":3,"file":"ListaCotizaciones-D_6Wo5C9.js","sources":["../../src/hooks/useSimpleMultiSelect.js","../../src/components/QuoteStatusDropdown.jsx","../../src/pages/ListaCotizaciones.jsx"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\n/**\r\n * Hook simple para selección múltiple sin complicaciones\r\n * @param {Array} items - Array de elementos a seleccionar\r\n * @param {Function} getItemId - Función para obtener el ID de un elemento\r\n * @returns {Object} - Estado y funciones de selección\r\n */\r\nexport const useSimpleMultiSelect = (items = [], getItemId = (item) => item.id) => {\r\n  const [selectedItems, setSelectedItems] = useState(new Set());\r\n\r\n  // Obtener IDs de elementos seleccionados\r\n  const selectedIds = Array.from(selectedItems);\r\n\r\n  // Verificar si un elemento está seleccionado\r\n  const isSelected = useCallback((item) => {\r\n    const id = getItemId(item);\r\n    return selectedItems.has(id);\r\n  }, [selectedItems, getItemId]);\r\n\r\n  // Verificar si todos los elementos están seleccionados\r\n  const isAllSelected = selectedItems.size === items.length && items.length > 0;\r\n\r\n  // Verificar si algunos elementos están seleccionados\r\n  const isPartiallySelected = selectedItems.size > 0 && selectedItems.size < items.length;\r\n\r\n  // Toggle selección de un elemento\r\n  const toggleItem = useCallback((item) => {\r\n    const id = getItemId(item);\r\n    setSelectedItems(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(id)) {\r\n        newSet.delete(id);\r\n      } else {\r\n        newSet.add(id);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, [getItemId]);\r\n\r\n  // Seleccionar todos los elementos\r\n  const selectAll = useCallback(() => {\r\n    const allIds = items.map(item => getItemId(item));\r\n    setSelectedItems(new Set(allIds));\r\n  }, [items, getItemId]);\r\n\r\n  // Deseleccionar todos los elementos\r\n  const deselectAll = useCallback(() => {\r\n    setSelectedItems(new Set());\r\n  }, []);\r\n\r\n  // Toggle selección de todos los elementos\r\n  const toggleAll = useCallback(() => {\r\n    if (isAllSelected) {\r\n      deselectAll();\r\n    } else {\r\n      selectAll();\r\n    }\r\n  }, [isAllSelected, selectAll, deselectAll]);\r\n\r\n  // Limpiar selección\r\n  const clearSelection = useCallback(() => {\r\n    setSelectedItems(new Set());\r\n  }, []);\r\n\r\n  // Obtener elementos seleccionados\r\n  const getSelectedItems = useCallback(() => {\r\n    return items.filter(item => isSelected(item));\r\n  }, [items, isSelected]);\r\n\r\n  return {\r\n    // Estado\r\n    selectedItems,\r\n    selectedIds,\r\n    isAllSelected,\r\n    isPartiallySelected,\r\n    \r\n    // Funciones de selección\r\n    isSelected,\r\n    toggleItem,\r\n    selectAll,\r\n    deselectAll,\r\n    toggleAll,\r\n    clearSelection,\r\n    getSelectedItems,\r\n  };\r\n};\r\n\r\nexport default useSimpleMultiSelect;\r\n","import React, { useState } from 'react';\r\nimport { Dropdown, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { FiChevronDown, FiCheck, FiClock, FiSend, FiMessageSquare, FiTrendingUp, FiCheckCircle, FiX } from 'react-icons/fi';\r\nimport { useQueryClient } from 'react-query';\r\nimport { updateQuoteStatus } from '../services/quotes';\r\n\r\n// Estados de cotizaciones con iconos y colores\r\nconst QUOTE_STATUSES = {\r\n  nuevo: {\r\n    label: 'Nuevo',\r\n    icon: FiClock,\r\n    color: 'primary',\r\n    bgColor: '#007bff'\r\n  },\r\n  cotizacion_enviada: {\r\n    label: 'Cotización Enviada',\r\n    icon: FiSend,\r\n    color: 'info',\r\n    bgColor: '#17a2b8'\r\n  },\r\n  pendiente_cotizacion: {\r\n    label: 'Pendiente de Cotización',\r\n    icon: FiClock,\r\n    color: 'warning',\r\n    bgColor: '#ffc107'\r\n  },\r\n  en_negociacion: {\r\n    label: 'En Negociación',\r\n    icon: FiMessageSquare,\r\n    color: 'secondary',\r\n    bgColor: '#6c757d'\r\n  },\r\n  seguimiento: {\r\n    label: 'Seguimiento',\r\n    icon: FiTrendingUp,\r\n    color: 'info',\r\n    bgColor: '#17a2b8'\r\n  },\r\n  ganado: {\r\n    label: 'Ganado',\r\n    icon: FiCheckCircle,\r\n    color: 'success',\r\n    bgColor: '#28a745'\r\n  },\r\n  perdido: {\r\n    label: 'Perdido',\r\n    icon: FiX,\r\n    color: 'danger',\r\n    bgColor: '#dc3545'\r\n  }\r\n};\r\n\r\nconst QuoteStatusDropdown = ({ \r\n  quoteId, \r\n  currentStatus, \r\n  onStatusChange, \r\n  disabled = false,\r\n  size = 'sm',\r\n  showLabel = true \r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const queryClient = useQueryClient();\r\n\r\n  const handleStatusChange = async (newStatus) => {\r\n    if (newStatus === currentStatus) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      await updateQuoteStatus(quoteId, newStatus);\r\n      onStatusChange?.(newStatus);\r\n      // Invalidar queries para sincronizar con el servidor\r\n      queryClient.invalidateQueries(['quotes']);\r\n      queryClient.invalidateQueries('quotesList');\r\n    } catch (err) {\r\n      setError(err.message || 'Error al actualizar estado');\r\n      console.error('Error updating quote status:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const currentStatusConfig = QUOTE_STATUSES[currentStatus] || QUOTE_STATUSES.nuevo;\r\n  const CurrentIcon = currentStatusConfig.icon;\r\n\r\n  return (\r\n    <div className=\"quote-status-dropdown\">\r\n      {error && (\r\n        <Alert variant=\"danger\" className=\"mb-2\" style={{ fontSize: '0.8rem' }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Dropdown>\r\n        <Dropdown.Toggle \r\n          variant={currentStatusConfig.color}\r\n          size={size}\r\n          disabled={disabled || loading}\r\n          className=\"d-flex align-items-center gap-1\"\r\n          style={{ \r\n            backgroundColor: currentStatusConfig.bgColor,\r\n            borderColor: currentStatusConfig.bgColor,\r\n            minWidth: '140px'\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <Spinner animation=\"border\" size=\"sm\" />\r\n          ) : (\r\n            <>\r\n              <CurrentIcon size={14} />\r\n              {showLabel && <span>{currentStatusConfig.label}</span>}\r\n            </>\r\n          )}\r\n          <FiChevronDown size={12} />\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          {Object.entries(QUOTE_STATUSES).map(([status, config]) => {\r\n            const StatusIcon = config.icon;\r\n            const isCurrentStatus = status === currentStatus;\r\n            \r\n            return (\r\n              <Dropdown.Item\r\n                key={status}\r\n                onClick={() => handleStatusChange(status)}\r\n                disabled={isCurrentStatus}\r\n                className={`d-flex align-items-center gap-2 ${isCurrentStatus ? 'active' : ''}`}\r\n                style={{ \r\n                  backgroundColor: isCurrentStatus ? config.bgColor : 'transparent',\r\n                  color: isCurrentStatus ? 'white' : 'inherit'\r\n                }}\r\n              >\r\n                <StatusIcon size={14} />\r\n                <span>{config.label}</span>\r\n                {isCurrentStatus && <FiCheck size={14} className=\"ms-auto\" />}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteStatusDropdown;\r\n","import React, { useState, useMemo, useRef, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { Button, Badge, Row, Col, Card, Container, Alert, Form } from 'react-bootstrap';\r\nimport { \r\n  FiPlus, FiEdit, FiTrash2, FiFileText, FiDollarSign, \r\n  FiCalendar, FiUser, FiHome, FiCopy, FiDownload,\r\n  FiEye, FiCheckCircle, FiClock, FiX, FiCheck, FiSquare, FiMessageSquare\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport ConfirmModal from '../components/common/ConfirmModal';\r\nimport SuccessModal from '../components/SuccessModal';\r\nimport useSimpleMultiSelect from '../hooks/useSimpleMultiSelect';\r\nimport { listQuotes, createQuote, deleteQuote } from '../services/quotes';\r\nimport { listCompanies } from '../services/companies';\r\nimport { listProjects } from '../services/projects';\r\nimport QuoteStatusDropdown from '../components/QuoteStatusDropdown';\r\nimport './ListaCotizaciones.css';\r\n\r\nexport default function ListaCotizaciones() {\r\n  const [deletingQuote, setDeletingQuote] = useState(null);\r\n  const [bulkDeleting, setBulkDeleting] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  \r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const tableRef = useRef(null);\r\n\r\n  const { data: companiesData } = useQuery('companiesList', () => listCompanies({ page: 1, limit: 200 }), { staleTime: Infinity });\r\n  const { data: projectsData } = useQuery('projectsList', () => listProjects({ page: 1, limit: 500 }), { staleTime: Infinity });\r\n\r\n  // Estados para paginación\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(20);\r\n\r\n  const { data, isLoading, error } = useQuery(\r\n    ['quotes', currentPage, itemsPerPage],\r\n    async () => {\r\n      const result = await listQuotes({ \r\n        page: currentPage, \r\n        limit: itemsPerPage \r\n      });\r\n      // Enriquecer cotizaciones con datos del meta\r\n      if (result?.data) {\r\n        result.data = result.data.map(quote => {\r\n          let meta = null;\r\n          if (quote.meta && typeof quote.meta === 'string') {\r\n            try {\r\n              meta = JSON.parse(quote.meta);\r\n            } catch (e) {\r\n              meta = null;\r\n            }\r\n          } else if (quote.meta && typeof quote.meta === 'object') {\r\n            meta = quote.meta;\r\n          }\r\n          \r\n          if (meta && meta.customer) {\r\n            quote.client_company = meta.customer.company_name || quote.company_name;\r\n            quote.client_ruc = meta.customer.ruc || quote.company_ruc;\r\n          }\r\n          \r\n          return quote;\r\n        });\r\n      }\r\n      return result;\r\n    },\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  // Debug: mostrar datos en consola (temporal)\r\n  console.log('📊 Datos de cotizaciones:', { data, quotes: data?.data?.length || 0, isLoading, error });\r\n\r\n  const deleteMutation = useMutation(deleteQuote, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('quotes');\r\n      setDeletingQuote(null);\r\n    },\r\n    onError: (error) => console.error('Error deleting quote:', error)\r\n  });\r\n\r\n  const bulkDeleteMutation = useMutation(\r\n    async (quoteIds) => {\r\n      const deletePromises = quoteIds.map(id => deleteQuote(id));\r\n      await Promise.all(deletePromises);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries('quotes');\r\n        clearSelection();\r\n        setBulkDeleting(false);\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error deleting quotes:', error);\r\n        setBulkDeleting(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const quotes = data?.data || [];\r\n\r\n  // Hook de selección múltiple simple\r\n  const {\r\n    selectedItems,\r\n    selectedIds,\r\n    isAllSelected,\r\n    isPartiallySelected,\r\n    isSelected,\r\n    toggleItem,\r\n    toggleAll,\r\n    clearSelection\r\n  } = useSimpleMultiSelect(quotes, (quote) => quote.id);\r\n\r\n  const showBulkActions = selectedIds.length > 0;\r\n\r\n  const handleCreate = () => {\r\n    navigate('/cotizaciones/inteligente');\r\n  };\r\n\r\n  const handleEdit = (quote) => {\r\n    // Navegar a cotización inteligente con datos precargados\r\n    navigate(`/cotizaciones/inteligente?edit=${quote.id}`);\r\n  };\r\n\r\n  const handleView = (quote) => {\r\n    navigate(`/cotizaciones/${quote.id}`);\r\n  };\r\n\r\n  const handleDelete = (quote) => {\r\n    setDeletingQuote(quote);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await deleteMutation.mutateAsync(deletingQuote.id);\r\n      setDeletingQuote(null);\r\n    } catch (error) {\r\n      console.error('Error eliminando cotización:', error);\r\n      setDeletingQuote(null);\r\n    }\r\n  };\r\n\r\n  const handleClone = async (quote) => {\r\n    try {\r\n      const payload = {\r\n        project_id: quote.project_id,\r\n        variant_id: quote.variant_id || null,\r\n        client_contact: quote.client_contact,\r\n        client_email: quote.client_email,\r\n        client_phone: quote.client_phone,\r\n        issue_date: new Date().toISOString().slice(0, 10),\r\n        subtotal: quote.subtotal,\r\n        igv: quote.igv,\r\n        total: quote.total,\r\n        status: 'borrador',\r\n        meta: { from_quote_id: quote.id, ...quote.meta }\r\n      };\r\n      const created = await createQuote(payload);\r\n      queryClient.invalidateQueries('quotes');\r\n      \r\n      // Mostrar modal de éxito y cargar el módulo de cotización\r\n      setSuccessMessage(`Cotización clonada exitosamente. Código: ${created.quote_code || created.id}`);\r\n      setShowSuccessModal(true);\r\n      \r\n      // Cargar el módulo de cotización con los datos clonados\r\n      navigate(`/cotizaciones?edit=${created.id}`);\r\n    } catch (error) {\r\n      console.error('Error cloning quote:', error);\r\n      setSuccessMessage('Error al clonar la cotización. Por favor, inténtalo de nuevo.');\r\n      setShowSuccessModal(true);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    setBulkDeleting(true);\r\n  };\r\n\r\n  const confirmBulkDelete = async () => {\r\n    try {\r\n      await bulkDeleteMutation.mutateAsync(selectedIds);\r\n    } catch (error) {\r\n      console.error('Error eliminando cotizaciones:', error);\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cambio de estado\r\n  const handleStatusChange = (quoteId, newStatus) => {\r\n    // Actualizar la cotización en la lista local\r\n    queryClient.setQueryData(['quotes'], (oldData) => {\r\n      if (!oldData?.data) return oldData;\r\n      \r\n      return {\r\n        ...oldData,\r\n        data: oldData.data.map(quote => \r\n          quote.id === quoteId \r\n            ? { ...quote, status: newStatus }\r\n            : quote\r\n        )\r\n      };\r\n    });\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('es-PE', {\r\n      style: 'currency',\r\n      currency: 'PEN',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES');\r\n  };\r\n\r\n  const getCompanyName = (companyId) => {\r\n    if (!companiesData?.data) return 'Cliente no encontrado';\r\n    const company = companiesData.data.find(c => c.id === companyId);\r\n    return company ? company.name : 'Cliente no encontrado';\r\n  };\r\n\r\n  const getProjectName = (projectId) => {\r\n    if (!projectId || !projectsData?.data) return 'Sin proyecto';\r\n    const project = projectsData.data.find(p => p.id === projectId);\r\n    return project ? project.name : 'Sin proyecto';\r\n  };\r\n\r\n  const getRoleAbbreviation = (role) => {\r\n    if (!role) return '';\r\n    \r\n    const roleMap = {\r\n      'admin': 'Admin',\r\n      'jefa_comercial': 'Jefa Com.',\r\n      'vendedor_comercial': 'Vend.',\r\n      'tecnico_laboratorio': 'Téc. Lab.',\r\n      'jefe_laboratorio': 'Jefe Lab.',\r\n      'supervisor_campo': 'Sup. Campo',\r\n      'tecnico_campo': 'Téc. Campo'\r\n    };\r\n    \r\n    return roleMap[role] || role.substring(0, 8);\r\n  };\r\n\r\n  const getRoleColor = (role) => {\r\n    if (!role) return 'secondary';\r\n    \r\n    const colorMap = {\r\n      'admin': 'danger',           // Rojo para admin\r\n      'jefa_comercial': 'primary', // Azul para jefa comercial\r\n      'vendedor_comercial': 'info', // Celeste para vendedor\r\n      'tecnico_laboratorio': 'success', // Verde para técnico lab\r\n      'jefe_laboratorio': 'success', // Verde para jefe lab\r\n      'supervisor_campo': 'warning', // Amarillo para supervisor\r\n      'tecnico_campo': 'warning'   // Amarillo para técnico campo\r\n    };\r\n    \r\n    return colorMap[role] || 'secondary';\r\n  };\r\n\r\n  const stats = useMemo(() => {\r\n    if (!quotes.length) return { \r\n      total: 0, \r\n      nuevo: 0, \r\n      cotizacion_enviada: 0, \r\n      pendiente_cotizacion: 0, \r\n      en_negociacion: 0, \r\n      seguimiento: 0, \r\n      ganado: 0, \r\n      perdido: 0 \r\n    };\r\n    \r\n    return quotes.reduce((acc, quote) => {\r\n      acc.total++;\r\n      acc[quote.status] = (acc[quote.status] || 0) + 1;\r\n      return acc;\r\n    }, { \r\n      total: 0, \r\n      nuevo: 0, \r\n      cotizacion_enviada: 0, \r\n      pendiente_cotizacion: 0, \r\n      en_negociacion: 0, \r\n      seguimiento: 0, \r\n      ganado: 0, \r\n      perdido: 0 \r\n    });\r\n  }, [quotes]);\r\n\r\n  return (\r\n    <Container fluid className=\"p-4\">\r\n      <PageHeader\r\n        title=\"Lista de Cotizaciones\"\r\n        subtitle=\"Gestiona todas las cotizaciones del sistema\"\r\n        icon={FiFileText}\r\n        actions={\r\n          <Button variant=\"primary\" onClick={handleCreate}>\r\n            <FiPlus className=\"me-2\" />\r\n            Nueva Cotización\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {/* Estadísticas */}\r\n      <Row className=\"mb-4 g-2\">\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Total\"\r\n            value={stats.total}\r\n            icon={FiFileText}\r\n            color=\"primary\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Nuevas\"\r\n            value={stats.nuevo}\r\n            icon={FiClock}\r\n            color=\"primary\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Enviadas\"\r\n            value={stats.cotizacion_enviada}\r\n            icon={FiFileText}\r\n            color=\"info\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"En Negociación\"\r\n            value={stats.en_negociacion}\r\n            icon={FiMessageSquare}\r\n            color=\"secondary\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Ganadas\"\r\n            value={stats.ganado}\r\n            icon={FiCheckCircle}\r\n            color=\"success\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Perdidas\"\r\n            value={stats.perdido}\r\n            icon={FiX}\r\n            color=\"danger\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n        <Col xs={6} sm={4} md={2}>\r\n          <StatsCard\r\n            title=\"Seleccionadas\"\r\n            value={selectedIds.length}\r\n            icon={FiCheck}\r\n            color=\"warning\"\r\n            size=\"compact\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Acciones en lote */}\r\n      {showBulkActions && (\r\n        <Alert variant=\"info\" className=\"mb-3\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <FiCheck className=\"me-2\" />\r\n              {selectedIds.length} cotización(es) seleccionada(s)\r\n            </span>\r\n            <div className=\"d-flex gap-2\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                size=\"sm\"\r\n                onClick={clearSelection}\r\n              >\r\n                <FiX className=\"me-1\" />\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                variant=\"danger\"\r\n                size=\"sm\"\r\n                onClick={handleBulkDelete}\r\n                disabled={bulkDeleting}\r\n              >\r\n                <FiTrash2 className=\"me-1\" />\r\n                {bulkDeleting ? 'Eliminando...' : 'Eliminar Seleccionadas'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Tabla de cotizaciones */}\r\n      <Card>\r\n        <Card.Body className=\"p-0\">\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover mb-0\" ref={tableRef}>\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th style={{ width: '50px' }}>\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      size=\"sm\"\r\n                      onClick={toggleAll}\r\n                      className=\"p-1\"\r\n                    >\r\n                      {isAllSelected ? (\r\n                        <FiCheck size={16} />\r\n                      ) : (\r\n                        <FiSquare size={16} />\r\n                      )}\r\n                    </Button>\r\n                  </th>\r\n                  <th>ID</th>\r\n                  <th>Código</th>\r\n                  <th>Cliente</th>\r\n                  <th>Proyecto</th>\r\n                  <th>Estado</th>\r\n                  <th>Total</th>\r\n                  <th>Fecha</th>\r\n                  <th>Creado por</th>\r\n                  <th style={{ width: '120px' }}>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {quotes.map((quote, index) => (\r\n                  <tr\r\n                    key={quote.id}\r\n                    className={`quote-row ${isSelected(quote) ? 'selected' : ''}`}\r\n                  >\r\n                    <td>\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        size=\"sm\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          toggleItem(quote);\r\n                        }}\r\n                        className=\"p-1\"\r\n                      >\r\n                        {isSelected(quote) ? (\r\n                          <FiCheck size={16} />\r\n                        ) : (\r\n                          <FiSquare size={16} />\r\n                        )}\r\n                      </Button>\r\n                    </td>\r\n                    <td>{quote.id}</td>\r\n                    <td>\r\n                      <div>\r\n                        <strong>COT-{quote.id}</strong>\r\n                        <div className=\"text-muted small\">\r\n                          <FiCalendar size={12} className=\"me-1\" />\r\n                          {formatDate(quote.issue_date)}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div>\r\n                        <div className=\"fw-bold\">{quote.client_company || quote.client_contact || 'Sin razón social'}</div>\r\n                        {quote.client_ruc && (\r\n                          <div className=\"text-muted small\">RUC: {quote.client_ruc}</div>\r\n                        )}\r\n                        {quote.client_contact && quote.client_company && (\r\n                          <div className=\"text-muted small\">\r\n                            <FiUser size={12} className=\"me-1\" />\r\n                            {quote.client_contact}\r\n                          </div>\r\n                        )}\r\n                        {quote.client_email && (\r\n                          <div className=\"text-muted small\">\r\n                            {quote.client_email}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"text-muted\">\r\n                        {getProjectName(quote.project_id)}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <QuoteStatusDropdown\r\n                        quoteId={quote.id}\r\n                        currentStatus={quote.status}\r\n                        onStatusChange={(newStatus) => handleStatusChange(quote.id, newStatus)}\r\n                        size=\"sm\"\r\n                        showLabel={true}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div>\r\n                        <div className=\"fw-bold text-success\">\r\n                          {formatCurrency(quote.total)}\r\n                        </div>\r\n                        <div className=\"text-muted small\">\r\n                          IGV: {formatCurrency(quote.igv)}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"text-muted\">\r\n                        {formatDate(quote.created_at)}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div>\r\n                        <div className=\"fw-bold small\">{quote.created_by_name || 'Usuario desconocido'}</div>\r\n                        <div className=\"mt-1\">\r\n                          <Badge \r\n                            bg={getRoleColor(quote.created_by_role)} \r\n                            className=\"small\"\r\n                            style={{ fontSize: '0.7rem' }}\r\n                          >\r\n                            {getRoleAbbreviation(quote.created_by_role)}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"text-muted small mt-1\">\r\n                          {new Date(quote.created_at).toLocaleTimeString('es-ES', {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit'\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-group\" role=\"group\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          size=\"sm\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleView(quote);\r\n                          }}\r\n                          onMouseDown={(e) => e.stopPropagation()}\r\n                          onMouseUp={(e) => e.stopPropagation()}\r\n                          title=\"Ver Evidencias\"\r\n                        >\r\n                          <FiEye className=\"me-1\" />\r\n                          Evidencias\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          size=\"sm\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleEdit(quote);\r\n                          }}\r\n                          onMouseDown={(e) => e.stopPropagation()}\r\n                          onMouseUp={(e) => e.stopPropagation()}\r\n                          title=\"Editar\"\r\n                        >\r\n                          <FiEdit />\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-info\"\r\n                          size=\"sm\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleClone(quote);\r\n                          }}\r\n                          onMouseDown={(e) => e.stopPropagation()}\r\n                          onMouseUp={(e) => e.stopPropagation()}\r\n                          title=\"Clonar\"\r\n                        >\r\n                          <FiCopy />\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-danger\"\r\n                          size=\"sm\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDelete(quote);\r\n                          }}\r\n                          onMouseDown={(e) => e.stopPropagation()}\r\n                          onMouseUp={(e) => e.stopPropagation()}\r\n                          title=\"Eliminar\"\r\n                        >\r\n                          <FiTrash2 />\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Paginación */}\r\n      {data?.total > itemsPerPage && (\r\n        <Card className=\"mt-3\">\r\n          <Card.Body className=\"py-3\">\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <small className=\"text-muted\">\r\n                  Mostrando {((currentPage - 1) * itemsPerPage) + 1} a {Math.min(currentPage * itemsPerPage, data.total)} de {data.total} cotizaciones\r\n                </small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  {/* Selector de elementos por página */}\r\n                  <Form.Select\r\n                    size=\"sm\"\r\n                    style={{ width: '80px' }}\r\n                    value={itemsPerPage}\r\n                    onChange={(e) => {\r\n                      setItemsPerPage(parseInt(e.target.value));\r\n                      setCurrentPage(1);\r\n                    }}\r\n                  >\r\n                    <option value={10}>10</option>\r\n                    <option value={20}>20</option>\r\n                    <option value={50}>50</option>\r\n                    <option value={100}>100</option>\r\n                  </Form.Select>\r\n                  \r\n                  {/* Botón Primera página */}\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    size=\"sm\"\r\n                    disabled={currentPage === 1}\r\n                    onClick={() => setCurrentPage(1)}\r\n                    title=\"Primera página\"\r\n                  >\r\n                    ««\r\n                  </Button>\r\n                  \r\n                  {/* Botón Anterior */}\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    size=\"sm\"\r\n                    disabled={currentPage === 1}\r\n                    onClick={() => setCurrentPage(currentPage - 1)}\r\n                    title=\"Página anterior\"\r\n                  >\r\n                    «\r\n                  </Button>\r\n                  \r\n                  {/* Páginas dinámicas */}\r\n                  {(() => {\r\n                    const totalPages = Math.ceil(data.total / itemsPerPage);\r\n                    const pages = [];\r\n                    const startPage = Math.max(1, currentPage - 1);\r\n                    const endPage = Math.min(totalPages, startPage + 2);\r\n                    \r\n                    for (let i = startPage; i <= endPage; i++) {\r\n                      pages.push(\r\n                        <Button\r\n                          key={i}\r\n                          variant={currentPage === i ? \"primary\" : \"outline-secondary\"}\r\n                          size=\"sm\"\r\n                          onClick={() => setCurrentPage(i)}\r\n                          className=\"px-3\"\r\n                        >\r\n                          {i}\r\n                        </Button>\r\n                      );\r\n                    }\r\n                    return pages;\r\n                  })()}\r\n                  \r\n                  {/* Botón Siguiente */}\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    size=\"sm\"\r\n                    disabled={currentPage >= Math.ceil(data.total / itemsPerPage)}\r\n                    onClick={() => setCurrentPage(currentPage + 1)}\r\n                    title=\"Página siguiente\"\r\n                  >\r\n                    »\r\n                  </Button>\r\n                  \r\n                  {/* Botón Última página */}\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    size=\"sm\"\r\n                    disabled={currentPage >= Math.ceil(data.total / itemsPerPage)}\r\n                    onClick={() => setCurrentPage(Math.ceil(data.total / itemsPerPage))}\r\n                    title=\"Última página\"\r\n                  >\r\n                    »»\r\n                  </Button>\r\n                  \r\n                  {/* Input para ir a página específica */}\r\n                  <div className=\"d-flex align-items-center gap-1 ms-3\">\r\n                    <span className=\"text-muted small\">Ir a:</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={Math.ceil(data.total / itemsPerPage)}\r\n                      className=\"form-control form-control-sm\"\r\n                      style={{ width: '60px' }}\r\n                      placeholder=\"...\"\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const page = parseInt(e.target.value);\r\n                          const totalPages = Math.ceil(data.total / itemsPerPage);\r\n                          if (page >= 1 && page <= totalPages) {\r\n                            setCurrentPage(page);\r\n                            e.target.value = '';\r\n                          } else {\r\n                            setCurrentPage(totalPages);\r\n                            e.target.value = '';\r\n                          }\r\n                        }\r\n                      }}\r\n                      title={`Ingresa un número del 1 al ${Math.ceil(data.total / itemsPerPage)}`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Modales de confirmación */}\r\n      <ConfirmModal\r\n        show={!!deletingQuote}\r\n        title=\"Confirmar eliminación\"\r\n        message={`¿Estás seguro de que quieres eliminar la cotización COT-${deletingQuote?.id}?`}\r\n        onConfirm={confirmDelete}\r\n        onCancel={() => setDeletingQuote(null)}\r\n        confirmText=\"Eliminar\"\r\n        confirmVariant=\"danger\"\r\n      />\r\n\r\n      <ConfirmModal\r\n        show={bulkDeleting}\r\n        title=\"Confirmar eliminación múltiple\"\r\n        message={`¿Estás seguro de que quieres eliminar ${selectedIds.length} cotización(es) seleccionada(s)? Esta acción no se puede deshacer.`}\r\n        onConfirm={confirmBulkDelete}\r\n        onCancel={() => setBulkDeleting(false)}\r\n        confirmText=\"Eliminar Todas\"\r\n        confirmVariant=\"danger\"\r\n      />\r\n\r\n      {/* Modal de Éxito */}\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        title=\"¡Cotización Clonada!\"\r\n        message={successMessage}\r\n        buttonText=\"Continuar\"\r\n      />\r\n    </Container>\r\n  );\r\n}"],"names":["useSimpleMultiSelect","items","getItemId","item","selectedItems","setSelectedItems","useState","selectedIds","isSelected","useCallback","id","isAllSelected","isPartiallySelected","toggleItem","prev","newSet","selectAll","allIds","deselectAll","toggleAll","clearSelection","getSelectedItems","QUOTE_STATUSES","FiClock","FiSend","FiMessageSquare","FiTrendingUp","FiCheckCircle","FiX","QuoteStatusDropdown","quoteId","currentStatus","onStatusChange","disabled","size","showLabel","loading","setLoading","error","setError","queryClient","useQueryClient","handleStatusChange","newStatus","updateQuoteStatus","err","currentStatusConfig","CurrentIcon","jsxs","jsx","Alert","Dropdown","Spinner","Fragment","FiChevronDown","status","config","StatusIcon","isCurrentStatus","FiCheck","ListaCotizaciones","deletingQuote","setDeletingQuote","bulkDeleting","setBulkDeleting","showSuccessModal","setShowSuccessModal","successMessage","setSuccessMessage","navigate","useNavigate","tableRef","useRef","companiesData","useQuery","listCompanies","projectsData","listProjects","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","data","isLoading","result","listQuotes","quote","meta","_a","deleteMutation","useMutation","deleteQuote","bulkDeleteMutation","quoteIds","deletePromises","quotes","showBulkActions","handleCreate","handleEdit","handleView","handleDelete","confirmDelete","handleClone","payload","created","createQuote","handleBulkDelete","confirmBulkDelete","oldData","formatCurrency","amount","formatDate","dateString","getProjectName","projectId","project","p","getRoleAbbreviation","role","getRoleColor","stats","useMemo","acc","Container","PageHeader","FiFileText","Button","FiPlus","Row","Col","StatsCard","FiTrash2","Card","FiSquare","index","e","FiCalendar","FiUser","Badge","FiEye","FiEdit","FiCopy","Form","totalPages","pages","startPage","endPage","i","page","ConfirmModal","SuccessModal"],"mappings":"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"}