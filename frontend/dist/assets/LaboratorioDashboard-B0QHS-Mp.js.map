{"version":3,"file":"LaboratorioDashboard-B0QHS-Mp.js","sources":["../../src/pages/dashboards/LaboratorioDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Alert, Spinner } from 'react-bootstrap';\r\nimport { FiActivity, FiPackage, FiUpload, FiCheckCircle, FiClock, FiSend } from 'react-icons/fi';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport StatsCard from '../../components/common/StatsCard';\r\nimport apiFetch from '../../services/api';\r\n\r\nexport default function LaboratorioDashboard() {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await apiFetch('/api/role-dashboard/laboratorio');\r\n      setStats(data);\r\n    } catch (err) {\r\n      console.error('Error fetching dashboard data:', err);\r\n      setError('Error al cargar los datos del dashboard');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container fluid className=\"p-4\">\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '400px' }}>\r\n          <Spinner animation=\"border\" size=\"lg\" />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container fluid className=\"p-4\">\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"p-4\">\r\n      <PageHeader\r\n        title=\"Dashboard Laboratorio\"\r\n        subtitle=\"Proyectos, evidencias y envíos de laboratorio\"\r\n        icon={FiActivity}\r\n      />\r\n\r\n      {/* Métricas principales */}\r\n      <Row className=\"mb-4\">\r\n        <Col lg={3} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Proyectos Asignados\"\r\n            value={stats?.proyectosAsignados || 0}\r\n            icon={FiActivity}\r\n            color=\"primary\"\r\n            subtitle={`${stats?.proyectosEnProceso || 0} en proceso`}\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Proyectos Completados\"\r\n            value={stats?.proyectosCompletados || 0}\r\n            icon={FiCheckCircle}\r\n            color=\"success\"\r\n            subtitle=\"Proyectos finalizados\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Evidencias Subidas\"\r\n            value={stats?.evidenciasSubidas || 0}\r\n            icon={FiUpload}\r\n            color=\"info\"\r\n            subtitle={`${stats?.evidenciasEsteMes || 0} este mes`}\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Proyectos Nuevos\"\r\n            value={stats?.proyectosNuevosEsteMes || 0}\r\n            icon={FiClock}\r\n            color=\"warning\"\r\n            subtitle=\"Este mes\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Métricas de envíos */}\r\n      <Row className=\"mb-4\">\r\n        <Col lg={4} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Envíos Recibidos\"\r\n            value={stats?.enviosRecibidos || 0}\r\n            icon={FiPackage}\r\n            color=\"primary\"\r\n            subtitle=\"Muestras recibidas\"\r\n          />\r\n        </Col>\r\n        <Col lg={4} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"En Proceso\"\r\n            value={stats?.enviosEnProceso || 0}\r\n            icon={FiClock}\r\n            color=\"warning\"\r\n            subtitle=\"En análisis\"\r\n          />\r\n        </Col>\r\n        <Col lg={4} md={6} className=\"mb-3\">\r\n          <StatsCard\r\n            title=\"Completados\"\r\n            value={stats?.enviosCompletados || 0}\r\n            icon={FiCheckCircle}\r\n            color=\"success\"\r\n            subtitle=\"Análisis finalizados\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Proyectos recientes */}\r\n      <Row className=\"mb-4\">\r\n        <Col lg={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Proyectos Recientes</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {stats?.proyectosRecientes?.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Proyecto</th>\r\n                        <th>Empresa</th>\r\n                        <th>Estado</th>\r\n                        <th>Fecha</th>\r\n                        <th>Creado por</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.proyectosRecientes.map((proyecto, index) => (\r\n                        <tr key={index}>\r\n                          <td>{proyecto.name}</td>\r\n                          <td>{proyecto.company_name}</td>\r\n                          <td>\r\n                            <span className={`badge ${\r\n                              proyecto.status === 'activo' ? 'bg-success' :\r\n                              proyecto.status === 'completado' ? 'bg-primary' :\r\n                              proyecto.status === 'pendiente' ? 'bg-warning' : 'bg-secondary'\r\n                            }`}>\r\n                              {proyecto.status}\r\n                            </span>\r\n                          </td>\r\n                          <td>{new Date(proyecto.created_at).toLocaleDateString()}</td>\r\n                          <td>{proyecto.created_by_name}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted\">No hay proyectos recientes</p>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Evidencias recientes */}\r\n        <Col lg={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Evidencias Recientes</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {stats?.evidenciasRecientes?.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Proyecto</th>\r\n                        <th>Notas</th>\r\n                        <th>Subido por</th>\r\n                        <th>Fecha</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.evidenciasRecientes.map((evidencia, index) => (\r\n                        <tr key={index}>\r\n                          <td>{evidencia.project_name}</td>\r\n                          <td>\r\n                            <span className=\"text-truncate d-inline-block\" style={{ maxWidth: '150px' }}>\r\n                              {evidencia.notes || 'Sin notas'}\r\n                            </span>\r\n                          </td>\r\n                          <td>{evidencia.uploaded_by_name}</td>\r\n                          <td>{new Date(evidencia.created_at).toLocaleDateString()}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted\">No hay evidencias recientes</p>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Envíos recientes */}\r\n      {stats?.enviosRecientes?.length > 0 && (\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"shadow-sm\">\r\n              <Card.Header>\r\n                <h5 className=\"mb-0\">Envíos Recientes</h5>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Número de Seguimiento</th>\r\n                        <th>Estado</th>\r\n                        <th>Enviado por</th>\r\n                        <th>Fecha</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.enviosRecientes.map((envio, index) => (\r\n                        <tr key={index}>\r\n                          <td>{envio.tracking_number}</td>\r\n                          <td>\r\n                            <span className={`badge ${\r\n                              envio.status === 'completado' ? 'bg-success' :\r\n                              envio.status === 'en_proceso' ? 'bg-warning' :\r\n                              envio.status === 'recibido' ? 'bg-info' : 'bg-secondary'\r\n                            }`}>\r\n                              {envio.status}\r\n                            </span>\r\n                          </td>\r\n                          <td>{envio.sender_name}</td>\r\n                          <td>{new Date(envio.created_at).toLocaleDateString()}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LaboratorioDashboard","stats","setStats","useState","loading","setLoading","error","setError","useEffect","fetchDashboardData","data","apiFetch","err","jsx","Container","Spinner","Alert","jsxs","PageHeader","FiActivity","Row","Col","StatsCard","FiCheckCircle","FiUpload","FiClock","FiPackage","Card","proyecto","index","evidencia","_c","envio"],"mappings":"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"}