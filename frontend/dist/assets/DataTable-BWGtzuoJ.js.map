{"version":3,"file":"DataTable-BWGtzuoJ.js","sources":["../../src/components/common/DataTable.jsx"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { Table, Form, InputGroup, Button, Badge, Dropdown, Pagination, Row, Col } from 'react-bootstrap';\r\nimport { FiSearch, FiFilter, FiMoreVertical, FiEdit, FiTrash2, FiEye } from 'react-icons/fi';\r\nimport { createPortal } from 'react-dom';\r\nimport './DataTable.css';\r\n\r\n// Componente de dropdown personalizado que se renderiza en portal\r\nconst PortalDropdown = ({ actions, item, onEdit, onDelete, onView }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [position, setPosition] = useState({ top: 0, left: 0 });\r\n  const buttonRef = useRef(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    if (!isOpen && buttonRef.current) {\r\n      const rect = buttonRef.current.getBoundingClientRect();\r\n      setPosition({\r\n        top: rect.bottom + window.scrollY + 5,\r\n        left: rect.left + window.scrollX\r\n      });\r\n    }\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.onClick) {\r\n      action.onClick(item);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target) && \r\n        buttonRef.current && !buttonRef.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const dropdownContent = isOpen && (\r\n    <div\r\n      ref={dropdownRef}\r\n      className=\"portal-dropdown-menu\"\r\n      style={{\r\n        position: 'absolute',\r\n        top: position.top,\r\n        left: position.left,\r\n        zIndex: 9999,\r\n        minWidth: '160px',\r\n        backgroundColor: 'white',\r\n        border: '1px solid rgba(0, 0, 0, 0.15)',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 8px 25px rgba(0, 0, 0, 0.25)',\r\n        padding: '4px 0'\r\n      }}\r\n    >\r\n      {actions.length > 0 ? (\r\n        actions.map((action, actionIndex) => (\r\n          <button\r\n            key={actionIndex}\r\n            className={`portal-dropdown-item ${action.variant === 'outline-danger' ? 'text-danger' : ''}`}\r\n            onClick={() => handleActionClick(action)}\r\n          >\r\n            {action.icon && <action.icon className=\"me-2\" />}\r\n            {action.label}\r\n          </button>\r\n        ))\r\n      ) : (\r\n        <>\r\n          {onView && (\r\n            <button className=\"portal-dropdown-item\" onClick={() => { onView(item); setIsOpen(false); }}>\r\n              <FiEye className=\"me-2\" />\r\n              Ver\r\n            </button>\r\n          )}\r\n          {onEdit && (\r\n            <button className=\"portal-dropdown-item\" onClick={() => { onEdit(item); setIsOpen(false); }}>\r\n              <FiEdit className=\"me-2\" />\r\n              Editar\r\n            </button>\r\n          )}\r\n          {onDelete && (\r\n            <button className=\"portal-dropdown-item text-danger\" onClick={() => { onDelete(item); setIsOpen(false); }}>\r\n              <FiTrash2 className=\"me-2\" />\r\n              Eliminar\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        ref={buttonRef}\r\n        className=\"portal-dropdown-toggle\"\r\n        onClick={handleToggle}\r\n        style={{\r\n          border: 'none',\r\n          background: 'transparent',\r\n          color: '#6c757d',\r\n          padding: '0.25rem 0.5rem',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        <FiMoreVertical />\r\n      </button>\r\n      {isOpen && createPortal(dropdownContent, document.body)}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DataTable = ({\r\n  data = [],\r\n  columns = [],\r\n  searchable = true,\r\n  filterable = true,\r\n  actions = [],\r\n  onEdit,\r\n  onDelete,\r\n  onView,\r\n  loading = false,\r\n  emptyMessage = \"No hay datos disponibles\",\r\n  className = \"\",\r\n  // Nuevas props para paginaci√≥n del backend\r\n  totalItems = 0,\r\n  itemsPerPage = 20,\r\n  currentPage = 1,\r\n  onPageChange,\r\n  onSearch,\r\n  onFilter,\r\n  // Props para filtros personalizados\r\n  filterOptions = null,\r\n  // Funci√≥n para estilos de fila\r\n  getRowClassName = null,\r\n  // Prop para habilitar/deshabilitar ordenamiento\r\n  sortable = true,\r\n  // Prop para usar flexbox layout\r\n  useFlexbox = false\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortField, setSortField] = useState('');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Filtrar y ordenar datos\r\n  const filteredData = useMemo(() => {\r\n    let filtered = data;\r\n\r\n    // Si hay paginaci√≥n del backend, no filtrar localmente\r\n    if (totalItems > 0) {\r\n      return filtered;\r\n    }\r\n\r\n    // B√∫squeda local (solo si no hay paginaci√≥n del backend)\r\n    if (searchTerm && searchable) {\r\n      filtered = filtered.filter(item =>\r\n        columns.some(col => {\r\n          const value = col.accessor ? item[col.accessor] : '';\r\n          return String(value).toLowerCase().includes(searchTerm.toLowerCase());\r\n        })\r\n      );\r\n    }\r\n\r\n    // Ordenamiento (solo si est√° habilitado)\r\n    if (sortable && sortField) {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const aVal = a[sortField];\r\n        const bVal = b[sortField];\r\n        \r\n        if (aVal < bVal) return sortDirection === 'asc' ? -1 : 1;\r\n        if (aVal > bVal) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [data, searchTerm, sortField, sortDirection, columns, searchable, totalItems]);\r\n\r\n  // Paginaci√≥n - usar props del backend si est√°n disponibles\r\n  const totalPages = totalItems > 0 ? Math.ceil(totalItems / itemsPerPage) : Math.ceil(filteredData.length / itemsPerPage);\r\n  const paginatedData = totalItems > 0 ? data : filteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  const handleSort = (field) => {\r\n    if (!sortable) return; // No hacer nada si el ordenamiento est√° deshabilitado\r\n    \r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField !== field) return null;\r\n    return sortDirection === 'asc' ? '‚Üë' : '‚Üì';\r\n  };\r\n\r\n  const renderCell = (item, column) => {\r\n    const value = column.accessor ? item[column.accessor] : '';\r\n    \r\n    if (column.render) {\r\n      return column.render(value, item);\r\n    }\r\n    \r\n    if (column.type === 'badge') {\r\n      return (\r\n        <Badge bg={column.badgeColor || 'secondary'}>\r\n          {value}\r\n        </Badge>\r\n      );\r\n    }\r\n    \r\n    if (column.type === 'date') {\r\n      return new Date(value).toLocaleDateString('es-ES');\r\n    }\r\n    \r\n    return value;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-5\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Cargando...</span>\r\n        </div>\r\n        <p className=\"mt-2 text-muted\">Cargando datos...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`data-table ${useFlexbox ? 'd-flex flex-column h-100' : ''} ${className}`}>\r\n      {/* Barra de b√∫squeda y filtros */}\r\n      {(searchable || filterable) && (\r\n        <div className=\"table-controls bg-light p-3 rounded-top border\">\r\n          <Row className=\"align-items-center\">\r\n            {searchable && (\r\n              <Col md={6}>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiSearch />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por nombre, email, rol...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => {\r\n                      setSearchTerm(e.target.value);\r\n                      // Si hay funci√≥n onSearch del backend, llamarla con debounce\r\n                      if (onSearch) {\r\n                        clearTimeout(window.searchTimeout);\r\n                        window.searchTimeout = setTimeout(() => {\r\n                          onSearch(e.target.value);\r\n                        }, 500); // Debounce de 500ms\r\n                      }\r\n                    }}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            )}\r\n            \r\n            {filterable && (\r\n              <Col md={6} className=\"text-end\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"outline-secondary\" size=\"sm\">\r\n                    <FiFilter className=\"me-1\" />\r\n                    Filtros\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu className=\"data-table-filter-dropdown\" style={{ zIndex: 9999 }}>\r\n                    <Dropdown.Item \r\n                      className=\"data-table-filter-item\"\r\n                      onClick={() => {\r\n                        console.log('üîç DataTable - Limpiando filtros');\r\n                        onFilter && onFilter({});\r\n                      }}\r\n                    >\r\n                      Limpiar filtros\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    \r\n                    {/* Filtros din√°micos basados en filterOptions */}\r\n                    {filterOptions ? (\r\n                      filterOptions.map((section, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <Dropdown.Header className=\"data-table-filter-header\">{section.title}</Dropdown.Header>\r\n                          {section.options.map((option, optIndex) => (\r\n                            <Dropdown.Item \r\n                              key={optIndex}\r\n                              onClick={() => {\r\n                                console.log('üîç DataTable - Aplicando filtro:', option.filter);\r\n                                onFilter && onFilter(option.filter);\r\n                              }}\r\n                              className=\"data-table-filter-item\"\r\n                            >\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                          {index < filterOptions.length - 1 && <Dropdown.Divider />}\r\n                        </React.Fragment>\r\n                      ))\r\n                    ) : (\r\n                      // Filtros por defecto para usuarios\r\n                      <>\r\n                        <Dropdown.Header className=\"data-table-filter-header\">Por Rol</Dropdown.Header>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'admin' })}>\r\n                          Administradores\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'vendedor_comercial' })}>\r\n                          Vendedores Comerciales\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'jefa_comercial' })}>\r\n                          Jefas Comerciales\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'jefe_laboratorio' })}>\r\n                          Jefes de Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'usuario_laboratorio' })}>\r\n                          Usuarios de Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'soporte' })}>\r\n                          Soporte\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'gerencia' })}>\r\n                          Gerencia\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Header className=\"data-table-filter-header\">Por √Årea</Dropdown.Header>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Comercial' })}>\r\n                          Comercial\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Laboratorio' })}>\r\n                          Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Sistemas' })}>\r\n                          Sistemas\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Gerencia' })}>\r\n                          Gerencia\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Soporte' })}>\r\n                          Soporte\r\n                        </Dropdown.Item>\r\n                      </>\r\n                    )}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tabla */}\r\n      <div className={`table-responsive ${useFlexbox ? 'flex-grow-1' : ''}`}>\r\n        <Table hover className=\"mb-0\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {columns.map((column, index) => (\r\n                <th \r\n                  key={index}\r\n                  className={`${column.sortable && sortable ? 'cursor-pointer' : ''} ${column.className || ''}`}\r\n                  onClick={() => column.sortable && sortable && handleSort(column.accessor)}\r\n                  style={{ minWidth: column.width || 'auto' }}\r\n                >\r\n                  <div className=\"d-flex align-items-center\">\r\n                    {column.header}\r\n                    {column.sortable && sortable && (\r\n                      <span className=\"ms-1 text-muted\">\r\n                        {getSortIcon(column.accessor)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n              \r\n              {actions.length > 0 && (\r\n                <th width=\"120\" className=\"text-center\">Acciones</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          \r\n          <tbody>\r\n            {paginatedData.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={columns.length + (actions.length > 0 ? 1 : 0)} className=\"text-center py-5\">\r\n                  <div className=\"text-muted\">\r\n                    <FiSearch size={48} className=\"mb-3 opacity-50\" />\r\n                    <p className=\"mb-0\">{emptyMessage}</p>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              paginatedData.map((item, index) => (\r\n                <tr key={item.id || index} className={getRowClassName ? getRowClassName(item) : ''}>\r\n                  {columns.map((column, colIndex) => (\r\n                    <td key={colIndex} className={column.className || ''}>\r\n                      {renderCell(item, column)}\r\n                    </td>\r\n                  ))}\r\n                  \r\n                  {actions.length > 0 && (\r\n                    <td className=\"text-center\">\r\n                      <PortalDropdown \r\n                        actions={actions}\r\n                        item={item}\r\n                        onEdit={onEdit}\r\n                        onDelete={onDelete}\r\n                        onView={onView}\r\n                      />\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      {/* Paginaci√≥n */}\r\n      {totalPages > 1 && (\r\n        <div className=\"table-footer bg-light p-3 rounded-bottom border border-top-0\">\r\n          <Row className=\"align-items-center\">\r\n            <Col>\r\n              <small className=\"text-muted\">\r\n                Mostrando {((currentPage - 1) * itemsPerPage) + 1} a {Math.min(currentPage * itemsPerPage, totalItems || filteredData.length)} de {totalItems || filteredData.length} registros\r\n              </small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <div className=\"d-flex align-items-center gap-2\">\r\n                {/* Bot√≥n Primera p√°gina */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => onPageChange && onPageChange(1)}\r\n                  title=\"Primera p√°gina\"\r\n                >\r\n                  ¬´¬´\r\n                </Button>\r\n                \r\n                {/* Bot√≥n Anterior */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => onPageChange && onPageChange(currentPage - 1)}\r\n                  title=\"P√°gina anterior\"\r\n                >\r\n                  ¬´\r\n                </Button>\r\n                \r\n                {/* P√°ginas din√°micas (m√°ximo 3 visibles) */}\r\n                {(() => {\r\n                  const pages = [];\r\n                  const startPage = Math.max(1, currentPage - 1);\r\n                  const endPage = Math.min(totalPages, startPage + 2);\r\n                  \r\n                  for (let i = startPage; i <= endPage; i++) {\r\n                    pages.push(\r\n                      <Button\r\n                        key={i}\r\n                        variant={currentPage === i ? \"primary\" : \"outline-secondary\"}\r\n                        size=\"sm\"\r\n                        onClick={() => onPageChange && onPageChange(i)}\r\n                        className=\"px-3\"\r\n                      >\r\n                        {i}\r\n                      </Button>\r\n                    );\r\n                  }\r\n                  return pages;\r\n                })()}\r\n                \r\n                {/* Bot√≥n Siguiente */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => onPageChange && onPageChange(currentPage + 1)}\r\n                  title=\"P√°gina siguiente\"\r\n                >\r\n                  ¬ª\r\n                </Button>\r\n                \r\n                {/* Bot√≥n √öltima p√°gina */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => onPageChange && onPageChange(totalPages)}\r\n                  title=\"√öltima p√°gina\"\r\n                >\r\n                  ¬ª¬ª\r\n                </Button>\r\n                \r\n                {/* Input para ir a p√°gina espec√≠fica */}\r\n                <div className=\"d-flex align-items-center gap-1 ms-3\">\r\n                  <span className=\"text-muted small\">Ir a:</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max={totalPages}\r\n                    className=\"form-control form-control-sm\"\r\n                    style={{ width: '60px' }}\r\n                    placeholder=\"...\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        const page = parseInt(e.target.value);\r\n                        if (page >= 1 && page <= totalPages) {\r\n                          onPageChange && onPageChange(page);\r\n                          e.target.value = '';\r\n                        } else {\r\n                          // Si la p√°gina no existe, ir a la √∫ltima p√°gina\r\n                          onPageChange && onPageChange(totalPages);\r\n                          e.target.value = '';\r\n                        }\r\n                      }\r\n                    }}\r\n                    title={`Ingresa un n√∫mero del 1 al ${totalPages}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":["PortalDropdown","actions","item","onEdit","onDelete","onView","isOpen","setIsOpen","useState","position","setPosition","buttonRef","useRef","dropdownRef","handleToggle","rect","handleActionClick","action","handleClickOutside","event","useEffect","dropdownContent","jsx","actionIndex","jsxs","Fragment","FiEye","FiEdit","FiTrash2","FiMoreVertical","createPortal","DataTable","data","columns","searchable","filterable","loading","emptyMessage","className","totalItems","itemsPerPage","currentPage","onPageChange","onSearch","onFilter","filterOptions","getRowClassName","sortable","useFlexbox","searchTerm","setSearchTerm","sortField","setSortField","sortDirection","setSortDirection","filteredData","useMemo","filtered","col","value","a","b","aVal","bVal","totalPages","paginatedData","handleSort","field","getSortIcon","renderCell","column","Badge","Row","Col","InputGroup","FiSearch","Form","e","Dropdown","FiFilter","section","index","React","option","optIndex","Table","colIndex","Button","pages","startPage","endPage","i","page"],"mappings":"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"}