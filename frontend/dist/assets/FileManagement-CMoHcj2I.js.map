{"version":3,"file":"FileManagement-CMoHcj2I.js","sources":["../../src/pages/FileManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Button, ProgressBar, Alert, Table, Badge, Tabs, Tab, Spinner } from 'react-bootstrap';\r\nimport { FiHardDrive, FiFolder, FiFile, FiAlertTriangle, FiCheckCircle, FiRefreshCw, FiArchive, FiUsers, FiCalendar, FiActivity, FiDownload, FiEye } from 'react-icons/fi';\r\nimport apiFetch from '../services/api';\r\n\r\nconst FileManagement = () => {\r\n  const [storageStats, setStorageStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [monitoringActive, setMonitoringActive] = useState(true);\r\n  const [lastUpdate, setLastUpdate] = useState(new Date());\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n\r\n  // Cargar estad√≠sticas de almacenamiento\r\n  const loadStorageStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const stats = await apiFetch('/api/attachments/storage/stats');\r\n      setStorageStats(stats);\r\n      setError(null);\r\n      setLastUpdate(new Date());\r\n    } catch (err) {\r\n      console.error('Error cargando estad√≠sticas:', err);\r\n      setError('Error al cargar estad√≠sticas de almacenamiento');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Monitoreo autom√°tico\r\n  useEffect(() => {\r\n    let interval;\r\n    if (monitoringActive) {\r\n      interval = setInterval(() => {\r\n        loadStorageStats();\r\n      }, 30000); // Actualizar cada 30 segundos\r\n    }\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [monitoringActive]);\r\n\r\n  // Crear carpetas anticipatorias\r\n  const createAnticipatoryFolders = async () => {\r\n    try {\r\n      setActionLoading(true);\r\n      const result = await apiFetch('/api/attachments/storage/create-folders', {\r\n        method: 'POST'\r\n      });\r\n      await loadStorageStats();\r\n      \r\n      // Mostrar informaci√≥n detallada\r\n      let message = `‚úÖ ${result.message}`;\r\n      if (result.createdFolders && result.createdFolders.length > 0) {\r\n        message += `\\n\\nüìÅ Carpetas creadas:`;\r\n        result.createdFolders.forEach(folder => {\r\n          message += `\\n‚Ä¢ ${folder.path} (${folder.type})`;\r\n        });\r\n      }\r\n      if (result.existingFolders && result.existingFolders.length > 0) {\r\n        message += `\\n\\n‚úÖ Carpetas existentes: ${result.existingFolders.length}`;\r\n      }\r\n      if (result.daysUntilMonthEnd !== undefined) {\r\n        message += `\\n\\nüìÖ D√≠as hasta fin de mes: ${result.daysUntilMonthEnd}`;\r\n      }\r\n      \r\n      alert(message);\r\n    } catch (err) {\r\n      console.error('Error creando carpetas:', err);\r\n      alert('‚ùå Error al crear carpetas anticipatorias');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  // Comprimir carpetas antiguas\r\n  const compressOldFolders = async () => {\r\n    try {\r\n      setActionLoading(true);\r\n      await apiFetch('/api/attachments/storage/compress', {\r\n        method: 'POST'\r\n      });\r\n      await loadStorageStats();\r\n      alert('‚úÖ Compresi√≥n de carpetas antiguas completada');\r\n    } catch (err) {\r\n      console.error('Error comprimiendo carpetas:', err);\r\n      alert('‚ùå Error al comprimir carpetas');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  // Obtener estad√≠sticas por cliente\r\n  const getClientStats = () => {\r\n    if (!storageStats?.folders) return [];\r\n    \r\n    const clientStats = {};\r\n    storageStats.folders.forEach(folder => {\r\n      // Extraer informaci√≥n del cliente desde la ruta del proyecto\r\n      const projectMatches = folder.path.match(/project_(\\d+)/g);\r\n      if (projectMatches) {\r\n        projectMatches.forEach(match => {\r\n          const projectId = match.replace('project_', '');\r\n          if (!clientStats[projectId]) {\r\n            clientStats[projectId] = {\r\n              projectId,\r\n              totalSize: 0,\r\n              fileCount: 0,\r\n              folders: []\r\n            };\r\n          }\r\n          clientStats[projectId].totalSize += folder.size;\r\n          clientStats[projectId].fileCount += folder.fileCount;\r\n          clientStats[projectId].folders.push(folder);\r\n        });\r\n      }\r\n    });\r\n    \r\n    return Object.values(clientStats).sort((a, b) => b.totalSize - a.totalSize);\r\n  };\r\n\r\n  // Obtener archivos comprimidos\r\n  const getCompressedFiles = () => {\r\n    if (!storageStats?.folders) return [];\r\n    return storageStats.folders.filter(folder => \r\n      folder.path.includes('.zip') || folder.path.includes('.rar')\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStorageStats();\r\n  }, []);\r\n\r\n  // Formatear tama√±o de archivo\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  // Obtener color de alerta\r\n  const getAlertColor = (level) => {\r\n    switch (level) {\r\n      case 'red': return 'danger';\r\n      case 'orange': return 'warning';\r\n      case 'yellow': return 'info';\r\n      default: return 'success';\r\n    }\r\n  };\r\n\r\n  // Obtener icono de alerta\r\n  const getAlertIcon = (level) => {\r\n    switch (level) {\r\n      case 'red': return <FiAlertTriangle className=\"text-danger\" />;\r\n      case 'orange': return <FiAlertTriangle className=\"text-warning\" />;\r\n      case 'yellow': return <FiAlertTriangle className=\"text-info\" />;\r\n      default: return <FiCheckCircle className=\"text-success\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"mt-4\">\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Cargando...</span>\r\n          </div>\r\n          <p className=\"mt-2\">Cargando estad√≠sticas de almacenamiento...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"mt-4\">\r\n        <Alert variant=\"danger\">\r\n          <FiAlertTriangle className=\"me-2\" />\r\n          {error}\r\n          <Button variant=\"outline-danger\" size=\"sm\" className=\"ms-2\" onClick={loadStorageStats}>\r\n            <FiRefreshCw className=\"me-1\" />\r\n            Reintentar\r\n          </Button>\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h2>\r\n                <FiHardDrive className=\"me-2\" />\r\n                Gesti√≥n de Archivos\r\n              </h2>\r\n              <p className=\"text-muted\">Sistema inteligente de organizaci√≥n y monitoreo de almacenamiento</p>\r\n            </div>\r\n            <div className=\"d-flex align-items-center gap-3\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <FiActivity className={`me-2 ${monitoringActive ? 'text-success' : 'text-muted'}`} />\r\n                <span className={monitoringActive ? 'text-success' : 'text-muted'}>\r\n                  Monitoreo {monitoringActive ? 'Activo' : 'Inactivo'}\r\n                </span>\r\n              </div>\r\n              <Button \r\n                variant={monitoringActive ? 'outline-danger' : 'outline-success'}\r\n                size=\"sm\"\r\n                onClick={() => setMonitoringActive(!monitoringActive)}\r\n              >\r\n                {monitoringActive ? 'Pausar' : 'Activar'} Monitoreo\r\n              </Button>\r\n              <small className=\"text-muted\">\r\n                √öltima actualizaci√≥n: {lastUpdate.toLocaleTimeString()}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Sistema de Tabs */}\r\n      <Tabs activeKey={activeTab} onSelect={setActiveTab} className=\"mb-4\">\r\n        <Tab eventKey=\"overview\" title={\r\n          <span><FiHardDrive className=\"me-1\" />Resumen</span>\r\n        }>\r\n          <Row className=\"mb-4\">\r\n            <Col md={8}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h5 className=\"mb-0\">\r\n                    <FiHardDrive className=\"me-2\" />\r\n                    Estado del Almacenamiento\r\n                  </h5>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"d-flex justify-content-between mb-2\">\r\n                      <span>Uso de almacenamiento</span>\r\n                      <span className=\"fw-bold\">\r\n                        {formatFileSize(storageStats.totalSize)} / {formatFileSize(storageStats.maxSize)}\r\n                        <Badge bg={getAlertColor(storageStats.alertLevel)} className=\"ms-2\">\r\n                          {storageStats.usagePercentage}%\r\n                        </Badge>\r\n                      </span>\r\n                    </div>\r\n                    <ProgressBar \r\n                      now={storageStats.usagePercentage} \r\n                      variant={getAlertColor(storageStats.alertLevel)}\r\n                      style={{ height: '20px' }}\r\n                    />\r\n                  </div>\r\n                  \r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <div className=\"text-center p-3 border rounded\">\r\n                        <FiFile className=\"h3 text-primary mb-2\" />\r\n                        <h6>Espacio Libre</h6>\r\n                        <h4 className=\"text-success\">{formatFileSize(storageStats.freeSpace)}</h4>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <div className=\"text-center p-3 border rounded\">\r\n                        {getAlertIcon(storageStats.alertLevel)}\r\n                        <h6>Estado</h6>\r\n                        <h4 className={`text-${getAlertColor(storageStats.alertLevel)}`}>\r\n                          {storageStats.alertLevel.toUpperCase()}\r\n                        </h4>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            \r\n            <Col md={4}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h5 className=\"mb-0\">Acciones</h5>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button \r\n                      variant=\"primary\" \r\n                      onClick={loadStorageStats}\r\n                      disabled={actionLoading}\r\n                    >\r\n                      <FiRefreshCw className=\"me-2\" />\r\n                      Actualizar Estad√≠sticas\r\n                    </Button>\r\n                    \r\n                    <Button \r\n                      variant=\"success\" \r\n                      onClick={createAnticipatoryFolders}\r\n                      disabled={actionLoading}\r\n                    >\r\n                      <FiFolder className=\"me-2\" />\r\n                      Crear Carpetas Anticipatorias\r\n                    </Button>\r\n                    \r\n                    <Button \r\n                      variant=\"warning\" \r\n                      onClick={compressOldFolders}\r\n                      disabled={actionLoading}\r\n                    >\r\n                      <FiArchive className=\"me-2\" />\r\n                      Comprimir Carpetas Antiguas\r\n                    </Button>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Alertas del sistema */}\r\n          {storageStats.alertLevel !== 'green' && (\r\n            <Row className=\"mb-4\">\r\n              <Col>\r\n                <Alert variant={getAlertColor(storageStats.alertLevel)}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    {getAlertIcon(storageStats.alertLevel)}\r\n                    <div className=\"ms-2\">\r\n                      <strong>Alerta de Almacenamiento</strong>\r\n                      <p className=\"mb-0\">\r\n                        {storageStats.alertLevel === 'red' && '‚ö†Ô∏è CR√çTICO: Almacenamiento al 95% o m√°s. Se requiere acci√≥n inmediata.'}\r\n                        {storageStats.alertLevel === 'orange' && '‚ö†Ô∏è ADVERTENCIA: Almacenamiento al 85% o m√°s. Considere comprimir archivos antiguos.'}\r\n                        {storageStats.alertLevel === 'yellow' && '‚ÑπÔ∏è INFORMACI√ìN: Almacenamiento al 70% o m√°s. Monitoree el uso.'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"by-month\" title={\r\n          <span><FiCalendar className=\"me-1\" />Por Mes</span>\r\n        }>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">\r\n                <FiCalendar className=\"me-2\" />\r\n                Carpetas por Mes\r\n              </h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped>\r\n                <thead>\r\n                  <tr>\r\n                    <th>A√±o</th>\r\n                    <th>Mes</th>\r\n                    <th>Tama√±o</th>\r\n                    <th>Archivos</th>\r\n                    <th>Estado</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {storageStats.folders.map((folder, index) => (\r\n                    <tr key={index}>\r\n                      <td>{folder.year}</td>\r\n                      <td>{folder.month}</td>\r\n                      <td>{formatFileSize(folder.size)}</td>\r\n                      <td>{folder.fileCount}</td>\r\n                      <td>\r\n                        <Badge bg={folder.size > 100 * 1024 * 1024 ? 'warning' : 'success'}>\r\n                          {folder.size > 100 * 1024 * 1024 ? 'Grande' : 'Normal'}\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                          <FiEye className=\"me-1\" />\r\n                          Ver\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"by-client\" title={\r\n          <span><FiUsers className=\"me-1\" />Por Cliente</span>\r\n        }>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">\r\n                <FiUsers className=\"me-2\" />\r\n                Archivos por Cliente/Proyecto\r\n              </h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Proyecto ID</th>\r\n                    <th>Tama√±o Total</th>\r\n                    <th>Archivos</th>\r\n                    <th>Carpetas</th>\r\n                    <th>Estado</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getClientStats().map((client, index) => (\r\n                    <tr key={index}>\r\n                      <td>Proyecto #{client.projectId}</td>\r\n                      <td>{formatFileSize(client.totalSize)}</td>\r\n                      <td>{client.fileCount}</td>\r\n                      <td>{client.folders.length}</td>\r\n                      <td>\r\n                        <Badge bg={client.totalSize > 50 * 1024 * 1024 ? 'warning' : 'success'}>\r\n                          {client.totalSize > 50 * 1024 * 1024 ? 'Grande' : 'Normal'}\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                          <FiEye className=\"me-1\" />\r\n                          Ver Detalles\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"compressed\" title={\r\n          <span><FiArchive className=\"me-1\" />Comprimidos</span>\r\n        }>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">\r\n                <FiArchive className=\"me-2\" />\r\n                Archivos Comprimidos\r\n              </h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {getCompressedFiles().length > 0 ? (\r\n                <Table responsive striped>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Archivo</th>\r\n                      <th>Tama√±o</th>\r\n                      <th>Fecha</th>\r\n                      <th>Estado</th>\r\n                      <th>Acciones</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {getCompressedFiles().map((file, index) => (\r\n                      <tr key={index}>\r\n                        <td>{file.path.split('/').pop()}</td>\r\n                        <td>{formatFileSize(file.size)}</td>\r\n                        <td>{new Date().toLocaleDateString()}</td>\r\n                        <td>\r\n                          <Badge bg=\"success\">Comprimido</Badge>\r\n                        </td>\r\n                        <td>\r\n                          <Button variant=\"outline-success\" size=\"sm\">\r\n                            <FiDownload className=\"me-1\" />\r\n                            Descargar\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <div className=\"text-center py-4\">\r\n                  <FiArchive className=\"h1 text-muted mb-3\" />\r\n                  <h5>No hay archivos comprimidos</h5>\r\n                  <p className=\"text-muted\">Los archivos se comprimen autom√°ticamente cuando el almacenamiento supera el 90%</p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FileManagement;\r\n"],"names":["FileManagement","storageStats","setStorageStats","useState","loading","setLoading","error","setError","actionLoading","setActionLoading","monitoringActive","setMonitoringActive","lastUpdate","setLastUpdate","activeTab","setActiveTab","loadStorageStats","stats","apiFetch","err","useEffect","interval","createAnticipatoryFolders","result","message","folder","compressOldFolders","getClientStats","clientStats","projectMatches","match","projectId","a","b","getCompressedFiles","formatFileSize","bytes","k","sizes","i","getAlertColor","level","getAlertIcon","jsx","FiAlertTriangle","FiCheckCircle","Container","jsxs","Alert","Button","FiRefreshCw","Row","Col","FiHardDrive","FiActivity","Tabs","Tab","Card","Badge","ProgressBar","FiFile","FiFolder","FiArchive","FiCalendar","Table","index","FiEye","FiUsers","client","file","FiDownload"],"mappings":"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"}