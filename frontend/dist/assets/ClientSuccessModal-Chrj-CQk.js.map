{"version":3,"file":"ClientSuccessModal-Chrj-CQk.js","sources":["../../src/services/clientComments.js","../../src/components/ClientChat.jsx","../../src/components/ClientCostTab.jsx","../../src/components/ClientHistoryModal.jsx","../../src/components/ClientSuccessModal.jsx"],"sourcesContent":["import apiFetch from './api';\r\n\r\nconst clientCommentsService = {\r\n  /**\r\n   * Crear un nuevo comentario\r\n   */\r\n  async createComment(companyId, comment) {\r\n    try {\r\n      console.log('💬 Creando comentario para cliente:', companyId);\r\n      const response = await apiFetch('/api/client-comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          company_id: companyId,\r\n          comment: comment\r\n        })\r\n      });\r\n      console.log('✅ Comentario creado:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error creando comentario:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener comentarios de un cliente\r\n   */\r\n  async getCommentsByCompany(companyId) {\r\n    try {\r\n      const response = await apiFetch(`/api/client-comments/company/${companyId}`, {\r\n        method: 'GET'\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error obteniendo comentarios:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Actualizar un comentario\r\n   */\r\n  async updateComment(commentId, comment) {\r\n    try {\r\n      console.log('💬 Actualizando comentario:', commentId);\r\n      const response = await apiFetch(`/api/client-comments/${commentId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          comment: comment\r\n        })\r\n      });\r\n      console.log('✅ Comentario actualizado:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error actualizando comentario:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Eliminar un comentario\r\n   */\r\n  async deleteComment(commentId) {\r\n    try {\r\n      console.log('💬 Eliminando comentario:', commentId);\r\n      const response = await apiFetch(`/api/client-comments/${commentId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      console.log('✅ Comentario eliminado:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error eliminando comentario:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Marcar comentarios como leídos\r\n   */\r\n  async markCommentsAsRead(companyId) {\r\n    try {\r\n      console.log('💬 Marcando comentarios como leídos para cliente:', companyId);\r\n      const response = await apiFetch(`/api/client-comments/company/${companyId}/mark-read`, {\r\n        method: 'POST'\r\n      });\r\n      console.log('✅ Comentarios marcados como leídos:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error marcando comentarios como leídos:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener comentarios no leídos\r\n   */\r\n  async getUnreadComments() {\r\n    try {\r\n      console.log('💬 Obteniendo comentarios no leídos');\r\n      const response = await apiFetch('/api/client-comments/unread', {\r\n        method: 'GET'\r\n      });\r\n      console.log('✅ Comentarios no leídos obtenidos:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error obteniendo comentarios no leídos:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener comentarios recientes\r\n   */\r\n  async getRecentComments(limit = 10) {\r\n    try {\r\n      console.log('💬 Obteniendo comentarios recientes');\r\n      const response = await apiFetch(`/api/client-comments/recent?limit=${limit}`, {\r\n        method: 'GET'\r\n      });\r\n      console.log('✅ Comentarios recientes obtenidos:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error obteniendo comentarios recientes:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener estadísticas de comentarios\r\n   */\r\n  async getCommentsStats() {\r\n    try {\r\n      console.log('💬 Obteniendo estadísticas de comentarios');\r\n      const response = await apiFetch('/api/client-comments/stats', {\r\n        method: 'GET'\r\n      });\r\n      console.log('✅ Estadísticas obtenidas:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('❌ Error obteniendo estadísticas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default clientCommentsService;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { FiMessageSquare, FiSend, FiUser, FiClock, FiCheck } from 'react-icons/fi';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport clientCommentsService from '../services/clientComments';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport './ClientChat.css';\r\n\r\nconst ClientChat = ({ companyId }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const queryClient = useQueryClient();\r\n  const { user } = useAuth();\r\n  const socket = useSocket();\r\n\r\n  // Obtener comentarios del cliente\r\n  const { data: commentsData, isLoading, error } = useQuery(\r\n    ['client-comments', companyId],\r\n    () => clientCommentsService.getCommentsByCompany(companyId),\r\n    {\r\n      refetchInterval: false, // Deshabilitar refetch automático\r\n      refetchOnWindowFocus: false, // No refetch al cambiar de ventana\r\n      enabled: !!companyId, // Solo ejecutar si companyId existe\r\n      retry: 1, // Solo reintentar una vez en caso de error\r\n      staleTime: 5 * 60 * 1000, // Cache por 5 minutos\r\n      onError: (error) => {\r\n        console.error('Error cargando comentarios:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  const comments = commentsData?.comments || [];\r\n\r\n  // Efecto para marcar comentarios como leídos (solo una vez)\r\n  useEffect(() => {\r\n    if (commentsData && commentsData.comments && commentsData.comments.length > 0 && companyId) {\r\n      clientCommentsService.markCommentsAsRead(companyId).catch(console.error);\r\n    }\r\n  }, [commentsData, companyId]);\r\n\r\n  // Mutación para crear comentario\r\n  const createCommentMutation = useMutation(\r\n    ({ companyId, comment }) => clientCommentsService.createComment(companyId, comment),\r\n    {\r\n      onSuccess: () => {\r\n        setNewComment('');\r\n        queryClient.invalidateQueries(['client-comments', companyId]);\r\n        // Comentario enviado silenciosamente\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error creando comentario:', error);\r\n        // Error manejado silenciosamente, solo en consola\r\n      }\r\n    }\r\n  );\r\n\r\n  // Scroll automático al final\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [comments]);\r\n\r\n  // WebSocket para comentarios en tiempo real\r\n  useEffect(() => {\r\n    if (socket && socket.on) {\r\n      const handleNewComment = (data) => {\r\n        if (data.company_id === companyId) {\r\n          queryClient.invalidateQueries(['client-comments', companyId]);\r\n        }\r\n      };\r\n\r\n      socket.on('new_client_comment', handleNewComment);\r\n\r\n      return () => {\r\n        socket.off('new_client_comment', handleNewComment);\r\n      };\r\n    }\r\n  }, [socket, companyId, queryClient]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() && !createCommentMutation.isLoading) {\r\n      createCommentMutation.mutate({ companyId, comment: newComment.trim() });\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInHours = (now - date) / (1000 * 60 * 60);\r\n\r\n    if (diffInHours < 1) {\r\n      return 'Hace unos minutos';\r\n    } else if (diffInHours < 24) {\r\n      return `Hace ${Math.floor(diffInHours)} horas`;\r\n    } else if (diffInHours < 48) {\r\n      return 'Ayer';\r\n    } else {\r\n      return date.toLocaleDateString('es-ES', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInitials = (name, apellido) => {\r\n    const firstInitial = name ? name.charAt(0).toUpperCase() : 'U';\r\n    const lastInitial = apellido ? apellido.charAt(0).toUpperCase() : '';\r\n    return firstInitial + lastInitial;\r\n  };\r\n\r\n  const getRoleColor = (role) => {\r\n    switch (role) {\r\n      case 'admin':\r\n        return '#dc3545';\r\n      case 'comercial':\r\n        return '#28a745';\r\n      case 'vendedor':\r\n        return '#007bff';\r\n      case 'soporte':\r\n        return '#ffc107';\r\n      default:\r\n        return '#6c757d';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"client-chat-container\">\r\n        <div className=\"chat-header\">\r\n          <FiMessageSquare className=\"chat-icon\" />\r\n          <h3>Comentarios del Cliente</h3>\r\n        </div>\r\n        <div className=\"chat-loading\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Cargando comentarios...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"client-chat-container\">\r\n        <div className=\"chat-header\">\r\n          <FiMessageSquare className=\"chat-icon\" />\r\n          <h3>Comentarios del Cliente</h3>\r\n        </div>\r\n        <div className=\"chat-error\">\r\n          <p>❌ Error al cargar comentarios</p>\r\n          <small>Por favor, intenta nuevamente</small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-chat-container\">\r\n      <div className=\"chat-header\">\r\n        <FiMessageSquare className=\"chat-icon\" />\r\n        <h3>Comentarios del Cliente</h3>\r\n        <span className=\"comment-count\">{comments.length} comentarios</span>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {comments.length === 0 ? (\r\n          <div className=\"no-comments\">\r\n            <FiMessageSquare className=\"no-comments-icon\" />\r\n            <p>No hay comentarios aún</p>\r\n            <small>Sé el primero en comentar sobre este cliente</small>\r\n          </div>\r\n        ) : (\r\n          comments.map((comment) => (\r\n            <div\r\n              key={comment.id}\r\n              className={`message ${comment.user_id === user.id ? 'own-message' : 'other-message'}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {comment.user_name ? (\r\n                  <div\r\n                    className=\"avatar-circle\"\r\n                    style={{ backgroundColor: getRoleColor(comment.user_role) }}\r\n                  >\r\n                    {getInitials(comment.user_name, comment.user_apellido)}\r\n                  </div>\r\n                ) : (\r\n                  <FiUser className=\"avatar-icon\" />\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"message-content\">\r\n                <div className=\"message-header\">\r\n                  <span className=\"user-name\">\r\n                    {comment.user_name && comment.user_apellido\r\n                      ? `${comment.user_name} ${comment.user_apellido}`\r\n                      : comment.user_name || 'Usuario'}\r\n                  </span>\r\n                  <span className=\"user-role\" style={{ color: getRoleColor(comment.user_role) }}>\r\n                    {comment.user_role}\r\n                  </span>\r\n                  <span className=\"message-time\">\r\n                    <FiClock className=\"time-icon\" />\r\n                    {formatDate(comment.created_at)}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className=\"message-text\">\r\n                  {comment.comment}\r\n                </div>\r\n                \r\n                {comment.is_system && (\r\n                  <div className=\"system-message-badge\">\r\n                    <FiCheck className=\"system-icon\" />\r\n                    Mensaje del sistema\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form className=\"chat-input-form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Escribe un comentario sobre este cliente...\"\r\n            className=\"comment-input\"\r\n            rows=\"2\"\r\n            disabled={createCommentMutation.isLoading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={!newComment.trim() || createCommentMutation.isLoading}\r\n          >\r\n            <FiSend className=\"send-icon\" />\r\n          </button>\r\n        </div>\r\n        {createCommentMutation.isLoading && (\r\n          <div className=\"sending-indicator\">\r\n            <div className=\"spinner small\"></div>\r\n            <span>Enviando...</span>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientChat;\r\n","import React from 'react';\r\nimport { Card, Row, Col, Badge, Spinner, Alert } from 'react-bootstrap';\r\nimport { FiDollarSign, FiFileText, FiTrendingUp, FiCheckCircle, FiClock, FiAlertCircle } from 'react-icons/fi';\r\nimport { useQuery } from 'react-query';\r\nimport { getCompanyWithTotals } from '../services/companies';\r\n\r\nconst ClientCostTab = ({ clientId }) => {\r\n  const { data: clientData, isLoading, error } = useQuery(\r\n    ['client-with-totals', clientId],\r\n    () => getCompanyWithTotals(clientId),\r\n    {\r\n      enabled: !!clientId,\r\n      staleTime: 60000, // Cache por 1 minuto\r\n      onError: (err) => {\r\n        console.error('Error cargando datos del cliente con totales:', err);\r\n      }\r\n    }\r\n  );\r\n\r\n  const client = clientData?.data || clientData?.company || clientData;\r\n\r\n  if (!clientId) {\r\n    return (\r\n      <Alert variant=\"info\">\r\n        <FiAlertCircle className=\"me-2\" />\r\n        No se ha seleccionado ningún cliente.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center py-5\">\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n        <span className=\"ms-2\">Cargando información de costos...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <FiAlertCircle className=\"me-2\" />\r\n        Error al cargar la información de costos del cliente.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!client) {\r\n    return (\r\n      <Alert variant=\"warning\">\r\n        <FiAlertCircle className=\"me-2\" />\r\n        No se encontraron datos para el cliente seleccionado.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  // Función para formatear moneda\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('es-PE', {\r\n      style: 'currency',\r\n      currency: 'PEN',\r\n      minimumFractionDigits: 2\r\n    }).format(amount || 0);\r\n  };\r\n\r\n  // Función para obtener el color del badge según el estado\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      'borrador': 'secondary',\r\n      'cotizacion_enviada': 'info',\r\n      'en_negociacion': 'warning',\r\n      'ganado': 'success',\r\n      'perdido': 'danger',\r\n      'aprobada': 'primary',\r\n      'facturada': 'success'\r\n    };\r\n    return colors[status] || 'secondary';\r\n  };\r\n\r\n  return (\r\n    <div className=\"client-cost-tab\">\r\n      {/* Header con información del cliente */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Header className=\"bg-primary text-white\">\r\n          <h5 className=\"mb-0\">\r\n            <FiDollarSign className=\"me-2\" />\r\n            Información de Costos - {client.name}\r\n          </h5>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <p className=\"text-dark\"><strong>RUC/DNI:</strong> {client.ruc || client.dni || 'No especificado'}</p>\r\n              <p className=\"text-dark\"><strong>Contacto:</strong> {client.contact_name || 'No especificado'}</p>\r\n            </Col>\r\n            <Col md={6}>\r\n              <p className=\"text-dark\"><strong>Email:</strong> {client.email || 'No especificado'}</p>\r\n              <p className=\"text-dark\"><strong>Teléfono:</strong> {client.phone || 'No especificado'}</p>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Resumen de totales */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <Card className=\"text-center h-100\">\r\n            <Card.Body>\r\n              <FiDollarSign className=\"text-primary mb-2\" size={32} />\r\n              <h4 className=\"text-primary\">{formatCurrency(client.total_accumulated)}</h4>\r\n              <p className=\"text-dark mb-0\">Total Acumulado</p>\r\n              <small className=\"text-dark\">(Solo cotizaciones)</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center h-100\">\r\n            <Card.Body>\r\n              <FiFileText className=\"text-info mb-2\" size={32} />\r\n              <h4 className=\"text-info\">{client.quotes_count || 0}</h4>\r\n              <p className=\"text-dark mb-0\">Cotizaciones</p>\r\n              <small className=\"text-dark\">(No aprobadas para facturación)</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center h-100\">\r\n            <Card.Body>\r\n              <FiTrendingUp className=\"text-success mb-2\" size={32} />\r\n              <h4 className=\"text-success\">{formatCurrency(client.won_quotes_total || 0)}</h4>\r\n              <p className=\"text-dark mb-0\">Cotizaciones Ganadas</p>\r\n              <small className=\"text-dark\">(Estado: Ganado)</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Desglose detallado */}\r\n      <Row>\r\n        <Col md={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiFileText className=\"me-2\" />\r\n                Desglose de Cotizaciones\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Total Cotizado:</span>\r\n                <Badge bg=\"primary\">{formatCurrency(client.total_quoted || 0)}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Cotizaciones Ganadas:</span>\r\n                <Badge bg=\"success\">{formatCurrency(client.won_quotes_total || 0)}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Número de Cotizaciones:</span>\r\n                <Badge bg=\"info\">{client.quotes_count || 0}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Cotizaciones Ganadas:</span>\r\n                <Badge bg=\"success\">{client.won_quotes_count || 0}</Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiCheckCircle className=\"me-2\" />\r\n                Información de Referencia\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Aprobadas para Facturación:</span>\r\n                <Badge bg=\"warning\">{formatCurrency(client.approved_for_billing || 0)}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Cantidad Aprobadas:</span>\r\n                <Badge bg=\"warning\">{client.approved_count || 0}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Total General:</span>\r\n                <Badge bg=\"secondary\">{formatCurrency(client.total_all_quotes || 0)}</Badge>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <span className=\"text-dark\">Total Cotizaciones:</span>\r\n                <Badge bg=\"secondary\">{client.total_quotes_count || 0}</Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Proyectos asociados */}\r\n      <Row className=\"mt-4\">\r\n        <Col md={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiClock className=\"me-2\" />\r\n                Proyectos Asociados\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <span className=\"text-dark\">Total de Proyectos:</span>\r\n                    <Badge bg=\"info\">{client.projects_count || 0}</Badge>\r\n                  </div>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <span className=\"text-dark\">Proyectos Completados:</span>\r\n                    <Badge bg=\"success\">{client.completed_projects_count || 0}</Badge>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Nota explicativa */}\r\n      <Alert variant=\"info\" className=\"mt-4\">\r\n        <FiAlertCircle className=\"me-2\" />\r\n        <strong>Nota:</strong> El \"Total Acumulado\" incluye únicamente las cotizaciones que no han sido aprobadas para facturación. \r\n        Las cotizaciones aprobadas y facturadas se muestran como información de referencia en la sección correspondiente.\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientCostTab;\r\n","import React from 'react';\r\nimport { Modal, Tab, Tabs, Table, Badge, Row, Col, Card } from 'react-bootstrap';\r\nimport { useQuery } from 'react-query';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getClientHistory } from '../services/companies';\r\nimport ClientChat from './ClientChat';\r\nimport ClientCostTab from './ClientCostTab';\r\nimport { \r\n  FiFileText, FiHome, FiUser, FiCalendar, \r\n  FiDollarSign, FiTrendingUp, FiCheckCircle, FiX,\r\n  FiClock, FiSend, FiMessageSquare, FiSearch, FiActivity\r\n} from 'react-icons/fi';\r\n\r\nconst STATUS_CONFIG = {\r\n  // Estados de cotizaciones\r\n  'nuevo': { label: 'Nuevo', variant: 'primary', icon: FiClock },\r\n  'cotizacion_enviada': { label: 'Cotización Enviada', variant: 'info', icon: FiSend },\r\n  'pendiente_cotizacion': { label: 'Pendiente de Cotización', variant: 'warning', icon: FiClock },\r\n  'en_negociacion': { label: 'En Negociación', variant: 'secondary', icon: FiMessageSquare },\r\n  'seguimiento': { label: 'Seguimiento', variant: 'info', icon: FiTrendingUp },\r\n  'ganado': { label: 'Ganado', variant: 'success', icon: FiCheckCircle },\r\n  'perdido': { label: 'Perdido', variant: 'danger', icon: FiX },\r\n  \r\n  // Estados de proyectos\r\n  'activo': { label: 'Activo', variant: 'success', icon: FiCheckCircle },\r\n  'completado': { label: 'Completado', variant: 'primary', icon: FiCheckCircle },\r\n  'pausado': { label: 'Pausado', variant: 'warning', icon: FiClock },\r\n  'cancelado': { label: 'Cancelado', variant: 'danger', icon: FiX },\r\n};\r\n\r\nconst ClientHistoryModal = ({ show, onHide, clientId, clientName }) => {\r\n  const navigate = useNavigate();\r\n  \r\n  const { data: historyData, isLoading, error } = useQuery(\r\n    ['clientHistory', clientId],\r\n    () => getClientHistory(clientId),\r\n    {\r\n      enabled: show && !!clientId,\r\n      staleTime: 5 * 60 * 1000, // 5 minutos\r\n    }\r\n  );\r\n\r\n  const getStatusBadge = (status, type = 'quote') => {\r\n    const config = STATUS_CONFIG[status] || { label: status, variant: 'secondary', icon: FiFileText };\r\n    const Icon = config.icon;\r\n    \r\n    return (\r\n      <Badge bg={config.variant} className=\"d-flex align-items-center gap-1\">\r\n        <Icon size={12} />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('es-PE', {\r\n      style: 'currency',\r\n      currency: 'PEN'\r\n    }).format(amount);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Modal show={show} onHide={onHide} size=\"xl\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Historial de {clientName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Cargando...</span>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Modal show={show} onHide={onHide} size=\"xl\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Historial de {clientName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"alert alert-danger\">\r\n            Error al cargar el historial: {error.message}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  const history = historyData?.data || { quotes: [], projects: [], manager: null, stats: {} };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"xl\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <FiActivity className=\"me-2\" />\r\n          Historial de {clientName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Información del gestor */}\r\n        {history.manager && (\r\n          <Card className=\"mb-4\">\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h6><FiUser className=\"me-2\" />Gestor Actual</h6>\r\n                  <p className=\"mb-1\"><strong>{history.manager.name}</strong></p>\r\n                  <p className=\"mb-1 text-muted\">{history.manager.role}</p>\r\n                  <p className=\"mb-0 text-muted\">{history.manager.email}</p>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <h6>Estadísticas</h6>\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-primary mb-0\">{history.stats.totalQuotes}</h4>\r\n                        <small className=\"text-muted\">Cotizaciones</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-success mb-0\">{history.stats.totalProjects}</h4>\r\n                        <small className=\"text-muted\">Proyectos</small>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n\r\n        <Tabs defaultActiveKey=\"quotes\" className=\"mb-3\">\r\n          {/* Tab de Cotizaciones */}\r\n          <Tab eventKey=\"quotes\" title={\r\n            <span>\r\n              <FiFileText className=\"me-1\" />\r\n              Cotizaciones ({history.quotes.length})\r\n            </span>\r\n          }>\r\n            {history.quotes.length > 0 ? (\r\n              <Table responsive striped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Total</th>\r\n                    <th>Estado</th>\r\n                    <th>Creado por</th>\r\n                    <th>Fecha Creación</th>\r\n                    <th>Última Actualización</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.quotes.map((quote) => (\r\n                    <tr key={quote.id}>\r\n                      <td>\r\n                        <strong>#{quote.id}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <FiDollarSign className=\"me-1\" />\r\n                        {formatCurrency(quote.total)}\r\n                      </td>\r\n                      <td>\r\n                        {getStatusBadge(quote.status, 'quote')}\r\n                      </td>\r\n                      <td>\r\n                        <div>\r\n                          <div>{quote.created_by_name}</div>\r\n                          <small className=\"text-muted\">{quote.created_by_role}</small>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <FiCalendar className=\"me-1\" />\r\n                        {formatDate(quote.created_at)}\r\n                      </td>\r\n                      <td>\r\n                        <FiCalendar className=\"me-1\" />\r\n                        {formatDate(quote.updated_at)}\r\n                      </td>\r\n                      <td>\r\n                        <button \r\n                          className=\"btn btn-sm btn-outline-primary\"\r\n                          onClick={() => {\r\n                            console.log('🔍 Navegando a cotización:', quote.id);\r\n                            navigate(`/cotizaciones/${quote.id}`);\r\n                            onHide(); // Cerrar el modal\r\n                          }}\r\n                          title=\"Ver detalles de la cotización\"\r\n                        >\r\n                          <FiSearch className=\"me-1\" />\r\n                          Ver Detalles\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <div className=\"text-center py-4\">\r\n                <FiFileText size={48} className=\"text-muted mb-3\" />\r\n                <p className=\"text-muted\">No hay cotizaciones registradas para este cliente</p>\r\n              </div>\r\n            )}\r\n          </Tab>\r\n\r\n          {/* Tab de Proyectos */}\r\n          <Tab eventKey=\"projects\" title={\r\n            <span>\r\n              <FiHome className=\"me-1\" />\r\n              Proyectos ({history.projects.length})\r\n            </span>\r\n          }>\r\n            {history.projects.length > 0 ? (\r\n              <Table responsive striped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Nombre</th>\r\n                    <th>Estado</th>\r\n                    <th>Creado por</th>\r\n                    <th>Fecha Creación</th>\r\n                    <th>Última Actualización</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.projects.map((project) => (\r\n                    <tr key={project.id}>\r\n                      <td>\r\n                        <strong>#{project.id}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <FiHome className=\"me-1\" />\r\n                        {project.name}\r\n                      </td>\r\n                      <td>\r\n                        {getStatusBadge(project.status, 'project')}\r\n                      </td>\r\n                      <td>\r\n                        <div>\r\n                          <div>{project.created_by_name}</div>\r\n                          <small className=\"text-muted\">{project.created_by_role}</small>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <FiCalendar className=\"me-1\" />\r\n                        {formatDate(project.created_at)}\r\n                      </td>\r\n                      <td>\r\n                        <FiCalendar className=\"me-1\" />\r\n                        {formatDate(project.updated_at)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <div className=\"text-center py-4\">\r\n                <FiHome size={48} className=\"text-muted mb-3\" />\r\n                <p className=\"text-muted\">No hay proyectos registrados para este cliente</p>\r\n              </div>\r\n            )}\r\n          </Tab>\r\n\r\n          {/* Tab de Comentarios */}\r\n          <Tab eventKey=\"comments\" title={\r\n            <span>\r\n              <FiMessageSquare className=\"me-1\" />\r\n              Comentarios\r\n            </span>\r\n          }>\r\n            <ClientChat companyId={clientId} />\r\n          </Tab>\r\n\r\n          {/* Tab de Costos */}\r\n          <Tab eventKey=\"costs\" title={\r\n            <span>\r\n              <FiDollarSign className=\"me-1\" />\r\n              Costos\r\n            </span>\r\n          }>\r\n            <ClientCostTab clientId={clientId} />\r\n          </Tab>\r\n        </Tabs>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={onHide}>\r\n          Cerrar\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientHistoryModal;\r\n","import React from 'react';\r\nimport { Modal, Button, Row, Col, Badge } from 'react-bootstrap';\r\nimport { FiCheckCircle, FiUser, FiMail, FiPhone, FiMapPin, FiHome, FiX } from 'react-icons/fi';\r\nimport './ClientSuccessModal.css';\r\n\r\nconst ClientSuccessModal = ({ show, onHide, clientData, isEdit = false }) => {\r\n  const title = isEdit ? \"✅ Cliente Actualizado\" : \"✅ Cliente Creado\";\r\n  const message = isEdit ? \"El cliente ha sido actualizado exitosamente\" : \"El cliente ha sido creado exitosamente\";\r\n  \r\n  if (!clientData) return null;\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getTypeIcon = (type) => {\r\n    return type === 'empresa' ? <FiHome size={20} /> : <FiUser size={20} />;\r\n  };\r\n\r\n  const getTypeLabel = (type) => {\r\n    return type === 'empresa' ? 'Empresa' : 'Persona Natural';\r\n  };\r\n\r\n  const getTypeVariant = (type) => {\r\n    return type === 'empresa' ? 'primary' : 'info';\r\n  };\r\n\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={onHide} \r\n      centered \r\n      className=\"client-success-modal\"\r\n      backdrop=\"static\"\r\n      size=\"lg\"\r\n    >\r\n      <Modal.Header closeButton className=\"success-header\">\r\n        <Modal.Title className=\"success-title\">\r\n          <FiCheckCircle className=\"me-2\" />\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body className=\"success-modal-body\">\r\n        <div className=\"success-content\">\r\n          <div className=\"success-icon\">\r\n            <FiCheckCircle />\r\n          </div>\r\n          \r\n          <div className=\"success-text\">\r\n            <h4 className=\"success-message\">{message}</h4>\r\n            \r\n            {clientData && (\r\n              <div className=\"client-success-details\">\r\n                <Row className=\"g-3\">\r\n                  {/* Información Principal */}\r\n                  <Col md={12}>\r\n                    <div className=\"client-main-info\">\r\n                      <div className=\"client-name-section\">\r\n                        <h5 className=\"client-name\">\r\n                          {getTypeIcon(clientData.type)}\r\n                          <span className=\"ms-2\">{clientData.name}</span>\r\n                        </h5>\r\n                        <Badge bg={getTypeVariant(clientData.type)} className=\"client-type-badge\">\r\n                          {getTypeLabel(clientData.type)}\r\n                        </Badge>\r\n                      </div>\r\n                      \r\n                      {clientData.contact_name && (\r\n                        <p className=\"client-contact\">\r\n                          <FiUser className=\"me-2\" />\r\n                          <strong>Contacto:</strong> {clientData.contact_name}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Información de Contacto */}\r\n                  <Col md={6}>\r\n                    <div className=\"info-section\">\r\n                      <h6 className=\"info-section-title\">\r\n                        <FiMail className=\"me-2\" />\r\n                        Información de Contacto\r\n                      </h6>\r\n                      <div className=\"info-items\">\r\n                        {clientData.email && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Email:</strong> {clientData.email}\r\n                          </div>\r\n                        )}\r\n                        {clientData.phone && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Teléfono:</strong> {clientData.phone}\r\n                          </div>\r\n                        )}\r\n                        {clientData.address && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Dirección:</strong> {clientData.address}\r\n                          </div>\r\n                        )}\r\n                        {clientData.city && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Ciudad:</strong> {clientData.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Información de Identificación */}\r\n                  <Col md={6}>\r\n                    <div className=\"info-section\">\r\n                      <h6 className=\"info-section-title\">\r\n                        <FiHome className=\"me-2\" />\r\n                        Información de Identificación\r\n                      </h6>\r\n                      <div className=\"info-items\">\r\n                        {clientData.ruc && (\r\n                          <div className=\"info-item\">\r\n                            <strong>RUC:</strong> {clientData.ruc}\r\n                          </div>\r\n                        )}\r\n                        {clientData.dni && (\r\n                          <div className=\"info-item\">\r\n                            <strong>DNI:</strong> {clientData.dni}\r\n                          </div>\r\n                        )}\r\n                        {clientData.sector && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Sector:</strong> {clientData.sector}\r\n                          </div>\r\n                        )}\r\n                        {clientData.priority && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Prioridad:</strong> \r\n                            <Badge bg=\"warning\" className=\"ms-2\">\r\n                              {clientData.priority.toUpperCase()}\r\n                            </Badge>\r\n                          </div>\r\n                        )}\r\n                        {clientData.status && (\r\n                          <div className=\"info-item\">\r\n                            <strong>Estado:</strong> \r\n                            <Badge bg=\"secondary\" className=\"ms-2\">\r\n                              {clientData.status}\r\n                            </Badge>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Actividad y Servicios */}\r\n                  {(clientData.actividad || clientData.servicios) && (\r\n                    <Col md={12}>\r\n                      <div className=\"info-section\">\r\n                        <h6 className=\"info-section-title\">\r\n                          <FiHome className=\"me-2\" />\r\n                          Actividad y Servicios\r\n                        </h6>\r\n                        <div className=\"info-items\">\r\n                          {clientData.actividad && (\r\n                            <div className=\"info-item\">\r\n                              <strong>Actividad:</strong> {clientData.actividad}\r\n                            </div>\r\n                          )}\r\n                          {clientData.servicios && (\r\n                            <div className=\"info-item\">\r\n                              <strong>Servicios:</strong> {clientData.servicios}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n\r\n                  {/* Información del Sistema */}\r\n                  <Col md={12}>\r\n                    <div className=\"info-section system-info\">\r\n                      <h6 className=\"info-section-title\">\r\n                        <FiCheckCircle className=\"me-2\" />\r\n                        Información del Sistema\r\n                      </h6>\r\n                      <div className=\"info-items\">\r\n                        <div className=\"info-item\">\r\n                          <strong>ID del Cliente:</strong> #{clientData.id}\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                          <strong>Fecha de {isEdit ? 'Actualización' : 'Creación'}:</strong> {formatDate(clientData.updated_at || clientData.created_at)}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      \r\n      <Modal.Footer className=\"success-footer\">\r\n        <Button \r\n          variant=\"primary\" \r\n          onClick={onHide}\r\n          className=\"success-button\"\r\n        >\r\n          <FiCheckCircle className=\"me-2\" />\r\n          Continuar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientSuccessModal;\r\n"],"names":["clientCommentsService","companyId","comment","response","apiFetch","error","commentId","limit","ClientChat","newComment","setNewComment","useState","isTyping","setIsTyping","messagesEndRef","useRef","queryClient","useQueryClient","user","useAuth","socket","useSocket","commentsData","isLoading","useQuery","comments","useEffect","createCommentMutation","useMutation","scrollToBottom","_a","handleNewComment","data","handleSubmit","e","formatDate","dateString","date","diffInHours","getInitials","name","apellido","firstInitial","lastInitial","getRoleColor","role","jsxs","jsx","FiMessageSquare","FiUser","FiClock","FiCheck","FiSend","ClientCostTab","clientId","clientData","getCompanyWithTotals","err","client","Alert","FiAlertCircle","Spinner","formatCurrency","amount","Card","FiDollarSign","Row","Col","FiFileText","FiTrendingUp","Badge","FiCheckCircle","STATUS_CONFIG","FiX","ClientHistoryModal","show","onHide","clientName","navigate","useNavigate","historyData","getClientHistory","getStatusBadge","status","type","config","Icon","Modal","history","FiActivity","Tabs","Tab","Table","quote","FiCalendar","FiSearch","FiHome","project","ClientSuccessModal","isEdit","title","message","getTypeIcon","getTypeLabel","getTypeVariant","FiMail","Button"],"mappings":"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"}