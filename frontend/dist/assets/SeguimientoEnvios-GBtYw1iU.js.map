{"version":3,"file":"SeguimientoEnvios-GBtYw1iU.js","sources":["../../src/pages/SeguimientoEnvios.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Badge, Button, Form, Spinner, Alert, Table, Modal } from 'react-bootstrap';\r\nimport { FiEye, FiFileText, FiUser, FiCalendar, FiDollarSign, FiTrendingUp, FiRefreshCw, FiSend, FiCheck, FiClock, FiAlertCircle } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport api from '../services/api';\r\n\r\nconst SeguimientoEnvios = () => {\r\n  const { user } = useAuth();\r\n  const [shipments, setShipments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    status: '',\r\n    client: '',\r\n    vendedor: ''\r\n  });\r\n\r\n  // Modal para marcar env√≠o\r\n  const [showStatusModal, setShowStatusModal] = useState(false);\r\n  const [selectedShipment, setSelectedShipment] = useState(null);\r\n  const [statusData, setStatusData] = useState({\r\n    status: '',\r\n    notes: '',\r\n    files: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Obtener env√≠os seg√∫n el rol del usuario\r\n      const endpoint = user.role === 'usuario_laboratorio' \r\n        ? '/api/shipments/laboratory' \r\n        : '/api/shipments/commercial';\r\n      \r\n      const shipmentsData = await api(endpoint);\r\n      setShipments(shipmentsData || []);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Error al cargar los datos: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      'enviado': { variant: 'primary', text: 'Enviado', icon: FiSend },\r\n      'recibido': { variant: 'success', text: 'Recibido', icon: FiCheck },\r\n      'en_proceso': { variant: 'warning', text: 'En Proceso', icon: FiClock },\r\n      'completado': { variant: 'info', text: 'Completado', icon: FiCheck },\r\n      'pendiente': { variant: 'secondary', text: 'Pendiente', icon: FiAlertCircle }\r\n    };\r\n    \r\n    const config = statusConfig[status] || { variant: 'secondary', text: status, icon: FiAlertCircle };\r\n    return (\r\n      <Badge bg={config.variant}>\r\n        <config.icon className=\"me-1\" />\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getStatusActions = (shipment) => {\r\n    const actions = [];\r\n    \r\n    if (user.role === 'vendedor_comercial' || user.role === 'jefa_comercial') {\r\n      if (shipment.status === 'enviado') {\r\n        actions.push(\r\n          <Button\r\n            key=\"mark-received\"\r\n            variant=\"success\"\r\n            size=\"sm\"\r\n            onClick={() => openStatusModal(shipment, 'recibido')}\r\n          >\r\n            <FiCheck className=\"me-1\" />\r\n            Marcar Recibido\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n    \r\n    if (user.role === 'usuario_laboratorio') {\r\n      if (shipment.status === 'recibido') {\r\n        actions.push(\r\n          <Button\r\n            key=\"mark-processing\"\r\n            variant=\"warning\"\r\n            size=\"sm\"\r\n            onClick={() => openStatusModal(shipment, 'en_proceso')}\r\n          >\r\n            <FiClock className=\"me-1\" />\r\n            Marcar En Proceso\r\n          </Button>\r\n        );\r\n      }\r\n      \r\n      if (shipment.status === 'en_proceso') {\r\n        actions.push(\r\n          <Button\r\n            key=\"mark-completed\"\r\n            variant=\"info\"\r\n            size=\"sm\"\r\n            onClick={() => openStatusModal(shipment, 'completado')}\r\n          >\r\n            <FiCheck className=\"me-1\" />\r\n            Marcar Completado\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n    \r\n    actions.push(\r\n      <Button\r\n        key=\"view-details\"\r\n        variant=\"outline-primary\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          // Navegar a detalles del env√≠o\r\n          window.location.href = `/envios/${shipment.id}`;\r\n        }}\r\n      >\r\n        <FiEye className=\"me-1\" />\r\n        Ver Detalles\r\n      </Button>\r\n    );\r\n    \r\n    return actions;\r\n  };\r\n\r\n  const openStatusModal = (shipment, newStatus) => {\r\n    setSelectedShipment(shipment);\r\n    setStatusData({\r\n      status: newStatus,\r\n      notes: '',\r\n      files: []\r\n    });\r\n    setShowStatusModal(true);\r\n  };\r\n\r\n  const handleStatusUpdate = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const formData = new FormData();\r\n      formData.append('status', statusData.status);\r\n      formData.append('notes', statusData.notes);\r\n      \r\n      if (statusData.files.length > 0) {\r\n        statusData.files.forEach(file => {\r\n          formData.append('files', file);\r\n        });\r\n      }\r\n\r\n      await api(`/api/shipments/${selectedShipment.id}/status`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      setShowStatusModal(false);\r\n      setSelectedShipment(null);\r\n      setStatusData({\r\n        status: '',\r\n        notes: '',\r\n        files: []\r\n      });\r\n\r\n      await fetchData();\r\n\r\n    } catch (error) {\r\n      setError('Error al actualizar estado: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredShipments = shipments.filter(shipment => {\r\n    if (filters.status && shipment.status !== filters.status) return false;\r\n    if (filters.client && !shipment.client_name?.toLowerCase().includes(filters.client.toLowerCase())) return false;\r\n    if (filters.vendedor && !shipment.vendedor_name?.toLowerCase().includes(filters.vendedor.toLowerCase())) return false;\r\n    return true;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" />\r\n          <p className=\"mt-2\">Cargando env√≠os...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2>üì¶ Seguimiento de Env√≠os</h2>\r\n          <p className=\"text-muted\">Seguimiento de env√≠os entre comercial y laboratorio</p>\r\n        </Col>\r\n        <Col md=\"auto\">\r\n          <Button variant=\"outline-secondary\" onClick={fetchData}>\r\n            <FiRefreshCw className=\"me-2\" />\r\n            Actualizar\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filtros */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Form.Select\r\n            value={filters.status}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, status: e.target.value }))}\r\n          >\r\n            <option value=\"\">Todos los estados</option>\r\n            <option value=\"enviado\">Enviado</option>\r\n            <option value=\"recibido\">Recibido</option>\r\n            <option value=\"en_proceso\">En Proceso</option>\r\n            <option value=\"completado\">Completado</option>\r\n            <option value=\"pendiente\">Pendiente</option>\r\n          </Form.Select>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Filtrar por cliente...\"\r\n            value={filters.client}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, client: e.target.value }))}\r\n          />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Filtrar por vendedor...\"\r\n            value={filters.vendedor}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, vendedor: e.target.value }))}\r\n          />\r\n        </Col>\r\n        <Col md={3}>\r\n          <div className=\"d-flex gap-2\">\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              onClick={() => setFilters({ status: '', client: '', vendedor: '' })}\r\n            >\r\n              Limpiar\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Resumen de m√©tricas */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <FiFileText size={24} className=\"text-primary mb-2\" />\r\n              <h4>{shipments.length}</h4>\r\n              <small className=\"text-muted\">Total Env√≠os</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <FiSend size={24} className=\"text-primary mb-2\" />\r\n              <h4>{shipments.filter(s => s.status === 'enviado').length}</h4>\r\n              <small className=\"text-muted\">Enviados</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <FiClock size={24} className=\"text-warning mb-2\" />\r\n              <h4>{shipments.filter(s => s.status === 'en_proceso').length}</h4>\r\n              <small className=\"text-muted\">En Proceso</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <FiCheck size={24} className=\"text-success mb-2\" />\r\n              <h4>{shipments.filter(s => s.status === 'completado').length}</h4>\r\n              <small className=\"text-muted\">Completados</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Lista de env√≠os */}\r\n      <Row>\r\n        {filteredShipments.length === 0 ? (\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center py-5\">\r\n                <FiFileText size={48} className=\"text-muted mb-3\" />\r\n                <h5>No hay env√≠os</h5>\r\n                <p className=\"text-muted\">\r\n                  {Object.values(filters).some(f => f) \r\n                    ? 'No se encontraron env√≠os con los filtros aplicados'\r\n                    : 'No hay env√≠os registrados'\r\n                  }\r\n                </p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ) : (\r\n          filteredShipments.map((shipment) => (\r\n            <Col key={shipment.id} md={6} lg={4} className=\"mb-3\">\r\n              <Card>\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                  <strong>{shipment.project_name}</strong>\r\n                  {getStatusBadge(shipment.status)}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Cliente:</strong> {shipment.client_name || 'N/A'}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Vendedor:</strong> {shipment.vendedor_name || 'N/A'}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Proyecto:</strong> {shipment.project_name || 'N/A'}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Descripci√≥n:</strong> {shipment.description || 'Sin descripci√≥n'}\r\n                  </div>\r\n                  \r\n                  <hr />\r\n                  \r\n                  <div className=\"mb-2\">\r\n                    <strong>Fecha de Env√≠o:</strong> {new Date(shipment.sent_at).toLocaleDateString()}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>√öltima Actualizaci√≥n:</strong> {new Date(shipment.updated_at).toLocaleDateString()}\r\n                  </div>\r\n\r\n                  {shipment.notes && (\r\n                    <div className=\"mb-2\">\r\n                      <strong>Notas:</strong> {shipment.notes}\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"d-flex gap-2 mt-3\">\r\n                    {getStatusActions(shipment)}\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n\r\n      {/* Modal para actualizar estado */}\r\n      <Modal show={showStatusModal} onHide={() => setShowStatusModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Actualizar Estado del Env√≠o</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedShipment && (\r\n            <div className=\"mb-3\">\r\n              <h6>Proyecto: {selectedShipment.project_name}</h6>\r\n              <p className=\"text-muted\">Cliente: {selectedShipment.client_name}</p>\r\n            </div>\r\n          )}\r\n          \r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Nuevo Estado</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={statusData.status}\r\n              readOnly\r\n            />\r\n          </Form.Group>\r\n          \r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Notas</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={statusData.notes}\r\n              onChange={(e) => setStatusData(prev => ({ ...prev, notes: e.target.value }))}\r\n              placeholder=\"Agregar notas sobre el cambio de estado...\"\r\n            />\r\n          </Form.Group>\r\n          \r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Archivos Adjuntos</Form.Label>\r\n            <Form.Control\r\n              type=\"file\"\r\n              multiple\r\n              accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n              onChange={(e) => setStatusData(prev => ({ ...prev, files: Array.from(e.target.files) }))}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Puedes adjuntar archivos relacionados con el cambio de estado\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowStatusModal(false)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"success\" onClick={handleStatusUpdate} disabled={loading}>\r\n            {loading ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"me-2\" />\r\n                Actualizando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiCheck className=\"me-2\" />\r\n                Actualizar Estado\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SeguimientoEnvios;\r\n"],"names":["SeguimientoEnvios","user","useAuth","shipments","setShipments","useState","loading","setLoading","error","setError","filters","setFilters","showStatusModal","setShowStatusModal","selectedShipment","setSelectedShipment","statusData","setStatusData","useEffect","fetchData","endpoint","shipmentsData","api","getStatusBadge","status","config","FiSend","FiCheck","FiClock","FiAlertCircle","jsxs","Badge","jsx","getStatusActions","shipment","actions","Button","openStatusModal","FiEye","newStatus","handleStatusUpdate","formData","file","filteredShipments","_a","_b","Container","Spinner","Alert","Row","Col","FiRefreshCw","Form","e","prev","Card","FiFileText","f","Modal","Fragment"],"mappings":"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"}