{"version":3,"file":"Dashboard-CklIiHLD.js","sources":["../../src/services/dashboard.js","../../src/services/activities.js","../../src/hooks/useActivities.js","../../src/pages/dashboard/Dashboard.jsx"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\n// Obtener estadísticas generales del dashboard\r\nexport const getDashboardStats = () => {\r\n  return apiFetch('/api/role-dashboard/stats');\r\n};\r\n\r\n// Dashboards específicos por rol\r\nexport const getSalesDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/jefa-comercial');\r\n};\r\n\r\nexport const getVendedorDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/vendedor-comercial');\r\n};\r\n\r\nexport const getLabDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/laboratorio');\r\n};\r\n\r\nexport const getBillingDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/facturacion');\r\n};\r\n\r\nexport const getSupportDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/soporte');\r\n};\r\n\r\nexport const getManagementDashboard = () => {\r\n  return apiFetch('/api/role-dashboard/gerencia');\r\n};\r\n\r\n// Función helper para obtener el dashboard correcto según el rol\r\nexport const getDashboardByRole = (userRole) => {\r\n  switch (userRole) {\r\n    case 'jefa_comercial':\r\n      return getSalesDashboard();\r\n    case 'vendedor_comercial':\r\n      return getVendedorDashboard();\r\n    case 'jefe_laboratorio':\r\n    case 'usuario_laboratorio':\r\n      return getLabDashboard();\r\n    case 'facturacion':\r\n      return getBillingDashboard();\r\n    case 'soporte':\r\n      return getSupportDashboard();\r\n    case 'gerencia':\r\n    case 'admin':\r\n      return getManagementDashboard();\r\n    default:\r\n      return getDashboardStats();\r\n  }\r\n};\r\n\r\nexport default {\r\n  getDashboardStats,\r\n  getSalesDashboard,\r\n  getVendedorDashboard,\r\n  getLabDashboard,\r\n  getBillingDashboard,\r\n  getSupportDashboard,\r\n  getManagementDashboard,\r\n  getDashboardByRole\r\n};\r\n","import { apiFetch } from './api';\r\n\r\n// Obtener actividades recientes\r\nexport const getRecentActivities = (params = {}) => {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const path = qs ? `/api/activities/recent?${qs}` : '/api/activities/recent';\r\n  return apiFetch(path);\r\n};\r\n\r\n// Obtener actividades del usuario actual\r\nexport const getUserActivities = (params = {}) => {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const path = qs ? `/api/activities/user?${qs}` : '/api/activities/user';\r\n  return apiFetch(path);\r\n};\r\n\r\n// Obtener actividades por tipo\r\nexport const getActivitiesByType = (type, params = {}) => {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const path = qs ? `/api/activities/type/${type}?${qs}` : `/api/activities/type/${type}`;\r\n  return apiFetch(path);\r\n};\r\n\r\n// Obtener actividades por entidad\r\nexport const getActivitiesByEntity = (entityType, entityId, params = {}) => {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const path = qs ? `/api/activities/entity/${entityType}/${entityId}?${qs}` : `/api/activities/entity/${entityType}/${entityId}`;\r\n  return apiFetch(path);\r\n};\r\n\r\n// Obtener estadísticas de actividades\r\nexport const getActivityStats = (params = {}) => {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const path = qs ? `/api/activities/stats?${qs}` : '/api/activities/stats';\r\n  return apiFetch(path);\r\n};\r\n\r\n// Crear actividad (solo admin)\r\nexport const createActivity = (activityData) => {\r\n  return apiFetch('/api/activities/create', {\r\n    method: 'POST',\r\n    body: JSON.stringify(activityData)\r\n  });\r\n};\r\n\r\n// Tipos de actividades según el flujo de trabajo\r\nexport const ACTIVITY_TYPES = {\r\n  // Cotizaciones\r\n  QUOTE_CREATED: 'quote_created',\r\n  QUOTE_ASSIGNED: 'quote_assigned',\r\n  QUOTE_APPROVED: 'quote_approved',\r\n  QUOTE_REJECTED: 'quote_rejected',\r\n  QUOTE_COMPLETED: 'quote_completed',\r\n  \r\n  // Proyectos\r\n  PROJECT_CREATED: 'project_created',\r\n  PROJECT_ASSIGNED: 'project_assigned',\r\n  PROJECT_STARTED: 'project_started',\r\n  PROJECT_COMPLETED: 'project_completed',\r\n  PROJECT_DELAYED: 'project_delayed',\r\n  \r\n  // Tickets\r\n  TICKET_CREATED: 'ticket_created',\r\n  TICKET_ASSIGNED: 'ticket_assigned',\r\n  TICKET_RESOLVED: 'ticket_resolved',\r\n  TICKET_ESCALATED: 'ticket_escalated',\r\n  \r\n  // Evidencias\r\n  EVIDENCE_UPLOADED: 'evidence_uploaded',\r\n  EVIDENCE_APPROVED: 'evidence_approved',\r\n  EVIDENCE_REJECTED: 'evidence_rejected',\r\n  \r\n  // Usuarios\r\n  USER_REGISTERED: 'user_registered',\r\n  USER_ASSIGNED: 'user_assigned',\r\n  USER_ROLE_CHANGED: 'user_role_changed',\r\n  \r\n  // Clientes\r\n  CLIENT_CREATED: 'client_created',\r\n  CLIENT_UPDATED: 'client_updated',\r\n  \r\n  // Sistema\r\n  SYSTEM_MAINTENANCE: 'system_maintenance',\r\n  SYSTEM_UPDATE: 'system_update'\r\n};\r\n\r\n// Entidades del sistema\r\nexport const ENTITY_TYPES = {\r\n  QUOTE: 'quote',\r\n  PROJECT: 'project',\r\n  TICKET: 'ticket',\r\n  EVIDENCE: 'evidence',\r\n  USER: 'user',\r\n  CLIENT: 'client',\r\n  SYSTEM: 'system'\r\n};\r\n\r\n// Configuración de actividades por rol\r\nexport const ROLE_ACTIVITY_CONFIG = {\r\n  admin: {\r\n    types: Object.values(ACTIVITY_TYPES),\r\n    priority: 'high'\r\n  },\r\n  jefa_comercial: {\r\n    types: [\r\n      ACTIVITY_TYPES.QUOTE_CREATED,\r\n      ACTIVITY_TYPES.QUOTE_APPROVED,\r\n      ACTIVITY_TYPES.QUOTE_REJECTED,\r\n      ACTIVITY_TYPES.PROJECT_CREATED,\r\n      ACTIVITY_TYPES.PROJECT_COMPLETED,\r\n      ACTIVITY_TYPES.TICKET_ESCALATED,\r\n      ACTIVITY_TYPES.CLIENT_CREATED,\r\n      ACTIVITY_TYPES.CLIENT_UPDATED\r\n    ],\r\n    priority: 'high'\r\n  },\r\n  vendedor_comercial: {\r\n    types: [\r\n      ACTIVITY_TYPES.QUOTE_CREATED,\r\n      ACTIVITY_TYPES.QUOTE_ASSIGNED,\r\n      ACTIVITY_TYPES.PROJECT_CREATED,\r\n      ACTIVITY_TYPES.PROJECT_ASSIGNED,\r\n      ACTIVITY_TYPES.TICKET_CREATED,\r\n      ACTIVITY_TYPES.CLIENT_CREATED,\r\n      ACTIVITY_TYPES.CLIENT_UPDATED\r\n    ],\r\n    priority: 'normal'\r\n  },\r\n  jefe_laboratorio: {\r\n    types: [\r\n      ACTIVITY_TYPES.QUOTE_ASSIGNED,\r\n      ACTIVITY_TYPES.QUOTE_COMPLETED,\r\n      ACTIVITY_TYPES.PROJECT_ASSIGNED,\r\n      ACTIVITY_TYPES.PROJECT_COMPLETED,\r\n      ACTIVITY_TYPES.EVIDENCE_UPLOADED,\r\n      ACTIVITY_TYPES.EVIDENCE_APPROVED,\r\n      ACTIVITY_TYPES.EVIDENCE_REJECTED,\r\n      ACTIVITY_TYPES.TICKET_ASSIGNED\r\n    ],\r\n    priority: 'high'\r\n  },\r\n  usuario_laboratorio: {\r\n    types: [\r\n      ACTIVITY_TYPES.QUOTE_ASSIGNED,\r\n      ACTIVITY_TYPES.QUOTE_COMPLETED,\r\n      ACTIVITY_TYPES.PROJECT_ASSIGNED,\r\n      ACTIVITY_TYPES.PROJECT_COMPLETED,\r\n      ACTIVITY_TYPES.EVIDENCE_UPLOADED,\r\n      ACTIVITY_TYPES.TICKET_ASSIGNED\r\n    ],\r\n    priority: 'normal'\r\n  },\r\n  laboratorio: {\r\n    types: [\r\n      ACTIVITY_TYPES.QUOTE_ASSIGNED,\r\n      ACTIVITY_TYPES.QUOTE_COMPLETED,\r\n      ACTIVITY_TYPES.PROJECT_ASSIGNED,\r\n      ACTIVITY_TYPES.PROJECT_COMPLETED,\r\n      ACTIVITY_TYPES.EVIDENCE_UPLOADED,\r\n      ACTIVITY_TYPES.TICKET_ASSIGNED\r\n    ],\r\n    priority: 'normal'\r\n  },\r\n  soporte: {\r\n    types: [\r\n      ACTIVITY_TYPES.TICKET_CREATED,\r\n      ACTIVITY_TYPES.TICKET_ASSIGNED,\r\n      ACTIVITY_TYPES.TICKET_RESOLVED,\r\n      ACTIVITY_TYPES.TICKET_ESCALATED,\r\n      ACTIVITY_TYPES.SYSTEM_MAINTENANCE\r\n    ],\r\n    priority: 'high'\r\n  },\r\n  gerencia: {\r\n    types: [\r\n      ACTIVITY_TYPES.PROJECT_COMPLETED,\r\n      ACTIVITY_TYPES.PROJECT_DELAYED,\r\n      ACTIVITY_TYPES.QUOTE_APPROVED,\r\n      ACTIVITY_TYPES.TICKET_ESCALATED,\r\n      ACTIVITY_TYPES.SYSTEM_UPDATE,\r\n      ACTIVITY_TYPES.USER_REGISTERED,\r\n      ACTIVITY_TYPES.USER_ROLE_CHANGED\r\n    ],\r\n    priority: 'high'\r\n  }\r\n};\r\n\r\nexport default {\r\n  getRecentActivities,\r\n  getUserActivities,\r\n  getActivitiesByType,\r\n  getActivitiesByEntity,\r\n  getActivityStats,\r\n  createActivity,\r\n  ACTIVITY_TYPES,\r\n  ENTITY_TYPES,\r\n  ROLE_ACTIVITY_CONFIG\r\n};\r\n","import { useQuery, useQueryClient } from 'react-query';\r\nimport { getRecentActivities } from '../services/activities';\r\nimport { useSocketNotification } from './useSocket';\r\n\r\n// Hook personalizado para manejar actividades recientes de manera eficiente\r\nexport const useActivities = (options = {}) => {\r\n  const queryClient = useQueryClient();\r\n  const {\r\n    limit = 4,\r\n    refetchInterval = 300000, // 5 minutos por defecto\r\n    staleTime = 60000, // 1 minuto por defecto\r\n    enabled = true,\r\n    userId = null, // Filtrar por usuario específico\r\n    role = null // Filtrar por rol\r\n  } = options;\r\n\r\n  // WebSocket para actualizaciones en tiempo real\r\n  useSocketNotification({\r\n    onNewNotification: (notification) => {\r\n      // Solo invalidar si la notificación es relevante para actividades\r\n      if (notification.type && (\r\n        notification.type.includes('quote') ||\r\n        notification.type.includes('project') ||\r\n        notification.type.includes('ticket') ||\r\n        notification.type.includes('evidence') ||\r\n        notification.type.includes('user') ||\r\n        notification.type.includes('client')\r\n      )) {\r\n        queryClient.invalidateQueries(['recentActivities']);\r\n      }\r\n    },\r\n    onUnreadCountUpdate: () => {\r\n      // Invalidar cuando se actualiza el contador de notificaciones\r\n      queryClient.invalidateQueries(['recentActivities']);\r\n    }\r\n  });\r\n\r\n  // Query principal para actividades\r\n  const activitiesQuery = useQuery(\r\n    ['recentActivities', { limit, userId, role }],\r\n    () => getRecentActivities({ limit, userId, role }),\r\n    {\r\n      enabled,\r\n      refetchInterval,\r\n      staleTime,\r\n      refetchOnWindowFocus: true, // Refrescar cuando el usuario vuelve a la pestaña\r\n      refetchOnMount: true, // Refrescar al montar el componente\r\n      retry: 2, // Reintentar solo 2 veces en caso de error\r\n      retryDelay: 5000, // Esperar 5s entre reintentos\r\n      // Configuración de cache inteligente\r\n      cacheTime: 300000, // Mantener en cache por 5 minutos\r\n      // Configuración de red\r\n      networkMode: 'online', // Solo hacer requests cuando hay conexión\r\n      // Configuración de error\r\n      onError: (error) => {\r\n        console.warn('Error loading activities:', error);\r\n        // No mostrar error al usuario, usar datos de cache si están disponibles\r\n      }\r\n    }\r\n  );\r\n\r\n  // Función para refrescar manualmente\r\n  const refreshActivities = () => {\r\n    queryClient.invalidateQueries(['recentActivities']);\r\n  };\r\n\r\n  // Función para obtener datos de cache sin hacer request\r\n  const getCachedActivities = () => {\r\n    return queryClient.getQueryData(['recentActivities', { limit }]);\r\n  };\r\n\r\n  return {\r\n    ...activitiesQuery,\r\n    refreshActivities,\r\n    getCachedActivities,\r\n    // Estado derivado\r\n    hasActivities: activitiesQuery.data?.activities?.length > 0,\r\n    activitiesCount: activitiesQuery.data?.activities?.length || 0,\r\n    // Configuración de rendimiento\r\n    isOptimized: true,\r\n    lastFetch: activitiesQuery.dataUpdatedAt,\r\n    nextFetch: activitiesQuery.dataUpdatedAt + refetchInterval\r\n  };\r\n};\r\n\r\n// Hook para actividades con configuración de alto rendimiento\r\nexport const useActivitiesHighPerformance = (options = {}) => {\r\n  return useActivities({\r\n    ...options,\r\n    refetchInterval: 600000, // 10 minutos\r\n    staleTime: 300000, // 5 minutos\r\n    enabled: true\r\n  });\r\n};\r\n\r\n// Hook para actividades con configuración de tiempo real\r\nexport const useActivitiesRealTime = (options = {}) => {\r\n  return useActivities({\r\n    ...options,\r\n    refetchInterval: 60000, // 1 minuto\r\n    staleTime: 30000, // 30 segundos\r\n    enabled: true\r\n  });\r\n};\r\n\r\nexport default useActivities;\r\n","import React, { useEffect } from 'react';\r\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  FiUsers, FiHome, FiFileText, FiMessageSquare, \r\n  FiArrowUp, FiDollarSign, FiCalendar, FiCheckCircle,\r\n  FiArrowDown, FiEye, FiTrendingUp, FiActivity\r\n} from 'react-icons/fi';\r\nimport { useQuery, useQueryClient } from 'react-query';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport StatsCard from '../../components/common/StatsCard';\r\nimport { listUsers } from '../../services/users';\r\nimport { listProjects } from '../../services/projects';\r\nimport { listQuotes } from '../../services/quotes';\r\nimport { listTickets } from '../../services/tickets';\r\nimport { getDashboardStats } from '../../services/dashboard';\r\nimport { useActivities } from '../../hooks/useActivities';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  // Redirigir según el rol del usuario a su dashboard específico\r\n  useEffect(() => {\r\n    if (user?.role) {\r\n      switch (user.role) {\r\n        case 'vendedor_comercial':\r\n          navigate('/dashboards/vendedor-comercial', { replace: true });\r\n          break;\r\n        case 'jefa_comercial':\r\n          navigate('/dashboards/jefa-comercial', { replace: true });\r\n          break;\r\n        case 'jefe_laboratorio':\r\n        case 'usuario_laboratorio':\r\n          navigate('/dashboards/laboratorio', { replace: true });\r\n          break;\r\n        case 'facturacion':\r\n          navigate('/dashboards/facturacion', { replace: true });\r\n          break;\r\n        case 'soporte':\r\n          navigate('/dashboards/soporte', { replace: true });\r\n          break;\r\n        case 'gerencia':\r\n        case 'admin':\r\n          navigate('/dashboards/gerencia', { replace: true });\r\n          break;\r\n        default:\r\n          // Roles no específicos continúan con el dashboard general\r\n          break;\r\n      }\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  \r\n  // Obtener estadísticas del dashboard\r\n  const { data: dashboardStats, isLoading: statsLoading, error: statsError } = useQuery(\r\n    ['dashboardStats'],\r\n    getDashboardStats,\r\n    {\r\n      refetchInterval: 300000, // 5 minutos\r\n      staleTime: 60000, // 1 minuto\r\n      onSuccess: (data) => {\r\n        console.log('✅ Dashboard: Datos recibidos del backend:', data);\r\n      },\r\n      onError: (error) => {\r\n        console.error('❌ Dashboard: Error obteniendo datos:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Obtener actividades recientes con hook optimizado\r\n  const { \r\n    data: activitiesData, \r\n    isLoading: activitiesLoading,\r\n    hasActivities,\r\n    activitiesCount,\r\n    refreshActivities\r\n  } = useActivities({ \r\n    limit: 4,\r\n    refetchInterval: 300000, // 5 minutos\r\n    staleTime: 60000, // 1 minuto\r\n    userId: user?.id, // Filtrar por usuario actual\r\n    role: user?.role // Filtrar por rol\r\n  });\r\n\r\n  // Usar estadísticas reales del backend\r\n  const stats = dashboardStats ? {\r\n    totalUsers: parseInt(dashboardStats.totalUsers) || 0,\r\n    totalProjects: parseInt(dashboardStats.totalProjects) || 0,\r\n    totalQuotes: parseInt(dashboardStats.totalQuotes) || 0,\r\n    totalTickets: parseInt(dashboardStats.totalTickets) || 0,\r\n    activeProjects: parseInt(dashboardStats.activeProjects) || 0,\r\n    pendingQuotes: parseInt(dashboardStats.pendingQuotes) || 0,\r\n    openTickets: parseInt(dashboardStats.openTickets) || 0,\r\n    completedProjects: parseInt(dashboardStats.completedProjects) || 0,\r\n    totalClients: parseInt(dashboardStats.totalClients) || 0,\r\n    totalEvidences: parseInt(dashboardStats.totalEvidences) || 0,\r\n    // Nuevos datos del mes actual\r\n    activeUsersThisMonth: parseInt(dashboardStats.activeUsersThisMonth) || 0,\r\n    quotesThisMonth: parseInt(dashboardStats.quotesThisMonth) || 0,\r\n    ticketsThisMonth: parseInt(dashboardStats.ticketsThisMonth) || 0,\r\n    changePercentages: {\r\n      users: 0,\r\n      projects: 0,\r\n      quotes: 0,\r\n      tickets: 0\r\n    }\r\n  } : {\r\n    totalUsers: 0,\r\n    totalProjects: 0,\r\n    totalQuotes: 0,\r\n    totalTickets: 0,\r\n    activeProjects: 0,\r\n    pendingQuotes: 0,\r\n    openTickets: 0,\r\n    completedProjects: 0,\r\n    totalClients: 0,\r\n    totalEvidences: 0,\r\n    // Nuevos datos del mes actual\r\n    activeUsersThisMonth: 0,\r\n    quotesThisMonth: 0,\r\n    ticketsThisMonth: 0,\r\n    changePercentages: {\r\n      users: 0,\r\n      projects: 0,\r\n      quotes: 0,\r\n      tickets: 0\r\n    }\r\n  };\r\n\r\n  // Depuración de datos del dashboard\r\n  useEffect(() => {\r\n    console.log('📊 Dashboard: Estado de los datos:');\r\n    console.log('- isLoading:', statsLoading);\r\n    console.log('- error:', statsError);\r\n    console.log('- data:', dashboardStats);\r\n    console.log('- stats procesados:', stats);\r\n    console.log('- totalUsers:', stats.totalUsers, typeof stats.totalUsers);\r\n    console.log('- totalProjects:', stats.totalProjects, typeof stats.totalProjects);\r\n    console.log('- totalQuotes:', stats.totalQuotes, typeof stats.totalQuotes);\r\n    console.log('- totalTickets:', stats.totalTickets, typeof stats.totalTickets);\r\n  }, [statsLoading, statsError, dashboardStats, stats]);\r\n\r\n  // Función para formatear tiempo de actividad\r\n  const formatActivityTime = (createdAt) => {\r\n    const now = new Date();\r\n    const activityTime = new Date(createdAt);\r\n    const diffInMinutes = Math.floor((now - activityTime) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Ahora';\r\n    if (diffInMinutes < 60) return `Hace ${diffInMinutes} min`;\r\n    if (diffInMinutes < 1440) return `Hace ${Math.floor(diffInMinutes / 60)} h`;\r\n    return `Hace ${Math.floor(diffInMinutes / 1440)} días`;\r\n  };\r\n\r\n  // Función para obtener icono según tipo de actividad\r\n  const getActivityIcon = (type) => {\r\n    const icons = {\r\n      quote_created: FiFileText,\r\n      quote_assigned: FiFileText,\r\n      quote_approved: FiCheckCircle,\r\n      quote_rejected: FiX,\r\n      quote_completed: FiCheckCircle,\r\n      project_created: FiHome,\r\n      project_assigned: FiHome,\r\n      project_started: FiArrowUp,\r\n      project_completed: FiCheckCircle,\r\n      project_delayed: FiClock,\r\n      ticket_created: FiMessageSquare,\r\n      ticket_assigned: FiMessageSquare,\r\n      ticket_resolved: FiCheckCircle,\r\n      ticket_escalated: FiAlertTriangle,\r\n      evidence_uploaded: FiPaperclip,\r\n      evidence_approved: FiCheckCircle,\r\n      evidence_rejected: FiX,\r\n      user_registered: FiUsers,\r\n      user_assigned: FiUsers,\r\n      user_role_changed: FiSettings,\r\n      client_created: FiUser,\r\n      client_updated: FiUser,\r\n      system_maintenance: FiSettings,\r\n      system_update: FiSettings\r\n    };\r\n    return icons[type] || FiActivity;\r\n  };\r\n\r\n  // Función para obtener color según tipo de actividad\r\n  const getActivityColor = (type) => {\r\n    const colors = {\r\n      quote_created: 'primary',\r\n      quote_assigned: 'primary',\r\n      quote_approved: 'success',\r\n      quote_rejected: 'danger',\r\n      quote_completed: 'success',\r\n      project_created: 'info',\r\n      project_assigned: 'info',\r\n      project_started: 'info',\r\n      project_completed: 'success',\r\n      project_delayed: 'warning',\r\n      ticket_created: 'warning',\r\n      ticket_assigned: 'warning',\r\n      ticket_resolved: 'success',\r\n      ticket_escalated: 'danger',\r\n      evidence_uploaded: 'secondary',\r\n      evidence_approved: 'success',\r\n      evidence_rejected: 'danger',\r\n      user_registered: 'info',\r\n      user_assigned: 'info',\r\n      user_role_changed: 'secondary',\r\n      client_created: 'primary',\r\n      client_updated: 'primary',\r\n      system_maintenance: 'secondary',\r\n      system_update: 'secondary'\r\n    };\r\n    return colors[type] || 'secondary';\r\n  };\r\n\r\n  // Usar datos reales o fallback a datos de ejemplo\r\n  const recentActivities = activitiesData?.activities?.map(activity => ({\r\n    id: activity.id,\r\n    type: activity.type,\r\n    title: activity.title,\r\n    description: activity.description,\r\n    time: formatActivityTime(activity.created_at),\r\n    icon: getActivityIcon(activity.type),\r\n    color: getActivityColor(activity.type),\r\n    user: activity.user_name\r\n  })) || [\r\n    {\r\n      id: 1,\r\n      type: 'quote_created',\r\n      title: 'Nueva cotización creada',\r\n      description: 'Cotización #2024-001 para Proyecto ABC',\r\n      time: 'Hace 2 horas',\r\n      icon: FiFileText,\r\n      color: 'primary'\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'project_completed',\r\n      title: 'Proyecto completado',\r\n      description: 'Proyecto XYZ finalizado exitosamente',\r\n      time: 'Hace 4 horas',\r\n      icon: FiCheckCircle,\r\n      color: 'success'\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'ticket_created',\r\n      title: 'Nuevo ticket de soporte',\r\n      description: 'Solicitud de soporte técnico',\r\n      time: 'Hace 6 horas',\r\n      icon: FiMessageSquare,\r\n      color: 'warning'\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'user_registered',\r\n      title: 'Usuario registrado',\r\n      description: 'Nuevo usuario agregado al sistema',\r\n      time: 'Hace 8 horas',\r\n      icon: FiUsers,\r\n      color: 'info'\r\n    }\r\n  ];\r\n\r\n  const quickActions = [\r\n    {\r\n      title: 'Nuevo Proyecto',\r\n      description: 'Crear un nuevo proyecto',\r\n      icon: FiHome,\r\n      color: 'primary',\r\n      onClick: () => navigate('/proyectos')\r\n    },\r\n    {\r\n      title: 'Nueva Cotización',\r\n      description: 'Generar cotización',\r\n      icon: FiFileText,\r\n      color: 'success',\r\n      onClick: () => navigate('/cotizaciones/inteligente')\r\n    },\r\n    {\r\n      title: 'Nuevo Ticket',\r\n      description: 'Crear ticket de soporte',\r\n      icon: FiMessageSquare,\r\n      color: 'warning',\r\n      onClick: () => navigate('/tickets')\r\n    },\r\n    {\r\n      title: 'Ver Reportes',\r\n      description: 'Analizar datos del sistema',\r\n      icon: FiArrowUp,\r\n      color: 'info',\r\n      onClick: () => navigate('/reportes')\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"fade-in\">\r\n      <PageHeader\r\n        title=\"Dashboard\"\r\n        subtitle=\"Resumen general del sistema CRM GeoFal\"\r\n        icon={FiArrowUp}\r\n      />\r\n\r\n      {/* Estadísticas principales */}\r\n      <Row className=\"mb-4 g-3\">\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Total Usuarios\"\r\n            value={stats.totalUsers}\r\n            icon={FiUsers}\r\n            color=\"primary\"\r\n            trend={stats.changePercentages?.users || null}\r\n            subtitle={`${stats.activeUsersThisMonth || 0} usuarios activos este mes`}\r\n            loading={statsLoading}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Proyectos Activos\"\r\n            value={stats.activeProjects}\r\n            icon={FiHome}\r\n            color=\"success\"\r\n            trend={stats.changePercentages?.projects || null}\r\n            subtitle={`${stats.totalProjects} proyectos totales`}\r\n            loading={statsLoading}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Cotizaciones Pendientes\"\r\n            value={stats.pendingQuotes}\r\n            icon={FiFileText}\r\n            color=\"warning\"\r\n            trend={stats.changePercentages?.quotes || null}\r\n            subtitle={`${stats.quotesThisMonth || 0} cotizaciones este mes`}\r\n            loading={statsLoading}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Tickets Abiertos\"\r\n            value={stats.openTickets}\r\n            icon={FiMessageSquare}\r\n            color=\"danger\"\r\n            trend={stats.changePercentages?.tickets || null}\r\n            subtitle={`${stats.ticketsThisMonth || 0} tickets este mes`}\r\n            loading={statsLoading}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Actividades recientes */}\r\n        <Col lg={8} className=\"mb-4\">\r\n          <Card className=\"h-100\">\r\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n              <h5 className=\"mb-0\">Actividades Recientes</h5>\r\n                {activitiesCount > 0 && (\r\n                  <small className=\"text-muted\">\r\n                    {activitiesCount} actividad{activitiesCount !== 1 ? 'es' : ''} • Actualizado automáticamente\r\n                  </small>\r\n                )}\r\n                {user?.role !== 'admin' && (\r\n                  <small className=\"text-info d-block\">\r\n                    Mostrando solo actividades relevantes a tu rol: {user?.role}\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <div className=\"d-flex gap-2\">\r\n                <Button \r\n                  variant=\"outline-secondary\" \r\n                  size=\"sm\"\r\n                  onClick={refreshActivities}\r\n                  disabled={activitiesLoading}\r\n                  title=\"Actualizar actividades\"\r\n                  className=\"refresh-btn\"\r\n                >\r\n                  <FiActivity className={activitiesLoading ? 'spinning' : ''} />\r\n                </Button>\r\n                {user?.role === 'admin' && (\r\n                  <Button \r\n                    variant=\"outline-primary\" \r\n                    size=\"sm\"\r\n                    onClick={() => navigate('/actividades')}\r\n                    title=\"Ver todas las actividades (Solo Admin)\"\r\n                  >\r\n                <FiEye className=\"me-1\" />\r\n                Ver todas\r\n              </Button>\r\n                )}\r\n              </div>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {activitiesLoading ? (\r\n                <div className=\"text-center py-4\">\r\n                  <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Cargando actividades...</span>\r\n                  </div>\r\n                  <p className=\"mt-2 text-muted\">Cargando actividades recientes...</p>\r\n                </div>\r\n              ) : recentActivities.length === 0 ? (\r\n                <div className=\"activity-empty-state text-center\">\r\n                  <div className=\"mb-3\">\r\n                    <FiActivity size={48} className=\"text-muted icon\" />\r\n                  </div>\r\n                  <h6 className=\"text-muted mb-2\">No hay actividades recientes</h6>\r\n                  <p className=\"text-muted small mb-3\">\r\n                    {user?.role === 'admin' \r\n                      ? 'Aún no hay actividades registradas en el sistema.'\r\n                      : 'No hay actividades relevantes a tu rol en este momento.'\r\n                    }\r\n                  </p>\r\n                  <Button \r\n                    variant=\"outline-primary\" \r\n                    size=\"sm\"\r\n                    onClick={refreshActivities}\r\n                    className=\"mt-2\"\r\n                  >\r\n                    <FiActivity className=\"me-1\" />\r\n                    Actualizar\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n              <div className=\"activity-list\">\r\n                {recentActivities.map((activity) => {\r\n                  const Icon = activity.icon;\r\n                  return (\r\n                    <div key={activity.id} className=\"activity-item d-flex align-items-start mb-3\">\r\n                      <div className={`activity-icon bg-${activity.color} bg-opacity-10 rounded-circle p-2 me-3`}>\r\n                        <Icon size={20} className={`text-${activity.color}`} />\r\n                      </div>\r\n                      <div className=\"flex-grow-1\">\r\n                        <h6 className=\"mb-1\">{activity.title}</h6>\r\n                        <p className=\"text-muted mb-1 small\">{activity.description}</p>\r\n                          <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <small className=\"text-muted\">{activity.time}</small>\r\n                            {activity.user && (\r\n                              <small className=\"text-muted\">por {activity.user}</small>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Acciones rápidas */}\r\n        <Col lg={4} className=\"mb-4\">\r\n          <Card className=\"h-100\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Acciones Rápidas</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"quick-actions\">\r\n                {quickActions.map((action, index) => {\r\n                  const Icon = action.icon;\r\n                  return (\r\n                    <Button\r\n                      key={index}\r\n                      variant={`outline-${action.color}`}\r\n                      className=\"w-100 mb-3 d-flex align-items-center justify-content-start\"\r\n                      onClick={action.onClick}\r\n                    >\r\n                      <div className={`me-3 bg-${action.color} bg-opacity-10 rounded-circle p-2`}>\r\n                        <Icon size={20} className={`text-${action.color}`} />\r\n                      </div>\r\n                      <div className=\"text-start\">\r\n                        <div className=\"fw-medium\">{action.title}</div>\r\n                        <small className=\"text-muted\">{action.description}</small>\r\n                      </div>\r\n                    </Button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Resumen de rendimiento */}\r\n      <Row>\r\n        <Col lg={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Resumen de Proyectos</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span>Proyectos Completados</span>\r\n                <span className=\"fw-bold text-success\">{stats.completedProjects}</span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span>Proyectos Activos</span>\r\n                <span className=\"fw-bold text-primary\">{stats.activeProjects}</span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span>Total Proyectos</span>\r\n                <span className=\"fw-bold\">{stats.totalProjects}</span>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Estado del Sistema</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span>Usuarios Online</span>\r\n                <span className=\"fw-bold text-success\">\r\n                  <FiArrowUp className=\"me-1\" />\r\n                  {Math.floor(stats.totalUsers * 0.3)}\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span>Cotizaciones Este Mes</span>\r\n                <span className=\"fw-bold text-primary\">\r\n                  <FiArrowUp className=\"me-1\" />\r\n                  {Math.floor(stats.totalQuotes * 0.4)}\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span>Tickets Resueltos</span>\r\n                <span className=\"fw-bold text-success\">\r\n                  <FiArrowUp className=\"me-1\" />\r\n                  {Math.floor(stats.totalTickets * 0.7)}\r\n                </span>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["getDashboardStats","apiFetch","getRecentActivities","params","qs","path","useActivities","options","queryClient","useQueryClient","limit","refetchInterval","staleTime","enabled","userId","role","useSocketNotification","notification","activitiesQuery","useQuery","error","_b","_a","_d","_c","Dashboard","navigate","useNavigate","user","useAuth","useEffect","dashboardStats","statsLoading","statsError","data","activitiesData","activitiesLoading","activitiesCount","refreshActivities","stats","formatActivityTime","createdAt","now","activityTime","diffInMinutes","getActivityIcon","type","FiFileText","FiCheckCircle","FiHome","FiArrowUp","FiMessageSquare","FiUsers","FiActivity","getActivityColor","recentActivities","activity","quickActions","jsxs","jsx","PageHeader","Row","Col","StatsCard","_e","Card","Button","FiEye","Icon","action","index"],"mappings":"kYAGO,MAAMA,EAAoB,IACxBC,EAAS,2BAA2B,ECDhCC,EAAsB,CAACC,EAAS,KAAO,CAClD,MAAMC,EAAK,IAAI,gBAAgBD,CAAM,EAAE,SAAQ,EACzCE,EAAOD,EAAK,0BAA0BA,CAAE,GAAK,yBACnD,OAAOH,EAASI,CAAI,CACtB,ECFaC,EAAgB,CAACC,EAAU,KAAO,aAC7C,MAAMC,EAAcC,IACd,CACJ,MAAAC,EAAQ,EACR,gBAAAC,EAAkB,IAClB,UAAAC,EAAY,IACZ,QAAAC,EAAU,GACV,OAAAC,EAAS,KACT,KAAAC,EAAO,IACX,EAAMR,EAGJS,EAAsB,CACpB,kBAAoBC,GAAiB,CAE/BA,EAAa,OACfA,EAAa,KAAK,SAAS,OAAO,GAClCA,EAAa,KAAK,SAAS,SAAS,GACpCA,EAAa,KAAK,SAAS,QAAQ,GACnCA,EAAa,KAAK,SAAS,UAAU,GACrCA,EAAa,KAAK,SAAS,MAAM,GACjCA,EAAa,KAAK,SAAS,QAAQ,IAEnCT,EAAY,kBAAkB,CAAC,kBAAkB,CAAC,CAEtD,EACA,oBAAqB,IAAM,CAEzBA,EAAY,kBAAkB,CAAC,kBAAkB,CAAC,CACpD,CACJ,CAAG,EAGD,MAAMU,EAAkBC,EACtB,CAAC,mBAAoB,CAAE,MAAAT,EAAO,OAAAI,EAAQ,KAAAC,CAAI,CAAE,EAC5C,IAAMb,EAAoB,CAAE,MAAAQ,EAAO,OAAAI,EAAQ,KAAAC,CAAI,CAAE,EACjD,CACE,QAAAF,EACA,gBAAAF,EACA,UAAAC,EACA,qBAAsB,GACtB,eAAgB,GAChB,MAAO,EACP,WAAY,IAEZ,UAAW,IAEX,YAAa,SAEb,QAAUQ,GAAU,CAClB,QAAQ,KAAK,4BAA6BA,CAAK,CAEjD,CACN,CACA,EAYE,MAAO,CACL,GAAGF,EACH,kBAXwB,IAAM,CAC9BV,EAAY,kBAAkB,CAAC,kBAAkB,CAAC,CACpD,EAUE,oBAP0B,IACnBA,EAAY,aAAa,CAAC,mBAAoB,CAAE,MAAAE,CAAK,CAAE,CAAC,EAQ/D,gBAAeW,GAAAC,EAAAJ,EAAgB,OAAhB,YAAAI,EAAsB,aAAtB,YAAAD,EAAkC,QAAS,EAC1D,kBAAiBE,GAAAC,EAAAN,EAAgB,OAAhB,YAAAM,EAAsB,aAAtB,YAAAD,EAAkC,SAAU,EAE7D,YAAa,GACb,UAAWL,EAAgB,cAC3B,UAAWA,EAAgB,cAAgBP,CAC/C,CACA,EChEMc,GAAY,IAAM,eACtB,MAAMC,EAAWC,EAAA,EACX,CAAE,KAAAC,CAAA,EAASC,EAAA,EAGjBC,EAAAA,UAAU,IAAM,CACd,GAAIF,GAAA,MAAAA,EAAM,KACR,OAAQA,EAAK,KAAA,CACX,IAAK,qBACHF,EAAS,iCAAkC,CAAE,QAAS,EAAA,CAAM,EAC5D,MACF,IAAK,iBACHA,EAAS,6BAA8B,CAAE,QAAS,EAAA,CAAM,EACxD,MACF,IAAK,mBACL,IAAK,sBACHA,EAAS,0BAA2B,CAAE,QAAS,EAAA,CAAM,EACrD,MACF,IAAK,cACHA,EAAS,0BAA2B,CAAE,QAAS,EAAA,CAAM,EACrD,MACF,IAAK,UACHA,EAAS,sBAAuB,CAAE,QAAS,EAAA,CAAM,EACjD,MACF,IAAK,WACL,IAAK,QACHA,EAAS,uBAAwB,CAAE,QAAS,EAAA,CAAM,EAClD,KAGA,CAGR,EAAG,CAACE,EAAMF,CAAQ,CAAC,EAInB,KAAM,CAAE,KAAMK,EAAgB,UAAWC,EAAc,MAAOC,GAAed,EAC3E,CAAC,gBAAgB,EACjBnB,EACA,CACE,gBAAiB,IACjB,UAAW,IACX,UAAYkC,GAAS,CACnB,QAAQ,IAAI,4CAA6CA,CAAI,CAC/D,EACA,QAAUd,GAAU,CAClB,QAAQ,MAAM,uCAAwCA,CAAK,CAC7D,CAAA,CACF,EAII,CACJ,KAAMe,EACN,UAAWC,EAEX,gBAAAC,EACA,kBAAAC,CAAA,EACEhC,EAAc,CAChB,MAAO,EACP,gBAAiB,IACjB,UAAW,IACX,OAAQsB,GAAA,YAAAA,EAAM,GACd,KAAMA,GAAA,YAAAA,EAAM,IAAA,CACb,EAGKW,EAAQR,EAAiB,CAC7B,WAAY,SAASA,EAAe,UAAU,GAAK,EACnD,cAAe,SAASA,EAAe,aAAa,GAAK,EACzD,YAAa,SAASA,EAAe,WAAW,GAAK,EACrD,aAAc,SAASA,EAAe,YAAY,GAAK,EACvD,eAAgB,SAASA,EAAe,cAAc,GAAK,EAC3D,cAAe,SAASA,EAAe,aAAa,GAAK,EACzD,YAAa,SAASA,EAAe,WAAW,GAAK,EACrD,kBAAmB,SAASA,EAAe,iBAAiB,GAAK,EACjE,aAAc,SAASA,EAAe,YAAY,GAAK,EACvD,eAAgB,SAASA,EAAe,cAAc,GAAK,EAE3D,qBAAsB,SAASA,EAAe,oBAAoB,GAAK,EACvE,gBAAiB,SAASA,EAAe,eAAe,GAAK,EAC7D,iBAAkB,SAASA,EAAe,gBAAgB,GAAK,EAC/D,kBAAmB,CACjB,MAAO,EACP,SAAU,EACV,OAAQ,EACR,QAAS,CAAA,CACX,EACE,CACF,WAAY,EACZ,cAAe,EACf,YAAa,EACb,aAAc,EACd,eAAgB,EAChB,cAAe,EACf,YAAa,EACb,kBAAmB,EACnB,aAAc,EACd,eAAgB,EAEhB,qBAAsB,EACtB,gBAAiB,EACjB,iBAAkB,EAClB,kBAAmB,CACjB,MAAO,EACP,SAAU,EACV,OAAQ,EACR,QAAS,CAAA,CACX,EAIFD,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,oCAAoC,EAChD,QAAQ,IAAI,eAAgBE,CAAY,EACxC,QAAQ,IAAI,WAAYC,CAAU,EAClC,QAAQ,IAAI,UAAWF,CAAc,EACrC,QAAQ,IAAI,sBAAuBQ,CAAK,EACxC,QAAQ,IAAI,gBAAiBA,EAAM,WAAY,OAAOA,EAAM,UAAU,EACtE,QAAQ,IAAI,mBAAoBA,EAAM,cAAe,OAAOA,EAAM,aAAa,EAC/E,QAAQ,IAAI,iBAAkBA,EAAM,YAAa,OAAOA,EAAM,WAAW,EACzE,QAAQ,IAAI,kBAAmBA,EAAM,aAAc,OAAOA,EAAM,YAAY,CAC9E,EAAG,CAACP,EAAcC,EAAYF,EAAgBQ,CAAK,CAAC,EAGpD,MAAMC,EAAsBC,GAAc,CACxC,MAAMC,MAAU,KACVC,EAAe,IAAI,KAAKF,CAAS,EACjCG,EAAgB,KAAK,OAAOF,EAAMC,IAAiB,IAAO,GAAG,EAEnE,OAAIC,EAAgB,EAAU,QAC1BA,EAAgB,GAAW,QAAQA,CAAa,OAChDA,EAAgB,KAAa,QAAQ,KAAK,MAAMA,EAAgB,EAAE,CAAC,KAChE,QAAQ,KAAK,MAAMA,EAAgB,IAAI,CAAC,OACjD,EAGMC,EAAmBC,IACT,CACZ,cAAeC,EACf,eAAgBA,EAChB,eAAgBC,EAChB,eAAgB,IAChB,gBAAiBA,EACjB,gBAAiBC,EACjB,iBAAkBA,EAClB,gBAAiBC,EACjB,kBAAmBF,EACnB,gBAAiB,QACjB,eAAgBG,EAChB,gBAAiBA,EACjB,gBAAiBH,EACjB,iBAAkB,gBAClB,kBAAmB,YACnB,kBAAmBA,EACnB,kBAAmB,IACnB,gBAAiBI,EACjB,cAAeA,EACf,kBAAmB,WACnB,eAAgB,OAChB,eAAgB,OAChB,mBAAoB,WACpB,cAAe,UAAA,GAEJN,CAAI,GAAKO,EAIlBC,EAAoBR,IACT,CACb,cAAe,UACf,eAAgB,UAChB,eAAgB,UAChB,eAAgB,SAChB,gBAAiB,UACjB,gBAAiB,OACjB,iBAAkB,OAClB,gBAAiB,OACjB,kBAAmB,UACnB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,iBAAkB,SAClB,kBAAmB,YACnB,kBAAmB,UACnB,kBAAmB,SACnB,gBAAiB,OACjB,cAAe,OACf,kBAAmB,YACnB,eAAgB,UAChB,eAAgB,UAChB,mBAAoB,YACpB,cAAe,WAAA,GAEHA,CAAI,GAAK,YAInBS,IAAmBjC,EAAAa,GAAA,YAAAA,EAAgB,aAAhB,YAAAb,EAA4B,IAAIkC,IAAa,CACpE,GAAIA,EAAS,GACb,KAAMA,EAAS,KACf,MAAOA,EAAS,MAChB,YAAaA,EAAS,YACtB,KAAMhB,EAAmBgB,EAAS,UAAU,EAC5C,KAAMX,EAAgBW,EAAS,IAAI,EACnC,MAAOF,EAAiBE,EAAS,IAAI,EACrC,KAAMA,EAAS,SAAA,MACV,CACL,CACE,GAAI,EACJ,KAAM,gBACN,MAAO,0BACP,YAAa,yCACb,KAAM,eACN,KAAMT,EACN,MAAO,SAAA,EAET,CACE,GAAI,EACJ,KAAM,oBACN,MAAO,sBACP,YAAa,uCACb,KAAM,eACN,KAAMC,EACN,MAAO,SAAA,EAET,CACE,GAAI,EACJ,KAAM,iBACN,MAAO,0BACP,YAAa,+BACb,KAAM,eACN,KAAMG,EACN,MAAO,SAAA,EAET,CACE,GAAI,EACJ,KAAM,kBACN,MAAO,qBACP,YAAa,oCACb,KAAM,eACN,KAAMC,EACN,MAAO,MAAA,CACT,EAGIK,EAAe,CACnB,CACE,MAAO,iBACP,YAAa,0BACb,KAAMR,EACN,MAAO,UACP,QAAS,IAAMvB,EAAS,YAAY,CAAA,EAEtC,CACE,MAAO,mBACP,YAAa,qBACb,KAAMqB,EACN,MAAO,UACP,QAAS,IAAMrB,EAAS,2BAA2B,CAAA,EAErD,CACE,MAAO,eACP,YAAa,0BACb,KAAMyB,EACN,MAAO,UACP,QAAS,IAAMzB,EAAS,UAAU,CAAA,EAEpC,CACE,MAAO,eACP,YAAa,6BACb,KAAMwB,EACN,MAAO,OACP,QAAS,IAAMxB,EAAS,WAAW,CAAA,CACrC,EAGF,OACEgC,EAAAA,KAAC,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACC,MAAM,YACN,SAAS,yCACT,KAAMV,CAAA,CAAA,EAIRQ,EAAAA,KAACG,EAAA,CAAI,UAAU,WACb,SAAA,CAAAF,EAAAA,IAACG,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAH,EAAAA,IAACI,EAAA,CACC,MAAM,iBACN,MAAOxB,EAAM,WACb,KAAMa,EACN,MAAM,UACN,QAAO/B,EAAAkB,EAAM,oBAAN,YAAAlB,EAAyB,QAAS,KACzC,SAAU,GAAGkB,EAAM,sBAAwB,CAAC,6BAC5C,QAASP,EACT,KAAK,QAAA,CAAA,EAET,EACA2B,EAAAA,IAACG,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAH,EAAAA,IAACI,EAAA,CACC,MAAM,oBACN,MAAOxB,EAAM,eACb,KAAMU,EACN,MAAM,UACN,QAAOzB,EAAAe,EAAM,oBAAN,YAAAf,EAAyB,WAAY,KAC5C,SAAU,GAAGe,EAAM,aAAa,qBAChC,QAASP,EACT,KAAK,QAAA,CAAA,EAET,EACA2B,EAAAA,IAACG,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAH,EAAAA,IAACI,EAAA,CACC,MAAM,0BACN,MAAOxB,EAAM,cACb,KAAMQ,EACN,MAAM,UACN,QAAOxB,EAAAgB,EAAM,oBAAN,YAAAhB,EAAyB,SAAU,KAC1C,SAAU,GAAGgB,EAAM,iBAAmB,CAAC,yBACvC,QAASP,EACT,KAAK,QAAA,CAAA,EAET,EACA2B,EAAAA,IAACG,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAH,EAAAA,IAACI,EAAA,CACC,MAAM,mBACN,MAAOxB,EAAM,YACb,KAAMY,EACN,MAAM,SACN,QAAOa,EAAAzB,EAAM,oBAAN,YAAAyB,EAAyB,UAAW,KAC3C,SAAU,GAAGzB,EAAM,kBAAoB,CAAC,oBACxC,QAASP,EACT,KAAK,QAAA,CAAA,CACP,CACF,CAAA,EACF,SAEC6B,EAAA,CAEC,SAAA,CAAAF,EAAAA,IAACG,EAAA,CAAI,GAAI,EAAG,UAAU,OACpB,SAAAJ,EAAAA,KAACO,EAAA,CAAK,UAAU,QACd,SAAA,CAAAP,EAAAA,KAACO,EAAK,OAAL,CAAY,UAAU,oDACrB,SAAA,CAAAP,OAAC,MAAA,CACD,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,OAAO,SAAA,wBAAqB,EACvCtB,EAAkB,GACjBqB,OAAC,QAAA,CAAM,UAAU,aACd,SAAA,CAAArB,EAAgB,aAAWA,IAAoB,EAAI,KAAO,GAAG,gCAAA,EAChE,GAEDT,GAAA,YAAAA,EAAM,QAAS,SACd8B,EAAAA,KAAC,QAAA,CAAM,UAAU,oBAAoB,SAAA,CAAA,mDACc9B,GAAA,YAAAA,EAAM,IAAA,CAAA,CACzD,CAAA,EAEJ,EACA8B,EAAAA,KAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAACO,EAAA,CACC,QAAQ,oBACR,KAAK,KACL,QAAS5B,EACT,SAAUF,EACV,MAAM,yBACN,UAAU,cAEV,SAAAuB,EAAAA,IAACN,EAAA,CAAW,UAAWjB,EAAoB,WAAa,EAAA,CAAI,CAAA,CAAA,GAE7DR,GAAA,YAAAA,EAAM,QAAS,SACd8B,EAAAA,KAACQ,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS,IAAMxC,EAAS,cAAc,EACtC,MAAM,yCAEV,SAAA,CAAAiC,EAAAA,IAACQ,EAAA,CAAM,UAAU,MAAA,CAAO,EAAE,WAAA,CAAA,CAAA,CAE5B,CAAA,CAEA,CAAA,EACF,EACAR,EAAAA,IAACM,EAAK,KAAL,CACE,WACCP,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAA8B,KAAK,SAChD,eAAC,OAAA,CAAK,UAAU,kBAAkB,SAAA,yBAAA,CAAuB,EAC3D,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,mCAAA,CAAiC,CAAA,EAClE,EACEJ,EAAiB,SAAW,EAC9BG,OAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACN,GAAW,KAAM,GAAI,UAAU,iBAAA,CAAkB,CAAA,CACpD,EACAM,EAAAA,IAAC,KAAA,CAAG,UAAU,kBAAkB,SAAA,+BAA4B,EAC5DA,EAAAA,IAAC,KAAE,UAAU,wBACV,2BAAM,QAAS,QACZ,oDACA,yDAAA,CAEN,EACAD,EAAAA,KAACQ,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS5B,EACT,UAAU,OAEV,SAAA,CAAAqB,EAAAA,IAACN,EAAA,CAAW,UAAU,MAAA,CAAO,EAAE,YAAA,CAAA,CAAA,CAEjC,CAAA,CACF,QAED,MAAA,CAAI,UAAU,gBACZ,SAAAE,EAAiB,IAAKC,GAAa,CAClC,MAAMY,EAAOZ,EAAS,KACtB,OACEE,EAAAA,KAAC,MAAA,CAAsB,UAAU,8CAC/B,SAAA,CAAAC,MAAC,MAAA,CAAI,UAAW,oBAAoBH,EAAS,KAAK,yCAChD,SAAAG,EAAAA,IAACS,EAAA,CAAK,KAAM,GAAI,UAAW,QAAQZ,EAAS,KAAK,GAAI,EACvD,EACAE,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,OAAQ,SAAAH,EAAS,MAAM,EACrCG,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAS,YAAY,EACzDD,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACjB,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAc,SAAAH,EAAS,KAAK,EACxCA,EAAS,MACRE,OAAC,QAAA,CAAM,UAAU,aAAa,SAAA,CAAA,OAAKF,EAAS,IAAA,CAAA,CAAK,CAAA,CAAA,CAErD,CAAA,CAAA,CACF,CAAA,CAAA,EAbMA,EAAS,EAcnB,CAEJ,CAAC,EACH,CAAA,CAEF,CAAA,CAAA,CACF,CAAA,CACF,EAGAG,EAAAA,IAACG,GAAI,GAAI,EAAG,UAAU,OACpB,SAAAJ,EAAAA,KAACO,EAAA,CAAK,UAAU,QACd,SAAA,CAAAN,EAAAA,IAACM,EAAK,OAAL,CACC,SAAAN,EAAAA,IAAC,MAAG,UAAU,OAAO,4BAAgB,CAAA,CACvC,EACAA,EAAAA,IAACM,EAAK,KAAL,CACC,SAAAN,EAAAA,IAAC,MAAA,CAAI,UAAU,gBACZ,SAAAF,EAAa,IAAI,CAACY,EAAQC,IAAU,CACnC,MAAMF,EAAOC,EAAO,KACpB,OACEX,EAAAA,KAACQ,EAAA,CAEC,QAAS,WAAWG,EAAO,KAAK,GAChC,UAAU,6DACV,QAASA,EAAO,QAEhB,SAAA,CAAAV,MAAC,MAAA,CAAI,UAAW,WAAWU,EAAO,KAAK,oCACrC,SAAAV,EAAAA,IAACS,EAAA,CAAK,KAAM,GAAI,UAAW,QAAQC,EAAO,KAAK,GAAI,EACrD,EACAX,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,YAAa,SAAAU,EAAO,MAAM,EACzCV,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAc,WAAO,WAAA,CAAY,CAAA,CAAA,CACpD,CAAA,CAAA,EAXKW,CAAA,CAcX,CAAC,EACH,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,SAGCT,EAAA,CACC,SAAA,CAAAF,EAAAA,IAACG,GAAI,GAAI,EAAG,UAAU,OACpB,gBAACG,EAAA,CACC,SAAA,CAAAN,EAAAA,IAACM,EAAK,OAAL,CACC,SAAAN,EAAAA,IAAC,MAAG,UAAU,OAAO,gCAAoB,CAAA,CAC3C,EACAD,EAAAA,KAACO,EAAK,KAAL,CACC,SAAA,CAAAP,EAAAA,KAAC,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,uBAAA,CAAqB,EAC3BA,EAAAA,IAAC,OAAA,CAAK,UAAU,uBAAwB,WAAM,iBAAA,CAAkB,CAAA,EAClE,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,mBAAA,CAAiB,EACvBA,EAAAA,IAAC,OAAA,CAAK,UAAU,uBAAwB,WAAM,cAAA,CAAe,CAAA,EAC/D,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,EACrBA,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAW,WAAM,aAAA,CAAc,CAAA,CAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QAECG,EAAA,CAAI,GAAI,EAAG,UAAU,OACpB,gBAACG,EAAA,CACC,SAAA,CAAAN,EAAAA,IAACM,EAAK,OAAL,CACC,SAAAN,EAAAA,IAAC,MAAG,UAAU,OAAO,8BAAkB,CAAA,CACzC,EACAD,EAAAA,KAACO,EAAK,KAAL,CACC,SAAA,CAAAP,EAAAA,KAAC,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,EACrBD,EAAAA,KAAC,OAAA,CAAK,UAAU,uBACd,SAAA,CAAAC,EAAAA,IAACT,EAAA,CAAU,UAAU,MAAA,CAAO,EAC3B,KAAK,MAAMX,EAAM,WAAa,EAAG,CAAA,CAAA,CACpC,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,uBAAA,CAAqB,EAC3BD,EAAAA,KAAC,OAAA,CAAK,UAAU,uBACd,SAAA,CAAAC,EAAAA,IAACT,EAAA,CAAU,UAAU,MAAA,CAAO,EAC3B,KAAK,MAAMX,EAAM,YAAc,EAAG,CAAA,CAAA,CACrC,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,mBAAA,CAAiB,EACvBD,EAAAA,KAAC,OAAA,CAAK,UAAU,uBACd,SAAA,CAAAC,EAAAA,IAACT,EAAA,CAAU,UAAU,MAAA,CAAO,EAC3B,KAAK,MAAMX,EAAM,aAAe,EAAG,CAAA,CAAA,CACtC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}