{"version":3,"file":"CotizacionNuevaLEM-BpgvgjGy.js","sources":["../../src/components/CompanyProjectPicker.jsx","../../src/pages/CotizacionNuevaLEM.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { listCompanies } from '../services/companies';\r\nimport { createProject } from '../services/projects';\r\n\r\n// Lightweight picker: select existing company and define minimal project data\r\nexport default function CompanyProjectPicker({ value, onChange }) {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form, setForm] = useState({ company_id: '', project_name: '', location: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await listCompanies({ page: 1, limit: 50 });\r\n        const data = Array.isArray(res?.data) ? res.data : res; // backend returns {data,total}\r\n        setCompanies(data || []);\r\n      } catch (e) {\r\n        setError('No se pudo cargar empresas');\r\n      } finally { setLoading(false); }\r\n    })();\r\n  }, []);\r\n\r\n  const selectedCompany = useMemo(() => companies.find(c => String(c.id) === String(form.company_id)), [companies, form.company_id]);\r\n\r\n  useEffect(() => {\r\n    if (typeof onChange === 'function') {\r\n      onChange({\r\n        company_id: form.company_id ? Number(form.company_id) : null,\r\n        company: selectedCompany || null,\r\n        project_name: form.project_name,\r\n        location: form.location,\r\n      });\r\n    }\r\n  }, [form, selectedCompany, onChange]);\r\n\r\n  const createQuickProject = async () => {\r\n    if (!form.company_id || !form.project_name) return;\r\n    try {\r\n      const payload = { company_id: Number(form.company_id), name: form.project_name, location: form.location };\r\n      const prj = await createProject(payload);\r\n      // bubble up created project id\r\n      if (typeof onChange === 'function') onChange({ ...value, project_id: prj.id, project: prj });\r\n    } catch (e) {\r\n      setError(e.message || 'No se pudo crear proyecto');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded p-3\">\r\n      <h6>Cliente y Proyecto</h6>\r\n      {error && <div className=\"alert alert-warning py-1 my-2\">{error}</div>}\r\n      <div className=\"row g-2 align-items-end\">\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Cliente</label>\r\n          <select className=\"form-select\" value={form.company_id} disabled={loading}\r\n                  onChange={(e)=>setForm({ ...form, company_id: e.target.value })}>\r\n            <option value=\"\">Seleccione...</option>\r\n            {companies.map(c => (\r\n              <option key={c.id} value={c.id}>{c.name} {c.ruc ? `(RUC ${c.ruc})` : ''}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Nombre del proyecto</label>\r\n          <input className=\"form-control\" value={form.project_name}\r\n                 onChange={e=>setForm({ ...form, project_name: e.target.value })}\r\n                 placeholder=\"Ej. Control de calidad de mezclas\" />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Ubicación</label>\r\n          <input className=\"form-control\" value={form.location}\r\n                 onChange={e=>setForm({ ...form, location: e.target.value })} />\r\n        </div>\r\n        <div className=\"col-md-1 d-grid\">\r\n          <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={createQuickProject}\r\n                  disabled={!form.company_id || !form.project_name}>Crear</button>\r\n        </div>\r\n      </div>\r\n      {selectedCompany && (\r\n        <div className=\"small text-muted mt-2\">\r\n          Contacto: {selectedCompany.contact_name} · Tel: {selectedCompany.phone} · Email: {selectedCompany.email}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport ModuloBase from '../components/ModuloBase';\r\nimport { listVariants } from '../services/quoteVariants';\r\nimport { createQuote, addQuoteItem } from '../services/quotes';\r\nimport CompanyProjectPicker from '../components/CompanyProjectPicker';\r\nimport './CotizacionNuevaLEM.css';\r\n\r\n// Plantilla de creación de cotización para Laboratorio (LEM)\r\n// Requisitos clave cubiertos:\r\n// - Datos fijos del cliente y del proyecto\r\n// - Datos de la cotización (fechas, comercial)\r\n// - Tabla de ítems (código, descripción, norma, precio unitario, cantidad, parcial)\r\n// - Selección de variante (condiciones predefinidas)\r\n// - Condiciones de pago (adelantado/50%/crédito) y aceptación\r\n// - Generación de nombre de archivo sugerido (no genera PDF aún)\r\n\r\nconst emptyClient = {\r\n  company_name: '', ruc: '', contact_name: '', contact_phone: '', contact_email: '',\r\n  project_location: '', project_name: '', service_name: '',\r\n};\r\n\r\nconst emptyQuote = {\r\n  request_date: '', issue_date: '', commercial_name: '', payment_terms: 'adelantado', acceptance: false, reference: '', igv: true,\r\n};\r\n\r\nconst emptyItem = { code: '', description: '', norm: '', unit_price: 0, quantity: 1 };\r\n\r\nfunction computePartial(item) {\r\n  const u = Number(item.unit_price || 0);\r\n  const q = Number(item.quantity || 0);\r\n  return Number((u * q).toFixed(2));\r\n}\r\n\r\nfunction suggestedFileName(seq = 'xxx-XX', client = '') {\r\n  const clientName = (client || '').toUpperCase().trim() || 'NOMBRE DEL CLIENTE';\r\n  return `Cotización ${seq} LEM-GEOFAL-${clientName}`;\r\n}\r\n\r\n// Texto exacto por variante (extraído de REQUERIMIENTOS_COTIZACION_LABORATORIO.txt)\r\n// Usamos claves normalizadas (mayúsculas, sin acentos) para robustez.\r\nconst normalizeKey = (s = '') => (s || '')\r\n  .normalize('NFD')\r\n  .replace(/[\\u0300-\\u036f]/g, '')\r\n  .toUpperCase()\r\n  .trim();\r\n\r\nconst VARIANT_TEXTS = {\r\n  [normalizeKey('MUESTRA DE SUELO Y AGREGADO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('PROBETAS')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe proporcionar las probetas antes del ingreso a obra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('DENSIDAD DE CAMPO Y MUESTREO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- Para el ensayo de Densidad de campo, la cantidad de puntos/salida minimo 4 und.\\n- El cliente deberá de programar el servicio, Densidad de campo, con 24 horas de anticipación.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('EXTRACCIÓN DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  // alias sin acentos\r\n  [normalizeKey('EXTRACCION DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  [normalizeKey('DIAMANTINA PARA PASES')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Extracción diamantina, con 24 horas de anticipación.\\n- El area de trabajo, zona de extraccion de diamantina, debera estar libre de interferencia.\\n- Para extraer la diamantina, se ubicara el acero con un escaneador.\\n- Movilizacion y desmovilizacion de equipos y del personal tecnico, estara a cargo de Geofal.`,\r\n  [normalizeKey('ALBAÑILERÍA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  // alias sin ñ\r\n  [normalizeKey('ALBANILERIA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  [normalizeKey('VIGA BECKELMAN')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Ensayo de Deflexión, con 24 horas de anticipación.\\n- El area de trabajo tiene que estar habilitado.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP o MTC vigente de acuerdo con el alcance del laboratorio.\\n- Especificar las caracteristicas del camion`,\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n  // alias más corto usado en análisis\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n};\r\n\r\nconst getVariantText = (v) => {\r\n  const t = normalizeKey(v?.title || '');\r\n  if (VARIANT_TEXTS[t]) return VARIANT_TEXTS[t];\r\n  // intento de match por inclusión si el título difiere levemente\r\n  const entry = Object.entries(VARIANT_TEXTS).find(([k]) => t.includes(k) || k.includes(t));\r\n  return entry ? entry[1] : '';\r\n};\r\n\r\nconst CotizacionNuevaLEM = () => {\r\n  const [variants, setVariants] = useState([]);\r\n  const [variantId, setVariantId] = useState('');\r\n  const [client, setClient] = useState(emptyClient);\r\n  const [selection, setSelection] = useState({ company_id: null, project_id: null, company: null, project: null });\r\n  const [quote, setQuote] = useState(emptyQuote);\r\n  const [items, setItems] = useState([{ ...emptyItem }]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [conditionsText, setConditionsText] = useState('');\r\n  // Modal eliminado: ya no se usa vista de cards\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const v = await listVariants({ active: true });\r\n        const loaded = v || [];\r\n        if (loaded.length > 0) {\r\n          setVariants(loaded);\r\n          return;\r\n        }\r\n        // Fallback local de variantes si la API devuelve vacío, para que las cards sean visibles\r\n        const fallback = [\r\n          { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n          { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n          { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n          { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n          { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n          { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n          { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n          { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n        ];\r\n        setVariants(fallback);\r\n      } catch (e) {\r\n        // En error, también usar fallback local\r\n        const fallback = [\r\n          { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n          { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n          { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n          { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n          { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n          { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n          { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n          { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n        ];\r\n        setVariants(fallback);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const subtotal = useMemo(() => items.reduce((acc, it) => acc + computePartial(it), 0), [items]);\r\n  const igvAmount = useMemo(() => quote.igv ? Number((subtotal * 0.18).toFixed(2)) : 0, [subtotal, quote.igv]);\r\n  const total = useMemo(() => Number((subtotal + igvAmount).toFixed(2)), [subtotal, igvAmount]);\r\n\r\n  const onAddItem = () => setItems([...items, { ...emptyItem }]);\r\n  const onRemoveItem = (idx) => setItems(items.filter((_, i) => i !== idx));\r\n  const onChangeItem = (idx, patch) => setItems(items.map((it, i) => (i === idx ? { ...it, ...patch } : it)));\r\n\r\n  // Autocompletar campos desde la variante seleccionada\r\n  useEffect(() => {\r\n    if (!variantId) return;\r\n    const v = (variants || []).find(x => String(x.id) === String(variantId));\r\n    if (!v) return;\r\n    const c = v.conditions || {};\r\n    setQuote(prev => ({\r\n      ...prev,\r\n      payment_terms: c.default_payment_terms || prev.payment_terms,\r\n      acceptance: typeof c.default_acceptance === 'boolean' ? c.default_acceptance : prev.acceptance,\r\n      igv: typeof c.default_igv === 'boolean' ? c.default_igv : prev.igv,\r\n      reference: c.default_reference || prev.reference,\r\n    }));\r\n    // Autollenar textarea de Condiciones específicas con el texto exacto\r\n    const extra = getVariantText(v) || v.description || '';\r\n    if (extra) setConditionsText(extra);\r\n    if (Array.isArray(c.default_items) && items.length <= 1 && !items[0].code && !items[0].description && !items[0].norm) {\r\n      const mapped = c.default_items.map(di => ({\r\n        code: di.code || '',\r\n        description: di.description || '',\r\n        norm: di.norm || '',\r\n        unit_price: Number(di.unit_price || 0),\r\n        quantity: Number(di.quantity || 1),\r\n      }));\r\n      if (mapped.length) setItems(mapped);\r\n    }\r\n    if (c.default_service_name && !client.service_name) {\r\n      setClient(prev => ({ ...prev, service_name: c.default_service_name }));\r\n    }\r\n  }, [variantId]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      // Construir payload de cotización base\r\n      const numericVariantId = /^\\d+$/.test(String(variantId)) ? Number(variantId) : null;\r\n      const payload = {\r\n        project_id: selection.project?.id || selection.project_id || null,\r\n        variant_id: numericVariantId,\r\n        client_contact: client.contact_name,\r\n        client_email: client.contact_email,\r\n        client_phone: client.contact_phone,\r\n        issue_date: quote.issue_date || new Date().toISOString().slice(0, 10),\r\n        subtotal,\r\n        igv: igvAmount,\r\n        total,\r\n        status: 'borrador',\r\n        // campos adicionales útiles\r\n        meta: {\r\n          customer: client,\r\n          quote,\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms,\r\n          acceptance: quote.acceptance,\r\n          reference: quote.reference,\r\n          subtotal,\r\n          igv: igvAmount,\r\n          file_name: suggestedFileName('xxx-XX', client.company_name),\r\n        }\r\n      };\r\n      const saved = await createQuote(payload);\r\n      // Añadir ítems\r\n      for (const it of items) {\r\n        await addQuoteItem({\r\n          quote_id: saved.id,\r\n          code: it.code,\r\n          description: it.description,\r\n          norm: it.norm,\r\n          unit_price: Number(it.unit_price || 0),\r\n          quantity: Number(it.quantity || 0),\r\n          partial_price: computePartial(it),\r\n        });\r\n      }\r\n      alert('Cotización creada');\r\n      // Guardar id para exportaciones\r\n      setLastSavedId(saved.id);\r\n      // Redirigir a detalle/edición en el futuro\r\n    } catch (e) {\r\n      setError(e.message || 'Error al crear cotización');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const [lastSavedId, setLastSavedId] = useState(null);\r\n\r\n  const exportFile = async (type) => {\r\n    try {\r\n      const id = lastSavedId; // en futuro usar id de ruta/estado\r\n      if (!id) return alert('Guarde la cotización antes de exportar');\r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/${type}`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      // abre en nueva pestaña para descargar\r\n      window.open(url, '_blank');\r\n    } catch (e) {\r\n      alert('No se pudo exportar');\r\n    }\r\n  };\r\n\r\n  const exportDraft = async () => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de generar el borrador');\r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/pdf-draft`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      window.open(url, '_blank');\r\n    } catch {\r\n      alert('No se pudo generar el borrador');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModuloBase titulo=\"Nueva Cotización LEM\" descripcion=\"Plantilla de cotización para Laboratorio con variantes y condiciones\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={onSubmit} className=\"lem-quote-page\">\r\n        <CompanyProjectPicker value={selection} onChange={setSelection} />\r\n        <div className=\"alert alert-light border mt-3 lem-intro\">\r\n          Completa el formulario para crear una nueva cotización del Laboratorio (LEM). Los campos están agrupados por sección para facilitar el flujo.\r\n        </div>\r\n        <div className=\"row g-4 mt-3\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card shadow-sm\">\r\n              <div className=\"card-header py-2\">\r\n                <strong>Datos del Cliente</strong>\r\n                <div className=\"lem-subtitle\">Información del cliente y del proyecto.</div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n            <div className=\"mb-3\"><label className=\"form-label\">Empresa</label><input className=\"form-control\" value={client.company_name} onChange={e=>setClient({...client, company_name:e.target.value})} required/><div className=\"form-text\">Razón social o nombre comercial del cliente.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">R.U.C.</label><input className=\"form-control\" value={client.ruc} onChange={e=>setClient({...client, ruc:e.target.value})} /><div className=\"form-text\">RUC de la empresa (si aplica). Para persona natural, deja vacío.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Contacto</label><input className=\"form-control\" value={client.contact_name} onChange={e=>setClient({...client, contact_name:e.target.value})} required/><div className=\"form-text\">Nombre de la persona que solicita la cotización.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Teléfono</label><input className=\"form-control\" value={client.contact_phone} onChange={e=>setClient({...client, contact_phone:e.target.value})} /><div className=\"form-text\">Teléfono del contacto para coordinaciones.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Correo</label><input type=\"email\" className=\"form-control\" value={client.contact_email} onChange={e=>setClient({...client, contact_email:e.target.value})} /><div className=\"form-text\">Correo del contacto para envío de la cotización.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Ubicación del proyecto</label><input className=\"form-control\" value={client.project_location} onChange={e=>setClient({...client, project_location:e.target.value})} /></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Nombre del proyecto</label><input className=\"form-control\" value={client.project_name} onChange={e=>setClient({...client, project_name:e.target.value})} /></div>\r\n            <div className=\"mb-0\"><label className=\"form-label\">Nombre del servicio</label><input className=\"form-control\" value={client.service_name} onChange={e=>setClient({...client, service_name:e.target.value})} /><div className=\"form-text\">Ej.: Ensayos de suelo y agregado, Extracción de diamantina, etc.</div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card shadow-sm\">\r\n              <div className=\"card-header py-2\">\r\n                <strong>Datos de la Cotización</strong>\r\n                <div className=\"lem-subtitle\">Fechas, referencia y configuración principal.</div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n            <div className=\"mb-3\"><label className=\"form-label\">Fecha de Solicitud</label><input type=\"date\" className=\"form-control\" value={quote.request_date} onChange={e=>setQuote({...quote, request_date:e.target.value})} /></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Fecha de Emisión</label><input type=\"date\" className=\"form-control\" value={quote.issue_date} onChange={e=>setQuote({...quote, issue_date:e.target.value})} /></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Comercial</label><input className=\"form-control\" value={quote.commercial_name} onChange={e=>setQuote({...quote, commercial_name:e.target.value})} /><div className=\"form-text\">Nombre del asesor comercial que atiende al cliente.</div></div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Referencia</label><input className=\"form-control\" placeholder=\"SEGÚN LO SOLICITADO VÍA correo / llamada\" value={quote.reference} onChange={e=>setQuote({...quote, reference:e.target.value})} /><div className=\"form-text\">Contexto corto de la solicitud (llamada, correo, OS, etc.).</div></div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Variante</label>\r\n              <div className=\"d-flex gap-2 align-items-center\">\r\n                <select className=\"form-select\" value={variantId} onChange={(e)=>setVariantId(e.target.value)} style={{maxWidth:'70%'}}>\r\n                  <option value=\"\">Sin variante</option>\r\n                  {(variants||[]).map(v => <option key={v.id} value={v.id}>{v.code} - {v.title}</option>)}\r\n                </select>\r\n                {variantId ? (\r\n                  <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={()=>{ setVariantId(''); setConditionsText(''); }}>\r\n                    Quitar\r\n                  </button>\r\n                ) : null}\r\n              </div>\r\n              {variantId ? (()=>{\r\n                const v = (variants||[]).find(x=>String(x.id)===String(variantId));\r\n                if (!v) return null;\r\n                const extra = getVariantText(v) || v.description || '';\r\n                return (\r\n                  <div className=\"alert alert-info mt-2 p-2\">\r\n                    <div className=\"fw-semibold small\">{v.code} - {v.title}</div>\r\n                    {extra ? <div className=\"small text-muted\" style={{whiteSpace:'pre-line'}}>{extra}</div> : null}\r\n                  </div>\r\n                );\r\n              })() : <div className=\"form-text\">Selecciona una variante del listado.</div>}\r\n            </div>\r\n            <div className=\"mb-3\"><label className=\"form-label\">Forma de pago</label>\r\n              <select className=\"form-select\" value={quote.payment_terms} onChange={e=>setQuote({...quote, payment_terms:e.target.value})}>\r\n                <option value=\"adelantado\">Adelantado</option>\r\n                <option value=\"50%\">Adelanto 50% y saldo previo al informe</option>\r\n                <option value=\"credito7\">Crédito 7 días con OS</option>\r\n                <option value=\"credito15\">Crédito 15 días con OS</option>\r\n                <option value=\"credito30\">Crédito 30 días con OS</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-check mb-3\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"igv\" checked={quote.igv} onChange={e=>setQuote({...quote, igv: e.target.checked})}/>\r\n              <label className=\"form-check-label\" htmlFor=\"igv\">Aplicar IGV 18%</label>\r\n            </div>\r\n            <div className=\"form-check mb-3\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"acceptance\" checked={quote.acceptance} onChange={e=>setQuote({...quote, acceptance:e.target.checked})}/>\r\n              <label className=\"form-check-label\" htmlFor=\"acceptance\">Aceptación de cotización</label>\r\n            </div>\r\n            <div className=\"mb-0\"><label className=\"form-label\">Nombre de archivo sugerido</label>\r\n              <input className=\"form-control\" value={suggestedFileName('xxx-XX', client.company_name)} readOnly />\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sección: Condiciones específicas */}\r\n        <div className=\"card shadow-sm lem-section-gap\">\r\n          <div className=\"card-header py-2\">\r\n            <strong>Condiciones específicas</strong>\r\n            <div className=\"lem-subtitle\">Se auto-completan según la variante; puedes editarlas.</div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <textarea\r\n              className=\"form-control lem-monospace\"\r\n              rows={8}\r\n              placeholder=\"Aquí aparecerán las condiciones de la variante seleccionada; puedes editarlas si es necesario.\"\r\n              value={conditionsText}\r\n              onChange={(e)=>setConditionsText(e.target.value)}\r\n            />\r\n            <div className=\"form-text mt-2\">Este texto se guardará en la cotización y se usará para PDF/Excel.</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal eliminado: la selección se hace solo con el menú desplegable */}\r\n\r\n  <div className=\"card shadow-sm mt-4\">\r\n    <div className=\"card-header py-2\">\r\n      <strong>Ítems</strong>\r\n      <div className=\"lem-subtitle\">Detalle de ensayos/servicios cotizados.</div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered align-middle\">\r\n            <thead>\r\n              <tr>\r\n                <th>Código/N° ensayo</th>\r\n                <th>Descripción</th>\r\n                <th>Norma</th>\r\n                <th>Unitario (S/)</th>\r\n                <th>Cantidad</th>\r\n                <th>Parcial (S/)</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((it, idx) => (\r\n                <tr key={idx}>\r\n                  <td><input className=\"form-control\" value={it.code} onChange={e=>onChangeItem(idx, { code: e.target.value })} /></td>\r\n                  <td><textarea className=\"form-control\" rows={1} value={it.description} onChange={e=>onChangeItem(idx, { description: e.target.value })} /></td>\r\n                  <td><input className=\"form-control\" value={it.norm} onChange={e=>onChangeItem(idx, { norm: e.target.value })} /></td>\r\n                  <td style={{ width: 120 }}><input type=\"number\" step=\"0.01\" className=\"form-control\" value={it.unit_price} onChange={e=>onChangeItem(idx, { unit_price: e.target.value })} /></td>\r\n                  <td style={{ width: 100 }}><input type=\"number\" className=\"form-control\" value={it.quantity} onChange={e=>onChangeItem(idx, { quantity: e.target.value })} /></td>\r\n                  <td style={{ width: 120 }}>{computePartial(it)}</td>\r\n                  <td style={{ width: 80 }}>\r\n                    <button type=\"button\" className=\"btn btn-sm btn-outline-danger\" onClick={()=>onRemoveItem(idx)} disabled={items.length===1}>-</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onAddItem}>Agregar ítem</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Resumen y Acciones */}\r\n  <div className=\"card shadow-sm mt-3\">\r\n    <div className=\"card-header py-2\">\r\n      <strong>Resumen y Acciones</strong>\r\n      <div className=\"lem-subtitle\">Revisa montos y genera tus archivos.</div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      <div className=\"row align-items-center g-3\">\r\n        <div className=\"col-md\">\r\n          <div className=\"text-md-end\">\r\n            <div>Subtotal: S/ {subtotal.toFixed(2)}</div>\r\n            <div>IGV 18%: S/ {igvAmount.toFixed(2)}</div>\r\n            <div><strong>Total: S/ {total.toFixed(2)}</strong></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-auto\">\r\n          <div className=\"d-flex flex-wrap gap-2 lem-actions\">\r\n            <button type=\"submit\" className=\"btn btn-success\" disabled={saving || !selection.project?.id && !selection.project_id}>{saving ? 'Guardando...' : 'Guardar borrador'}</button>\r\n            <button type=\"button\" className=\"btn btn-outline-warning\" onClick={exportDraft}>PDF Borrador</button>\r\n            <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('pdf')}>Exportar PDF</button>\r\n            <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('excel')}>Exportar Excel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n      </form>\r\n    </ModuloBase>\r\n  );\r\n};\r\n\r\nexport default CotizacionNuevaLEM;\r\n"],"names":["CompanyProjectPicker","value","onChange","companies","setCompanies","useState","loading","setLoading","form","setForm","error","setError","useEffect","res","listCompanies","data","selectedCompany","useMemo","createQuickProject","payload","prj","createProject","e","jsxs","jsx","emptyClient","emptyQuote","emptyItem","computePartial","item","q","suggestedFileName","seq","client","clientName","normalizeKey","s","VARIANT_TEXTS","getVariantText","v","t","entry","k","CotizacionNuevaLEM","variants","setVariants","variantId","setVariantId","setClient","selection","setSelection","quote","setQuote","items","setItems","saving","setSaving","conditionsText","setConditionsText","loaded","listVariants","fallback","subtotal","acc","it","igvAmount","total","onAddItem","onRemoveItem","idx","_","i","onChangeItem","patch","x","c","prev","extra","mapped","di","onSubmit","numericVariantId","_a","saved","createQuote","addQuoteItem","setLastSavedId","lastSavedId","exportFile","type","id","base","path","url","exportDraft","ModuloBase"],"mappings":"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"}