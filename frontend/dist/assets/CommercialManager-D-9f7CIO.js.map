{"version":3,"file":"CommercialManager-D-9f7CIO.js","sources":["../../src/services/exportService.js","../../src/pages/CommercialManager.jsx"],"sourcesContent":["import apiFetch from './api';\r\n\r\nconst exportService = {\r\n  /**\r\n   * Exportar clientes a CSV\r\n   */\r\n  async exportClientsCSV(filters = {}) {\r\n    try {\r\n      console.log('üìä Exportando clientes a CSV...');\r\n      \r\n      const response = await fetch('/api/export/clients/csv', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ filters })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al exportar CSV');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `clientes_${new Date().toISOString().split('T')[0]}.csv`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log('‚úÖ CSV exportado exitosamente');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('‚ùå Error exportando CSV:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Exportar clientes a JSON\r\n   */\r\n  async exportClientsJSON(filters = {}) {\r\n    try {\r\n      console.log('üìä Exportando clientes a JSON...');\r\n      \r\n      const response = await fetch('/api/export/clients/json', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ filters })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al exportar JSON');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `clientes_${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log('‚úÖ JSON exportado exitosamente');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('‚ùå Error exportando JSON:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener estad√≠sticas para exportaci√≥n\r\n   */\r\n  async getExportStats(filters = {}) {\r\n    try {\r\n      console.log('üìä Obteniendo estad√≠sticas de exportaci√≥n...');\r\n      const response = await apiFetch('/api/export/clients/stats', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ filters })\r\n      });\r\n      console.log('‚úÖ Estad√≠sticas obtenidas:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Error obteniendo estad√≠sticas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default exportService;\r\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Table, Badge, Button, Form, InputGroup, Alert, Spinner, Dropdown } from 'react-bootstrap';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { \n  FiUsers, FiTrendingUp, FiDollarSign, FiCalendar, \n  FiSearch, FiFilter, FiDownload, FiEye, FiMessageSquare,\n  FiUser, FiMail, FiPhone, FiMapPin, FiHome, FiActivity,\n  FiFileText, FiDatabase, FiChevronDown, FiRefreshCw\n} from 'react-icons/fi';\nimport { listCompanies } from '../services/companies';\nimport exportService from '../services/exportService';\nimport { useAuth } from '../contexts/AuthContext';\nimport RequireRole from '../components/RequireRole';\nimport './CommercialManager.css';\n\n// Funci√≥n para extraer prioridad del sector\nconst extractPriorityFromSector = (sector) => {\n  if (!sector) return 'normal';\n  if (sector.includes('[PRIORIDAD: URGENTE]') || sector.includes('[URG]')) return 'urgent';\n  if (sector.includes('[PRIORIDAD: ALTA]') || sector.includes('[ALTA]')) return 'high';\n  if (sector.includes('[PRIORIDAD: BAJA]') || sector.includes('[BAJA]')) return 'low';\n  return 'normal';\n};\n\n// Funci√≥n para limpiar el sector para mostrar\nconst cleanSectorForDisplay = (sector) => {\n  if (!sector) return 'General';\n  return sector.replace(/\\s*\\[PRIORIDAD:\\s*\\w+\\]/g, '').replace(/\\s*\\[URG\\]/g, '').replace(/\\s*\\[ALTA\\]/g, '').replace(/\\s*\\[BAJA\\]/g, '').trim() || 'General';\n};\n\n// Configuraci√≥n de prioridades\nconst PRIORITY_CONFIG = {\n  urgent: { label: 'URGENTE', variant: 'danger', icon: FiActivity },\n  high: { label: 'ALTA', variant: 'warning', icon: FiTrendingUp },\n  normal: { label: 'NORMAL', variant: 'info', icon: FiUser },\n  low: { label: 'BAJA', variant: 'secondary', icon: FiCalendar }\n};\n\n// Configuraci√≥n de estados\nconst STATUS_CONFIG = {\n  prospeccion: { label: 'Prospecci√≥n', variant: 'primary' },\n  interesado: { label: 'Interesado', variant: 'info' },\n  pendiente_cotizacion: { label: 'Pendiente Cotizaci√≥n', variant: 'warning' },\n  cotizacion_enviada: { label: 'Cotizaci√≥n Enviada', variant: 'secondary' },\n  negociacion: { label: 'Negociaci√≥n', variant: 'warning' },\n  ganado: { label: 'Ganado', variant: 'success' },\n  perdido: { label: 'Perdido', variant: 'danger' }\n};\n\nconst CommercialManager = () => {\n  const { user } = useAuth();\n  const queryClient = useQueryClient();\n  \n  // Estados para filtros y paginaci√≥n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [selectedPriority, setSelectedPriority] = useState('');\n  const [selectedSector, setSelectedSector] = useState('');\n  const [sortBy, setSortBy] = useState('created_at');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportType, setExportType] = useState('');\n\n  // Consulta principal de clientes\n  const { data, isLoading, error, refetch } = useQuery(\n    ['commercial-clients', currentPage, searchTerm, selectedStatus, selectedPriority, selectedSector, sortBy, sortOrder],\n    () => listCompanies({ \n      page: currentPage, \n      limit: 50, \n      search: searchTerm,\n      status: selectedStatus,\n      sector: selectedSector,\n      sortBy,\n      sortOrder\n    }),\n    { \n      keepPreviousData: true,\n      refetchOnWindowFocus: true,\n      staleTime: 30000 // 30 segundos\n    }\n  );\n\n  const clients = data?.data || [];\n  const totalPages = data?.totalPages || 1;\n  const totalClients = data?.total || 0;\n\n  // Estad√≠sticas calculadas\n  const stats = React.useMemo(() => {\n    if (!clients.length) return { total: 0, byStatus: {}, byPriority: {}, bySector: {} };\n    \n    const byStatus = {};\n    const byPriority = {};\n    const bySector = {};\n    \n    clients.forEach(client => {\n      // Por estado\n      byStatus[client.status] = (byStatus[client.status] || 0) + 1;\n      \n      // Por prioridad\n      const priority = extractPriorityFromSector(client.sector);\n      byPriority[priority] = (byPriority[priority] || 0) + 1;\n      \n      // Por sector\n      const cleanSector = cleanSectorForDisplay(client.sector);\n      bySector[cleanSector] = (bySector[cleanSector] || 0) + 1;\n    });\n    \n    return {\n      total: clients.length,\n      byStatus,\n      byPriority,\n      bySector\n    };\n  }, [clients]);\n\n  // Funci√≥n para manejar el ordenamiento\n  const handleSort = (field) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  // Funci√≥n para limpiar filtros\n  const clearFilters = () => {\n    setSearchTerm('');\n    setSelectedStatus('');\n    setSelectedPriority('');\n    setSelectedSector('');\n    setCurrentPage(1);\n  };\n\n  // Funci√≥n para exportar datos\n  const handleExport = async (type) => {\n    try {\n      setIsExporting(true);\n      setExportType(type);\n      \n      const filters = {\n        search: searchTerm,\n        status: selectedStatus,\n        sector: selectedSector,\n        sortBy,\n        sortOrder\n      };\n      \n      if (type === 'csv') {\n        await exportService.exportClientsCSV(filters);\n      } else if (type === 'json') {\n        await exportService.exportClientsJSON(filters);\n      }\n      \n      alert(`‚úÖ Datos exportados exitosamente en formato ${type.toUpperCase()}`);\n    } catch (error) {\n      console.error('Error en exportaci√≥n:', error);\n      alert(`‚ùå Error al exportar datos: ${error.message}`);\n    } finally {\n      setIsExporting(false);\n      setExportType('');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Container fluid className=\"py-4\">\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '400px' }}>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Cargando...</span>\n          </Spinner>\n        </div>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container fluid className=\"py-4\">\n        <Alert variant=\"danger\">\n          <Alert.Heading>Error al cargar los datos</Alert.Heading>\n          <p>{error.message}</p>\n          <Button variant=\"outline-danger\" onClick={() => refetch()}>\n            Reintentar\n          </Button>\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <RequireRole roles={['admin', 'comercial']}>\n      <div className=\"commercial-manager\">\n        <Container fluid className=\"py-4\">\n          {/* Header */}\n          <Row className=\"mb-4\">\n            <Col>\n              <div className=\"excel-header\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <h2 className=\"excel-title\">\n                      <FiUsers className=\"me-2\" />\n                      Panel de Gesti√≥n Comercial\n                    </h2>\n                    <p className=\"excel-subtitle\">\n                      Vista completa de todos los clientes y su informaci√≥n de seguimiento\n                    </p>\n                  </div>\n                  <div className=\"d-flex gap-2\">\n                <Dropdown>\n                  <Dropdown.Toggle \n                    variant=\"outline-primary\" \n                    disabled={isExporting}\n                    className=\"d-flex align-items-center\"\n                  >\n                    {isExporting ? (\n                      <>\n                        <Spinner size=\"sm\" className=\"me-1\" />\n                        Exportando {exportType?.toUpperCase()}...\n                      </>\n                    ) : (\n                      <>\n                        <FiDownload className=\"me-1\" />\n                        Exportar\n                        <FiChevronDown className=\"ms-1\" />\n                      </>\n                    )}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item onClick={() => handleExport('csv')} disabled={isExporting}>\n                      <FiFileText className=\"me-2\" />\n                      Exportar CSV\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => handleExport('json')} disabled={isExporting}>\n                      <FiDatabase className=\"me-2\" />\n                      Exportar JSON\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Button variant=\"primary\" onClick={() => refetch()} disabled={isExporting}>\n                  <FiRefreshCw className=\"me-1\" />\n                  Actualizar\n                </Button>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n\n          {/* Estad√≠sticas */}\n          <Row className=\"mb-4\">\n            <Col md={3}>\n              <div className=\"stat-card\">\n                <div className=\"stat-icon text-primary\">\n                  <FiUsers size={24} />\n                </div>\n                <h4 className=\"stat-number text-primary\">{totalClients}</h4>\n                <p className=\"stat-label\">Total Clientes</p>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"stat-card\">\n                <div className=\"stat-icon text-warning\">\n                  <FiTrendingUp size={24} />\n                </div>\n                <h4 className=\"stat-number text-warning\">{stats.byPriority.urgent || 0}</h4>\n                <p className=\"stat-label\">Urgentes</p>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"stat-card\">\n                <div className=\"stat-icon text-success\">\n                  <FiDollarSign size={24} />\n                </div>\n                <h4 className=\"stat-number text-success\">{stats.byStatus.ganado || 0}</h4>\n                <p className=\"stat-label\">Ganados</p>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"stat-card\">\n                <div className=\"stat-icon text-info\">\n                  <FiActivity size={24} />\n                </div>\n                <h4 className=\"stat-number text-info\">{stats.byStatus.prospeccion || 0}</h4>\n                <p className=\"stat-label\">En Prospecci√≥n</p>\n              </div>\n            </Col>\n          </Row>\n\n          {/* Filtros */}\n          <div className=\"excel-filters\">\n            <div className=\"filter-row\">\n              <div className=\"filter-group\">\n                <div className=\"filter-label\">Buscar</div>\n                <InputGroup>\n                  <InputGroup.Text><FiSearch /></InputGroup.Text>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Buscar cliente...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"filter-input\"\n                  />\n                </InputGroup>\n              </div>\n              <div className=\"filter-group\">\n                <div className=\"filter-label\">Estado</div>\n                <Form.Select\n                  value={selectedStatus}\n                  onChange={(e) => setSelectedStatus(e.target.value)}\n                  className=\"filter-input\"\n                >\n                  <option value=\"\">Todos los estados</option>\n                  {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n                    <option key={key} value={key}>{config.label}</option>\n                  ))}\n                </Form.Select>\n              </div>\n              <div className=\"filter-group\">\n                <div className=\"filter-label\">Prioridad</div>\n                <Form.Select\n                  value={selectedPriority}\n                  onChange={(e) => setSelectedPriority(e.target.value)}\n                  className=\"filter-input\"\n                >\n                  <option value=\"\">Todas las prioridades</option>\n                  {Object.entries(PRIORITY_CONFIG).map(([key, config]) => (\n                    <option key={key} value={key}>{config.label}</option>\n                  ))}\n                </Form.Select>\n              </div>\n              <div className=\"filter-group\">\n                <div className=\"filter-label\">Sector</div>\n                <Form.Select\n                  value={selectedSector}\n                  onChange={(e) => setSelectedSector(e.target.value)}\n                  className=\"filter-input\"\n                >\n                  <option value=\"\">Todos los sectores</option>\n                  {Object.keys(stats.bySector).map(sector => (\n                    <option key={sector} value={sector}>{sector}</option>\n                  ))}\n                </Form.Select>\n              </div>\n              <div className=\"filter-group\">\n                <div className=\"filter-label\">&nbsp;</div>\n                <Button variant=\"outline-secondary\" onClick={clearFilters} className=\"filter-input\">\n                  <FiFilter className=\"me-1\" />\n                  Limpiar\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Tabla de clientes */}\n          <div className=\"excel-table-container\">\n            <div className=\"excel-table-header\">\n              <div className=\"d-flex justify-content-between align-items-center w-100\">\n                <h5 className=\"excel-table-title\">Lista de Clientes</h5>\n                <small className=\"excel-table-count\">\n                  Mostrando {clients.length} de {totalClients} clientes\n                </small>\n              </div>\n            </div>\n            <div className=\"table-responsive\">\n              <Table className=\"excel-table\">\n                <thead>\n                  <tr>\n                    <th \n                      className={`sortable ${sortBy === 'name' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\n                      onClick={() => handleSort('name')}\n                    >\n                      Cliente\n                    </th>\n                    <th>Contacto</th>\n                    <th \n                      className={`sortable ${sortBy === 'status' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\n                      onClick={() => handleSort('status')}\n                    >\n                      Estado\n                    </th>\n                    <th>Prioridad</th>\n                    <th>Sector</th>\n                    <th \n                      className={`sortable ${sortBy === 'created_at' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\n                      onClick={() => handleSort('created_at')}\n                    >\n                      Fecha Creaci√≥n\n                    </th>\n                    <th>Acciones</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {clients.map((client) => {\n                    const priority = extractPriorityFromSector(client.sector);\n                    const cleanSector = cleanSectorForDisplay(client.sector);\n                    const priorityConfig = PRIORITY_CONFIG[priority];\n                    const statusConfig = STATUS_CONFIG[client.status];\n                    \n                    return (\n                      <tr key={client.id}>\n                        <td>\n                          <div className=\"cell-client\">\n                            <div>{client.name}</div>\n                            <small className=\"text-muted\">\n                              {client.ruc && `RUC: ${client.ruc}`}\n                            </small>\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"cell-contact\">\n                            <div className=\"cell-contact-item\">\n                              <FiUser className=\"cell-contact-icon\" />\n                              {client.contact_name || 'Sin contacto'}\n                            </div>\n                            {client.email && (\n                              <div className=\"cell-contact-item\">\n                                <FiMail className=\"cell-contact-icon\" />\n                                <small className=\"text-muted\">{client.email}</small>\n                              </div>\n                            )}\n                            {client.phone && (\n                              <div className=\"cell-contact-item\">\n                                <FiPhone className=\"cell-contact-icon\" />\n                                <small className=\"text-muted\">{client.phone}</small>\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <span className={`cell-status status-${client.status}`}>\n                            {statusConfig?.label || client.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className={`cell-priority priority-${priority}`}>\n                            {priorityConfig?.icon && <priorityConfig.icon className=\"cell-priority-icon\" />}\n                            {priorityConfig?.label || priority}\n                          </span>\n                        </td>\n                        <td>\n                          <div className=\"cell-sector\">\n                            <div>{cleanSector}</div>\n                            {client.city && (\n                              <div className=\"cell-sector-location\">\n                                <FiMapPin className=\"cell-contact-icon\" />\n                                {client.city}\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"cell-date\">\n                            <FiCalendar className=\"cell-date-icon\" />\n                            {new Date(client.created_at).toLocaleDateString('es-ES')}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"cell-actions\">\n                            <button\n                              className=\"cell-action-btn\"\n                              title=\"Ver historial\"\n                            >\n                              <FiEye className=\"cell-action-icon\" />\n                            </button>\n                            <button\n                              className=\"cell-action-btn\"\n                              title=\"Comentarios\"\n                            >\n                              <FiMessageSquare className=\"cell-action-icon\" />\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n            <div className=\"excel-pagination\">\n              <div className=\"d-flex justify-content-between align-items-center w-100\">\n                <small className=\"text-muted\">\n                  P√°gina {currentPage} de {totalPages}\n                </small>\n                <div className=\"d-flex gap-2\">\n                  <button\n                    className=\"pagination-btn\"\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                  >\n                    Anterior\n                  </button>\n                  <button\n                    className=\"pagination-btn\"\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                  >\n                    Siguiente\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </RequireRole>\n  );\n};\n\nexport default CommercialManager;\n"],"names":["exportService","filters","response","blob","url","link","error","apiFetch","extractPriorityFromSector","sector","cleanSectorForDisplay","PRIORITY_CONFIG","FiActivity","FiTrendingUp","FiUser","FiCalendar","STATUS_CONFIG","CommercialManager","user","useAuth","useQueryClient","currentPage","setCurrentPage","useState","searchTerm","setSearchTerm","selectedStatus","setSelectedStatus","selectedPriority","setSelectedPriority","selectedSector","setSelectedSector","sortBy","setSortBy","sortOrder","setSortOrder","isExporting","setIsExporting","exportType","setExportType","data","isLoading","refetch","useQuery","listCompanies","clients","totalPages","totalClients","stats","React","byStatus","byPriority","bySector","client","priority","cleanSector","handleSort","field","clearFilters","handleExport","type","jsx","Container","Spinner","jsxs","Alert","Button","RequireRole","Row","Col","FiUsers","Dropdown","Fragment","FiDownload","FiChevronDown","FiFileText","FiDatabase","FiRefreshCw","FiDollarSign","InputGroup","FiSearch","Form","e","key","config","FiFilter","Table","priorityConfig","statusConfig","FiMail","FiPhone","FiMapPin","FiEye","FiMessageSquare","prev"],"mappings":"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"}