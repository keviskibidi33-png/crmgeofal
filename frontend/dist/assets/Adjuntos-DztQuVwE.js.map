{"version":3,"file":"Adjuntos-DztQuVwE.js","sources":["../../src/components/CompanyProjectPicker.jsx","../../src/components/Modal.jsx","../../src/pages/Adjuntos.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { listCompanies } from '../services/companies';\r\nimport { createProject, listProjects, updateProject } from '../services/projects';\r\n\r\n// Lightweight picker: select existing company and define minimal project data\r\nexport default function CompanyProjectPicker({ value, onChange }) {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form, setForm] = useState({ company_id: '', project_id: '', project_name: '', location: '' });\r\n  const [error, setError] = useState('');\r\n  \r\n  // Estados para el modal de proyectos\r\n  const [showProjectModal, setShowProjectModal] = useState(false);\r\n  const [editingProject, setEditingProject] = useState(null);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  // Efecto para controlar el scroll del body cuando el modal está abierto\r\n  useEffect(() => {\r\n    if (showProjectModal) {\r\n      // Prevenir scroll del body\r\n      document.body.style.overflow = 'hidden';\r\n      \r\n      // Agregar listener para tecla Escape\r\n      const handleEscape = (e) => {\r\n        if (e.key === 'Escape') {\r\n          closeProjectModal();\r\n        }\r\n      };\r\n      \r\n      document.addEventListener('keydown', handleEscape);\r\n      \r\n      return () => {\r\n        document.removeEventListener('keydown', handleEscape);\r\n      };\r\n    } else {\r\n      // Restaurar scroll del body\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n\r\n    // Cleanup al desmontar el componente\r\n    return () => {\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [showProjectModal]);\r\n  const [projectForm, setProjectForm] = useState({\r\n    name: '',\r\n    location: '',\r\n    sector: '',\r\n    status: 'activo',\r\n    description: '',\r\n    start_date: '',\r\n    end_date: '',\r\n    priority: 'media'\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Solo cargar empresas inicialmente\r\n        const companiesRes = await listCompanies({ page: 1, limit: 50 });\r\n        const companiesData = Array.isArray(companiesRes?.data) ? companiesRes.data : companiesRes;\r\n        setCompanies(companiesData || []);\r\n      } catch (e) {\r\n        setError('No se pudo cargar empresas');\r\n      } finally { setLoading(false); }\r\n    })();\r\n  }, []);\r\n\r\n  // Cargar proyectos cuando se selecciona un cliente (con debounce)\r\n  useEffect(() => {\r\n    if (!form.company_id) {\r\n      setProjects([]);\r\n      return;\r\n    }\r\n\r\n    // Debounce para evitar llamadas excesivas\r\n    const timeoutId = setTimeout(async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        console.log('🔍 Cargando proyectos para company_id:', form.company_id);\r\n        \r\n        const projectsRes = await listProjects({ \r\n          page: 1, \r\n          limit: 50,\r\n          company_id: form.company_id\r\n        });\r\n        \r\n        const projectsData = Array.isArray(projectsRes?.data) ? projectsRes.data : projectsRes;\r\n        setProjects(projectsData || []);\r\n        console.log('✅ Proyectos cargados:', projectsData?.length || 0);\r\n      } catch (e) {\r\n        console.error('❌ Error cargando proyectos:', e);\r\n        setError('No se pudo cargar proyectos del cliente');\r\n        setProjects([]);\r\n      } finally { \r\n        setLoading(false); \r\n      }\r\n    }, 300); // 300ms de debounce\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [form.company_id]);\r\n\r\n  const selectedCompany = useMemo(() => companies.find(c => String(c.id) === String(form.company_id)), [companies, form.company_id]);\r\n  const selectedProject = useMemo(() => projects.find(p => String(p.id) === String(form.project_id)), [projects, form.project_id]);\r\n  \r\n  // Filtrar proyectos por empresa seleccionada\r\n  const filteredProjects = useMemo(() => {\r\n    if (!form.company_id) return [];\r\n    return projects.filter(p => String(p.company_id) === String(form.company_id));\r\n  }, [projects, form.company_id]);\r\n\r\n  useEffect(() => {\r\n    if (typeof onChange === 'function') {\r\n      const newValue = {\r\n        company_id: form.company_id ? Number(form.company_id) : null,\r\n        company: selectedCompany || null,\r\n        project_id: form.project_id ? Number(form.project_id) : null,\r\n        project: selectedProject || null,\r\n        project_name: form.project_name,\r\n        location: form.location,\r\n      };\r\n      \r\n      // Solo llamar onChange si los valores realmente cambiaron\r\n      const currentValue = JSON.stringify(value);\r\n      const newValueStr = JSON.stringify(newValue);\r\n      \r\n      if (currentValue !== newValueStr) {\r\n        console.log('🔄 CompanyProjectPicker - onChange:', newValue);\r\n        onChange(newValue);\r\n      }\r\n    }\r\n  }, [form.company_id, form.project_id, form.project_name, form.location, selectedCompany, selectedProject, onChange, value]);\r\n\r\n  const createQuickProject = async () => {\r\n    if (!form.company_id || !form.project_name || !form.location) return;\r\n    try {\r\n      setLoading(true);\r\n      const payload = { \r\n        company_id: Number(form.company_id), \r\n        name: form.project_name, \r\n        location: form.location \r\n      };\r\n      const prj = await createProject(payload);\r\n      \r\n      // Actualizar la lista de proyectos localmente\r\n      setProjects(prev => [...prev, prj]);\r\n      \r\n      // bubble up created project id\r\n      if (typeof onChange === 'function') {\r\n        onChange({ \r\n          ...value, \r\n          project_id: prj.id, \r\n          project: prj,\r\n          project_name: prj.name,\r\n          location: prj.location\r\n        });\r\n      }\r\n      \r\n      // Limpiar el formulario\r\n      setForm(prev => ({ ...prev, project_id: prj.id, project_name: '', location: '' }));\r\n      setError('');\r\n    } catch (e) {\r\n      setError(e.message || 'No se pudo crear proyecto');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funciones para el modal de proyectos\r\n  const openProjectModal = (project = null) => {\r\n    console.log('🔍 openProjectModal llamado con:', project);\r\n    console.log('🔍 showProjectModal actual:', showProjectModal);\r\n    console.log('🔍 modalLoading actual:', modalLoading);\r\n    \r\n    // Si el modal está cargando, no hacer nada\r\n    if (modalLoading) {\r\n      console.log('⚠️ Modal está cargando, esperando...');\r\n      return;\r\n    }\r\n\r\n    // Si el modal ya está abierto, permitir cambio de modo\r\n    if (showProjectModal) {\r\n      console.log('🔄 Modal ya abierto, cambiando modo...');\r\n    } else {\r\n      console.log('🔍 Abriendo modal para proyecto:', project?.name || 'nuevo');\r\n      setShowProjectModal(true);\r\n    }\r\n    \r\n    if (project) {\r\n      console.log('🔍 Configurando modo edición para:', project.name);\r\n      setEditingProject(project);\r\n      setProjectForm({\r\n        name: project.name || '',\r\n        location: project.location || '',\r\n        sector: project.sector || '',\r\n        status: project.status || 'activo',\r\n        description: project.description || '',\r\n        start_date: project.start_date || '',\r\n        end_date: project.end_date || '',\r\n        priority: project.priority || 'media'\r\n      });\r\n    } else {\r\n      console.log('🔍 Configurando modo creación');\r\n      setEditingProject(null);\r\n      setProjectForm({\r\n        name: '',\r\n        location: '',\r\n        sector: '',\r\n        status: 'activo',\r\n        description: '',\r\n        start_date: '',\r\n        end_date: '',\r\n        priority: 'media'\r\n      });\r\n    }\r\n    console.log('✅ Modal configurado correctamente');\r\n  };\r\n\r\n  const closeProjectModal = () => {\r\n    console.log('🔍 Cerrando modal de proyectos');\r\n    setShowProjectModal(false);\r\n    setEditingProject(null);\r\n    setModalLoading(false);\r\n    setProjectForm({\r\n      name: '',\r\n      location: '',\r\n      sector: '',\r\n      status: 'activo',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      priority: 'media'\r\n    });\r\n  };\r\n\r\n  const saveProject = async () => {\r\n    if (!form.company_id || !projectForm.name || !projectForm.location) {\r\n      setError('Nombre y ubicación son requeridos');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const payload = {\r\n        company_id: Number(form.company_id),\r\n        ...projectForm\r\n      };\r\n\r\n      let savedProject;\r\n      if (editingProject) {\r\n        savedProject = await updateProject(editingProject.id, payload);\r\n        // Actualizar en la lista local\r\n        setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\r\n      } else {\r\n        savedProject = await createProject(payload);\r\n        // Agregar a la lista local\r\n        setProjects(prev => [...prev, savedProject]);\r\n      }\r\n\r\n      // Seleccionar el proyecto guardado\r\n      setForm(prev => ({ ...prev, project_id: savedProject.id }));\r\n      \r\n      // Notificar al componente padre\r\n      if (typeof onChange === 'function') {\r\n        onChange({ \r\n          ...value, \r\n          project_id: savedProject.id, \r\n          project: savedProject,\r\n          project_name: savedProject.name,\r\n          location: savedProject.location\r\n        });\r\n      }\r\n\r\n      closeProjectModal();\r\n      setError('');\r\n    } catch (e) {\r\n      setError(e.message || 'No se pudo guardar el proyecto');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded p-3\">\r\n      <h6>Cliente y Proyecto</h6>\r\n      {error && <div className=\"alert alert-warning py-1 my-2\">{error}</div>}\r\n      <div className=\"row g-2 align-items-end\">\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Cliente</label>\r\n          <select className=\"form-select\" value={form.company_id} disabled={loading}\r\n                  onChange={(e)=>setForm({ ...form, company_id: e.target.value, project_id: '' })}>\r\n            <option value=\"\">Seleccione...</option>\r\n            {companies.map(c => (\r\n              <option key={c.id} value={c.id}>{c.name} {c.ruc ? `(RUC ${c.ruc})` : ''}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Proyecto</label>\r\n          <div className=\"d-flex gap-2\">\r\n            <input \r\n              className=\"form-control\" \r\n              value={selectedProject ? `${selectedProject.name} | ${selectedProject.location}` : 'Seleccionar proyecto...'}\r\n              readOnly\r\n              style={{ backgroundColor: '#f8f9fa', cursor: 'pointer' }}\r\n              onClick={() => form.company_id && openProjectModal()}\r\n            />\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => form.company_id && openProjectModal()}\r\n              disabled={!form.company_id || loading}\r\n              title=\"Gestionar proyectos\"\r\n            >\r\n              📋\r\n            </button>\r\n          </div>\r\n          {selectedProject && (\r\n            <div className=\"small text-muted mt-1\">\r\n              Sector: {selectedProject.sector || 'Sin sector'} | Estado: {selectedProject.status || 'Sin estado'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {form.project_id === 'new' && (\r\n          <>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">Nombre del proyecto</label>\r\n              <input className=\"form-control\" value={form.project_name}\r\n                     onChange={e=>setForm({ ...form, project_name: e.target.value })}\r\n                     placeholder=\"Ej. Control de calidad de mezclas\" />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">Ubicación</label>\r\n              <input className=\"form-control\" value={form.location}\r\n                     onChange={e=>setForm({ ...form, location: e.target.value })}\r\n                     placeholder=\"Ej. Lima, Perú\" />\r\n            </div>\r\n            <div className=\"col-md-2 d-grid\">\r\n              <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={createQuickProject}\r\n                      disabled={!form.company_id || !form.project_name || !form.location}>Crear</button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {form.project_id && form.project_id !== 'new' && (\r\n          <div className=\"col-md-4\">\r\n            <label className=\"form-label\">Ubicación</label>\r\n            <input className=\"form-control\" value={selectedProject?.location || ''} readOnly />\r\n          </div>\r\n        )}\r\n        {selectedCompany && (\r\n          <div className=\"small text-muted mt-2\">\r\n            Contacto: {selectedCompany.contact_name} · Tel: {selectedCompany.phone} · Email: {selectedCompany.email}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de Gestión de Proyectos - RENDERIZADO CON PORTAL */}\r\n      {showProjectModal && createPortal(\r\n        <div \r\n          className=\"modal show d-block\" \r\n          style={{ \r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            zIndex: 9999\r\n          }}\r\n          onClick={(e) => {\r\n            // Cerrar modal al hacer clic fuera del contenido\r\n            if (e.target === e.currentTarget) {\r\n              closeProjectModal();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"modal-dialog modal-lg\" style={{ margin: '2rem auto' }}>\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  {editingProject ? 'Editar Proyecto' : 'Gestionar Proyectos'}\r\n                </h5>\r\n                <button type=\"button\" className=\"btn-close\" onClick={closeProjectModal}></button>\r\n              </div>\r\n              <div className=\"modal-body\" style={{ maxHeight: '70vh', overflowY: 'auto' }}>\r\n                {!editingProject ? (\r\n                  // Lista de proyectos existentes\r\n                  <div>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                      <h6>Proyectos de {selectedCompany?.name}</h6>\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={() => openProjectModal()}\r\n                      >\r\n                        + Nuevo Proyecto\r\n                      </button>\r\n                    </div>\r\n                    {loading ? (\r\n                      <div className=\"text-center py-4\">\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                          <span className=\"visually-hidden\">Cargando...</span>\r\n                        </div>\r\n                        <p className=\"mt-2 text-muted\">Cargando proyectos...</p>\r\n                      </div>\r\n                    ) : filteredProjects.length > 0 ? (\r\n                      <div className=\"list-group\">\r\n                        {filteredProjects.map(project => (\r\n                          <div key={project.id} className=\"list-group-item\">\r\n                            <div className=\"d-flex justify-content-between align-items-start\">\r\n                              <div className=\"flex-grow-1\">\r\n                                <h6 className=\"mb-1\">{project.name}</h6>\r\n                                <p className=\"mb-1 text-muted\">\r\n                                  📍 {project.location} | 🏢 {project.sector || 'Sin sector'} | 📊 {project.status || 'Sin estado'}\r\n                                </p>\r\n                                {project.description && (\r\n                                  <small className=\"text-muted\">{project.description}</small>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"d-flex gap-1\">\r\n                                <button \r\n                                  type=\"button\" \r\n                                  className=\"btn btn-outline-primary btn-sm\"\r\n                                  onClick={() => {\r\n                                    setForm(prev => ({ ...prev, project_id: project.id }));\r\n                                    if (typeof onChange === 'function') {\r\n                                      onChange({ \r\n                                        ...value, \r\n                                        project_id: project.id, \r\n                                        project: project,\r\n                                        project_name: project.name,\r\n                                        location: project.location\r\n                                      });\r\n                                    }\r\n                                    closeProjectModal();\r\n                                  }}\r\n                                >\r\n                                  Seleccionar\r\n                                </button>\r\n                                <button \r\n                                  type=\"button\" \r\n                                  className=\"btn btn-outline-secondary btn-sm\"\r\n                                  onClick={() => {\r\n                                    console.log('🔍 Botón editar clickeado para proyecto:', project);\r\n                                    openProjectModal(project);\r\n                                  }}\r\n                                  title=\"Editar proyecto\"\r\n                                >\r\n                                  ✏️\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-4\">\r\n                        <p className=\"text-muted\">No hay proyectos para este cliente</p>\r\n                        <button \r\n                          type=\"button\" \r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => openProjectModal()}\r\n                        >\r\n                          Crear Primer Proyecto\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  // Formulario de proyecto\r\n                  <div>\r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Nombre del Proyecto *</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={projectForm.name}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, name: e.target.value }))}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Ubicación *</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={projectForm.location}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, location: e.target.value }))}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Sector</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={projectForm.sector}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, sector: e.target.value }))}\r\n                        >\r\n                          <option value=\"\">Seleccionar sector...</option>\r\n                          <option value=\"Construcción\">Construcción</option>\r\n                          <option value=\"Geotécnico\">Geotécnico</option>\r\n                          <option value=\"Laboratorio\">Laboratorio</option>\r\n                          <option value=\"Consultoría\">Consultoría</option>\r\n                          <option value=\"Capacitación\">Capacitación</option>\r\n                          <option value=\"Auditoría\">Auditoría</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Estado</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={projectForm.status}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, status: e.target.value }))}\r\n                        >\r\n                          <option value=\"activo\">Activo</option>\r\n                          <option value=\"en_proceso\">En Proceso</option>\r\n                          <option value=\"completado\">Completado</option>\r\n                          <option value=\"pausado\">Pausado</option>\r\n                          <option value=\"cancelado\">Cancelado</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Fecha de Inicio</label>\r\n                        <input \r\n                          type=\"date\" \r\n                          className=\"form-control\" \r\n                          value={projectForm.start_date}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, start_date: e.target.value }))}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Fecha de Fin</label>\r\n                        <input \r\n                          type=\"date\" \r\n                          className=\"form-control\" \r\n                          value={projectForm.end_date}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, end_date: e.target.value }))}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">Prioridad</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={projectForm.priority}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, priority: e.target.value }))}\r\n                        >\r\n                          <option value=\"baja\">Baja</option>\r\n                          <option value=\"media\">Media</option>\r\n                          <option value=\"alta\">Alta</option>\r\n                          <option value=\"urgente\">Urgente</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <label className=\"form-label\">Descripción</label>\r\n                        <textarea \r\n                          className=\"form-control\" \r\n                          rows=\"3\"\r\n                          value={projectForm.description}\r\n                          onChange={e => setProjectForm(prev => ({ ...prev, description: e.target.value }))}\r\n                          placeholder=\"Descripción detallada del proyecto...\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                {editingProject ? (\r\n                  <>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={() => openProjectModal()}>\r\n                      ← Volver a Lista\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={closeProjectModal}>\r\n                      Cancelar\r\n                    </button>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"btn btn-primary\" \r\n                      onClick={saveProject}\r\n                      disabled={loading || !projectForm.name || !projectForm.location}\r\n                    >\r\n                      {loading ? 'Guardando...' : 'Guardar Cambios'}\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <button type=\"button\" className=\"btn btn-secondary\" onClick={closeProjectModal}>\r\n                    Cerrar\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>,\r\n        document.body // Renderizar directamente en el body\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst modalStyle = {\r\n  position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: 'rgba(0,0,0,0.18)', zIndex: 9999,\r\n  display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n};\r\n\r\nconst getCardStyle = (size, className) => {\r\n  const baseStyle = {\r\n    background: '#fff', borderRadius: 12, boxShadow: '0 2px 16px #0002', padding: '2rem 2.5rem'\r\n  };\r\n\r\n  // Si tiene className personalizado, usar estilos mínimos\r\n  if (className) {\r\n    return {\r\n      ...baseStyle,\r\n      minWidth: 340,\r\n      maxWidth: 'none',\r\n      width: 'auto',\r\n      height: 'auto'\r\n    };\r\n  }\r\n\r\n  // Estilos por defecto según el tamaño\r\n  switch (size) {\r\n    case 'sm':\r\n      return { ...baseStyle, minWidth: 300, maxWidth: 400 };\r\n    case 'lg':\r\n      return { ...baseStyle, minWidth: 500, maxWidth: 800 };\r\n    case 'xl':\r\n      return { ...baseStyle, minWidth: 800, maxWidth: 1200 };\r\n    default:\r\n      return { ...baseStyle, minWidth: 340, maxWidth: 420 };\r\n  }\r\n};\r\n\r\nexport default function Modal({ open, onClose, children, size, className }) {\r\n  if (!open) return null;\r\n  \r\n  const cardStyle = getCardStyle(size, className);\r\n  \r\n  return (\r\n    <div style={modalStyle} onClick={onClose}>\r\n      <div \r\n        style={cardStyle} \r\n        className={className}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { Container, Row, Col, Card, Badge, Button, Form, Alert, Spinner, ProgressBar } from 'react-bootstrap';\r\nimport { FiUpload, FiDownload, FiTrash2, FiFile, FiFolder, FiSearch, FiFilter, FiRefreshCw, FiAlertTriangle, FiCheckCircle, FiClock, FiUsers, FiEdit } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Adjuntos.css';\r\nimport { listProjectAttachments, getAllAttachments, uploadAttachment, updateAttachment, deleteAttachment, downloadFile } from '../services/attachments';\r\nimport { listProjects } from '../services/projects';\r\n// Sistema de categorías obsoleto eliminado\r\nimport CompanyProjectPicker from '../components/CompanyProjectPicker';\r\n\r\nconst emptyForm = { \r\n  project_id: '', \r\n  company_id: '',\r\n  company: null,\r\n  project: null,\r\n  project_name: '',\r\n  location: '',\r\n  description: '', \r\n  file: null, \r\n  category_id: '', \r\n  subcategory_id: '',\r\n  requiere_laboratorio: false,\r\n  requiere_ingenieria: false,\r\n  requiere_consultoria: false,\r\n  requiere_capacitacion: false,\r\n  requiere_auditoria: false\r\n};\r\n\r\nexport default function Adjuntos() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [limit] = useState(20);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProject, setSelectedProject] = useState('');\r\n  const [selectedFileType, setSelectedFileType] = useState('');\r\n  const [toast, setToast] = useState({ message: '', type: 'success', show: false });\r\n  const location = useLocation();\r\n\r\n  // Estado para el selector de cliente/proyecto\r\n  const [clientProjectSelection, setClientProjectSelection] = useState({\r\n    company_id: null,\r\n    company: null,\r\n    project_id: null,\r\n    project: null,\r\n    project_name: '',\r\n    location: ''\r\n  });\r\n\r\n  // State for modals\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [uploadForm, setUploadForm] = useState(emptyForm);\r\n  const [editingAttachment, setEditingAttachment] = useState(null);\r\n  const [deletingAttachment, setDeletingAttachment] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [dragActive, setDragActive] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    if (location.state?.search) {\r\n      setSearchTerm(location.state.search);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Obtener todos los adjuntos de todos los proyectos\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['allAttachments', currentPage, limit, searchTerm, selectedProject, selectedFileType, clientProjectSelection.project_id],\r\n    () => getAllAttachments({ \r\n      page: currentPage, \r\n      limit, \r\n      search: searchTerm,\r\n      project_id: clientProjectSelection.project_id || selectedProject,\r\n      file_type: selectedFileType\r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: false,\r\n      staleTime: 30000,\r\n    }\r\n  );\r\n\r\n  const { data: projectsData } = useQuery('projectsList', () => listProjects({ page: 1, limit: 500 }), { staleTime: Infinity });\r\n  const projects = useMemo(() => projectsData?.data || [], [projectsData]);\r\n\r\n  // Sistema de categorías obsoleto eliminado\r\n\r\n  // Obtener el proyecto seleccionado para sus categorías\r\n  const selectedProjectData = useMemo(() => {\r\n    return projects.find(p => p.id === parseInt(uploadForm.project_id));\r\n  }, [projects, uploadForm.project_id]);\r\n\r\n  // Obtener el proyecto del archivo que se está editando\r\n  const selectedProjectDataForEdit = useMemo(() => {\r\n    if (!editingAttachment) return null;\r\n    return projects.find(p => p.id === parseInt(editingAttachment.project_id));\r\n  }, [projects, editingAttachment]);\r\n\r\n  // Función helper para actualizar categorías y subcategorías\r\n  const refreshCategoriesAndSubcategories = () => {\r\n    refetchCategories();\r\n    refetchSubcategories();\r\n  };\r\n\r\n  // Actualizar categorías cuando se abra el modal\r\n  useEffect(() => {\r\n    if (showUploadModal || showEditModal) {\r\n      refreshCategoriesAndSubcategories();\r\n    }\r\n  }, [showUploadModal, showEditModal]);\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    setToast({ message, type: 'success', show: true });\r\n    queryClient.invalidateQueries('allAttachments');\r\n    setShowUploadModal(false);\r\n    setShowEditModal(false);\r\n    setUploadForm(emptyForm);\r\n    setEditingAttachment(null);\r\n    setDeletingAttachment(null);\r\n    setUploadProgress(0);\r\n  };\r\n\r\n  const handleMutationError = (error, defaultMessage) => {\r\n    setToast({ message: error?.message || defaultMessage, type: 'error', show: true });\r\n    setUploadProgress(0);\r\n  };\r\n\r\n  const createMutation = useMutation(\r\n    (formData) => uploadAttachment(uploadForm.project_id, formData),\r\n    {\r\n      onSuccess: () => handleMutationSuccess('Archivo subido correctamente.'),\r\n      onError: (err) => handleMutationError(err, 'Error al subir archivo.'),\r\n    }\r\n  );\r\n\r\n  const updateMutation = useMutation(\r\n    ({ id, formData }) => updateAttachment(id, formData),\r\n    {\r\n      onSuccess: () => handleMutationSuccess('Archivo actualizado correctamente.'),\r\n      onError: (err) => handleMutationError(err, 'Error al actualizar archivo.'),\r\n    }\r\n  );\r\n\r\n  const deleteMutation = useMutation(deleteAttachment, {\r\n    onSuccess: () => handleMutationSuccess('Adjunto eliminado correctamente.'),\r\n    onError: (err) => handleMutationError(err, 'Error al eliminar adjunto.'),\r\n  });\r\n\r\n  const handleUploadSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!uploadForm.file || !uploadForm.project_id) {\r\n      setToast({ message: 'Debe seleccionar un proyecto y un archivo.', type: 'error', show: true });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', uploadForm.file);\r\n    formData.append('description', uploadForm.description || '');\r\n    if (uploadForm.category_id) formData.append('category_id', uploadForm.category_id);\r\n    if (uploadForm.subcategory_id) formData.append('subcategory_id', uploadForm.subcategory_id);\r\n    formData.append('requiere_laboratorio', uploadForm.requiere_laboratorio);\r\n    formData.append('requiere_ingenieria', uploadForm.requiere_ingenieria);\r\n    formData.append('requiere_consultoria', uploadForm.requiere_consultoria);\r\n    formData.append('requiere_capacitacion', uploadForm.requiere_capacitacion);\r\n    formData.append('requiere_auditoria', uploadForm.requiere_auditoria);\r\n    \r\n    createMutation.mutate(formData);\r\n  };\r\n\r\n  const handleEdit = (attachment) => {\r\n    setEditingAttachment(attachment);\r\n    setUploadForm({\r\n      project_id: attachment.project_id,\r\n      description: attachment.description || '',\r\n      file: null,\r\n      category_id: attachment.category_id || '',\r\n      subcategory_id: attachment.subcategory_id || '',\r\n      requiere_laboratorio: attachment.requiere_laboratorio || false,\r\n      requiere_ingenieria: attachment.requiere_ingenieria || false,\r\n      requiere_consultoria: attachment.requiere_consultoria || false,\r\n      requiere_capacitacion: attachment.requiere_capacitacion || false,\r\n      requiere_auditoria: attachment.requiere_auditoria || false\r\n    });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editingAttachment) return;\r\n\r\n    const updateData = {\r\n      description: uploadForm.description || '',\r\n      category_id: uploadForm.category_id || null,\r\n      subcategory_id: uploadForm.subcategory_id || null,\r\n      requiere_laboratorio: uploadForm.requiere_laboratorio,\r\n      requiere_ingenieria: uploadForm.requiere_ingenieria,\r\n      requiere_consultoria: uploadForm.requiere_consultoria,\r\n      requiere_capacitacion: uploadForm.requiere_capacitacion,\r\n      requiere_auditoria: uploadForm.requiere_auditoria\r\n    };\r\n\r\n    console.log('🔄 handleEditSubmit - Editing attachment ID:', editingAttachment.id);\r\n    console.log('🔄 handleEditSubmit - Upload form data:', uploadForm);\r\n    console.log('🔄 handleEditSubmit - Update data:', updateData);\r\n\r\n    // Siempre usar FormData para mantener consistencia\r\n    const formData = new FormData();\r\n    \r\n    // Si hay un nuevo archivo, lo agregamos\r\n    if (uploadForm.file) {\r\n      formData.append('file', uploadForm.file);\r\n    }\r\n    \r\n    // Agregar todos los datos de actualización\r\n    Object.keys(updateData).forEach(key => {\r\n      if (updateData[key] !== null && updateData[key] !== undefined) {\r\n        formData.append(key, updateData[key]);\r\n        console.log(`🔄 FormData - ${key}:`, updateData[key]);\r\n      }\r\n    });\r\n    \r\n    console.log('🔄 FormData entries:');\r\n    for (let [key, value] of formData.entries()) {\r\n      console.log(`  ${key}:`, value);\r\n    }\r\n    \r\n    updateMutation.mutate({ id: editingAttachment.id, formData });\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (deletingAttachment) {\r\n      deleteMutation.mutate(deletingAttachment.id);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (attachment) => {\r\n    try {\r\n      await downloadFile(attachment);\r\n      setToast({ message: 'Descarga iniciada correctamente.', type: 'success', show: true });\r\n    } catch (error) {\r\n      console.error('Error al descargar archivo:', error);\r\n      setToast({ message: 'Error al descargar el archivo.', type: 'error', show: true });\r\n    }\r\n  };\r\n\r\n\r\n  const handleDragEnter = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files && files[0]) {\r\n      setUploadForm(f => ({ ...f, file: files[0] }));\r\n    }\r\n  };\r\n\r\n  const handleFilter = (filters) => {\r\n    setSelectedProject(filters.project_id || '');\r\n    setSelectedFileType(filters.file_type || '');\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const getFileIcon = (fileName) => {\r\n    const ext = fileName.split('.').pop()?.toLowerCase();\r\n    switch (ext) {\r\n      case 'pdf': return '📄';\r\n      case 'doc':\r\n      case 'docx': return '📝';\r\n      case 'xls':\r\n      case 'xlsx': return '📊';\r\n      case 'ppt':\r\n      case 'pptx': return '📈';\r\n      case 'jpg':\r\n      case 'jpeg':\r\n      case 'png':\r\n      case 'gif': return '🖼️';\r\n      case 'txt': return '📃';\r\n      default: return '📎';\r\n    }\r\n  };\r\n\r\n  const getFileTypeBadge = (fileName) => {\r\n    const ext = fileName.split('.').pop()?.toLowerCase();\r\n    const typeMap = {\r\n      'pdf': { variant: 'danger', text: 'PDF' },\r\n      'doc': { variant: 'primary', text: 'DOC' },\r\n      'docx': { variant: 'primary', text: 'DOCX' },\r\n      'xls': { variant: 'success', text: 'XLS' },\r\n      'xlsx': { variant: 'success', text: 'XLSX' },\r\n      'ppt': { variant: 'warning', text: 'PPT' },\r\n      'pptx': { variant: 'warning', text: 'PPTX' },\r\n      'jpg': { variant: 'info', text: 'JPG' },\r\n      'jpeg': { variant: 'info', text: 'JPEG' },\r\n      'png': { variant: 'info', text: 'PNG' },\r\n      'gif': { variant: 'info', text: 'GIF' },\r\n      'txt': { variant: 'secondary', text: 'TXT' }\r\n    };\r\n    return typeMap[ext] || { variant: 'secondary', text: ext?.toUpperCase() || 'FILE' };\r\n  };\r\n\r\n  const getRoleBadge = (role) => {\r\n    const roleMap = {\r\n      'admin': { variant: 'danger', text: 'Admin' },\r\n      'jefa_comercial': { variant: 'primary', text: 'Jefa Comercial' },\r\n      'jefe_laboratorio': { variant: 'info', text: 'Jefe Lab' },\r\n      'vendedor_comercial': { variant: 'success', text: 'Vendedor' },\r\n      'usuario_laboratorio': { variant: 'warning', text: 'Lab User' }\r\n    };\r\n    return roleMap[role] || { variant: 'secondary', text: role || 'N/A' };\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusMap = {\r\n      'activo': { variant: 'success', text: 'Activo' },\r\n      'pendiente': { variant: 'warning', text: 'Pendiente' },\r\n      'completado': { variant: 'primary', text: 'Completado' },\r\n      'cancelado': { variant: 'danger', text: 'Cancelado' },\r\n      'pausado': { variant: 'secondary', text: 'Pausado' }\r\n    };\r\n    return statusMap[status] || { variant: 'secondary', text: status || 'N/A' };\r\n  };\r\n\r\n  const columns = useMemo(() => [\r\n    { \r\n      header: 'ID', \r\n      accessor: 'id', \r\n      width: 60 \r\n    },\r\n    { \r\n      header: 'Proyecto', \r\n      accessor: 'project_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value || 'Sin proyecto'}</div>\r\n          <div className=\"small text-muted\">\r\n            <div>📍 {row.project_location || 'Sin ubicación'}</div>\r\n            <div className=\"d-flex align-items-center gap-2 mt-1\">\r\n              <Badge bg={getStatusBadge(row.project_status).variant} className=\"small\">\r\n                {getStatusBadge(row.project_status).text}\r\n              </Badge>\r\n              {row.project_priority && (\r\n                <Badge bg={row.project_priority === 'urgent' ? 'danger' : row.project_priority === 'high' ? 'warning' : 'info'} className=\"small\">\r\n                  {row.project_priority}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Empresa', \r\n      accessor: 'company_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value || 'Sin empresa'}</div>\r\n          <small className=\"text-muted\">RUC: {row.company_ruc || 'N/A'}</small>\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Archivo', \r\n      accessor: 'original_name',\r\n      render: (value, row) => {\r\n        const fileType = getFileTypeBadge(value);\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <span className=\"me-2\" style={{ fontSize: '1.2em' }}>\r\n              {getFileIcon(value)}\r\n            </span>\r\n            <div>\r\n              <div className=\"fw-medium\">{value}</div>\r\n              <Badge bg={fileType.variant} className=\"small\">\r\n                {fileType.text}\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    { \r\n      header: 'Categorías', \r\n      accessor: 'category_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          {value && (\r\n            <div className=\"mb-1\">\r\n              <Badge bg=\"primary\" className=\"small\">\r\n                📁 {value}\r\n              </Badge>\r\n            </div>\r\n          )}\r\n          {row.subcategory_name && (\r\n            <div>\r\n              <Badge bg=\"info\" className=\"small\">\r\n                📂 {row.subcategory_name}\r\n              </Badge>\r\n            </div>\r\n          )}\r\n          {!value && !row.subcategory_name && (\r\n            <span className=\"text-muted small\">Sin categoría</span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Servicios', \r\n      accessor: 'requiere_laboratorio',\r\n      render: (value, row) => (\r\n        <div className=\"d-flex flex-wrap gap-1\">\r\n          {row.requiere_laboratorio && (\r\n            <Badge bg=\"warning\" className=\"small\">🧪 Lab</Badge>\r\n          )}\r\n          {row.requiere_ingenieria && (\r\n            <Badge bg=\"info\" className=\"small\">⚙️ Ing</Badge>\r\n          )}\r\n          {row.requiere_consultoria && (\r\n            <Badge bg=\"success\" className=\"small\">💼 Cons</Badge>\r\n          )}\r\n          {row.requiere_capacitacion && (\r\n            <Badge bg=\"primary\" className=\"small\">🎓 Cap</Badge>\r\n          )}\r\n          {row.requiere_auditoria && (\r\n            <Badge bg=\"secondary\" className=\"small\">📋 Aud</Badge>\r\n          )}\r\n          {!row.requiere_laboratorio && !row.requiere_ingenieria && !row.requiere_consultoria && !row.requiere_capacitacion && !row.requiere_auditoria && (\r\n            <span className=\"text-muted small\">Sin servicios</span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Roles', \r\n      accessor: 'vendedor_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          {value && (\r\n            <div className=\"mb-1\">\r\n              <div className=\"small\">\r\n                <Badge bg={getRoleBadge(row.vendedor_role).variant} className=\"small me-1\">\r\n                  {getRoleBadge(row.vendedor_role).text}\r\n                </Badge>\r\n                <span className=\"text-muted\">{value}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {row.laboratorio_name && (\r\n            <div className=\"small\">\r\n              <Badge bg={getRoleBadge(row.laboratorio_role).variant} className=\"small me-1\">\r\n                {getRoleBadge(row.laboratorio_role).text}\r\n              </Badge>\r\n              <span className=\"text-muted\">{row.laboratorio_name}</span>\r\n            </div>\r\n          )}\r\n          {!value && !row.laboratorio_name && (\r\n            <span className=\"text-muted small\">Sin asignación</span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Subido por', \r\n      accessor: 'uploaded_by_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value || 'Usuario desconocido'}</div>\r\n          <div className=\"small\">\r\n            <Badge bg={getRoleBadge(row.uploaded_by_role).variant} className=\"small\">\r\n              {getRoleBadge(row.uploaded_by_role).text}\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    { \r\n      header: 'Fecha', \r\n      accessor: 'created_at',\r\n      render: (value) => (\r\n        <div>\r\n          <div>{new Date(value).toLocaleDateString()}</div>\r\n          <small className=\"text-muted\">{new Date(value).toLocaleTimeString()}</small>\r\n        </div>\r\n      ),\r\n      width: 120\r\n    },\r\n    { \r\n      header: 'Acciones', \r\n      accessor: 'actions',\r\n      width: 180,\r\n      render: (value, row) => (\r\n        <div className=\"d-flex gap-1\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            size=\"sm\"\r\n            onClick={() => handleDownload(row)}\r\n            title=\"Descargar\"\r\n          >\r\n            <FiDownload />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-success\"\r\n            size=\"sm\"\r\n            onClick={() => handleEdit(row)}\r\n            title=\"Editar\"\r\n          >\r\n            <FiEdit />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => setDeletingAttachment(row)}\r\n            title=\"Eliminar\"\r\n          >\r\n            <FiTrash2 />\r\n          </Button>\r\n        </div>\r\n      )\r\n    },\r\n  ], []);\r\n\r\n  const rows = data?.data || [];\r\n  const total = data?.total || 0;\r\n  const totalPages = Math.max(1, Math.ceil(total / limit));\r\n\r\n  // Estadísticas calculadas\r\n  const stats = useMemo(() => {\r\n    const fileTypes = {};\r\n    const projects = new Set();\r\n    const categories = new Set();\r\n    const subcategories = new Set();\r\n    const roles = new Set();\r\n    let totalSize = 0;\r\n    \r\n    rows.forEach(row => {\r\n      const ext = row.original_name?.split('.').pop()?.toLowerCase() || 'unknown';\r\n      fileTypes[ext] = (fileTypes[ext] || 0) + 1;\r\n      if (row.project_id) projects.add(row.project_id);\r\n      if (row.category_name) categories.add(row.category_name);\r\n      if (row.subcategory_name) subcategories.add(row.subcategory_name);\r\n      if (row.vendedor_name) roles.add('vendedor');\r\n      if (row.laboratorio_name) roles.add('laboratorio');\r\n      if (row.file_size) totalSize += parseInt(row.file_size);\r\n    });\r\n\r\n    return {\r\n      total: total,\r\n      totalFiles: rows.length,\r\n      totalProjects: projects.size,\r\n      totalCategories: categories.size,\r\n      totalSubcategories: subcategories.size,\r\n      totalRoles: roles.size,\r\n      fileTypes: Object.keys(fileTypes).length,\r\n      totalSize: (totalSize / 1024 / 1024).toFixed(1) + ' MB'\r\n    };\r\n  }, [rows, total]);\r\n\r\n  const filterOptions = [\r\n    {\r\n      title: 'Por Proyecto',\r\n      options: projects.map(project => ({\r\n        label: `${project.name} - ${project.location}`,\r\n        filter: { project_id: project.id }\r\n      }))\r\n    },\r\n    {\r\n      title: 'Por Tipo de Archivo',\r\n      options: [\r\n        { label: '📄 PDF', filter: { file_type: 'pdf' } },\r\n        { label: '📝 Documentos', filter: { file_type: 'doc' } },\r\n        { label: '📊 Excel', filter: { file_type: 'xls' } },\r\n        { label: '🖼️ Imágenes', filter: { file_type: 'img' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Por Estado de Proyecto',\r\n      options: [\r\n        { label: '🟢 Activos', filter: { project_status: 'activo' } },\r\n        { label: '🟡 Pendientes', filter: { project_status: 'pendiente' } },\r\n        { label: '🔵 Completados', filter: { project_status: 'completado' } },\r\n        { label: '🔴 Cancelados', filter: { project_status: 'cancelado' } }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"py-4\">\r\n        <PageHeader\r\n          title=\"Gestión de Adjuntos\"\r\n          subtitle=\"Archivos relacionados a proyectos y cotizaciones\"\r\n          icon={FiFolder}\r\n        />\r\n\r\n        {/* Estadísticas */}\r\n        <Row className=\"mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Archivos\"\r\n              value={stats.total}\r\n              icon={FiFile}\r\n              color=\"primary\"\r\n              subtitle=\"Archivos en el sistema\"\r\n              loading={isLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Proyectos\"\r\n              value={stats.totalProjects}\r\n              icon={FiFolder}\r\n              color=\"info\"\r\n              subtitle=\"Con archivos adjuntos\"\r\n              loading={isLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Categorías\"\r\n              value={stats.totalCategories}\r\n              icon={FiUsers}\r\n              color=\"success\"\r\n              subtitle=\"Con archivos asignados\"\r\n              loading={isLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Espacio Usado\"\r\n              value={stats.totalSize}\r\n              icon={FiAlertTriangle}\r\n              color=\"warning\"\r\n              subtitle=\"Almacenamiento total\"\r\n              loading={isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Selector de Cliente y Proyecto */}\r\n        <Card className=\"mb-4\">\r\n          <Card.Body>\r\n            <Row>\r\n              <Col md={12}>\r\n                <h6 className=\"mb-3\">Filtro por Cliente y Proyecto</h6>\r\n                <CompanyProjectPicker \r\n                  value={clientProjectSelection} \r\n                  onChange={setClientProjectSelection} \r\n                />\r\n                {clientProjectSelection.project && (\r\n                  <div className=\"mt-3\">\r\n                    <Alert variant=\"info\" className=\"py-2\">\r\n                      <small>\r\n                        <strong>Proyecto seleccionado:</strong> {clientProjectSelection.project.name} | \r\n                        <strong> Cliente:</strong> {clientProjectSelection.company?.name} | \r\n                        <strong> Ubicación:</strong> {clientProjectSelection.project.location}\r\n                      </small>\r\n                    </Alert>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {/* Barra de herramientas */}\r\n        <Card className=\"mb-4\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center\">\r\n              <Col md={6}>\r\n                <div className=\"d-flex gap-2\">\r\n                  <div className=\"position-relative flex-grow-1\">\r\n                    <FiSearch className=\"position-absolute top-50 start-0 translate-middle-y ms-3 text-muted\" />\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Buscar por archivo, proyecto...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                        setCurrentPage(1);\r\n                      }}\r\n                      className=\"ps-5\"\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => refetch()}\r\n                    title=\"Actualizar\"\r\n                  >\r\n                    <FiRefreshCw />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"text-end\">\r\n                <div className=\"d-flex gap-2 justify-content-end\">\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => setShowUploadModal(true)}\r\n                  >\r\n                    <FiUpload className=\"me-2\" />\r\n                    Subir Archivo\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {/* Tabla de adjuntos */}\r\n        <Card>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              columns={columns}\r\n              data={rows}\r\n              loading={isLoading}\r\n              currentPage={currentPage}\r\n              totalPages={totalPages}\r\n              onPageChange={setCurrentPage}\r\n              totalItems={total}\r\n              itemsPerPage={limit}\r\n              filterOptions={filterOptions}\r\n              onFilter={handleFilter}\r\n              emptyMessage=\"No hay archivos adjuntos\"\r\n              emptyDescription=\"Sube tu primer archivo usando el botón 'Subir Archivo'\"\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n\r\n      {/* Upload Modal */}\r\n      {showUploadModal && (\r\n        <Modal open={showUploadModal} onClose={() => setShowUploadModal(false)} size=\"xl\" className=\"adjuntos-modal\">\r\n          <div className=\"modal-header\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <FiUpload className=\"me-2 text-primary\" size={24} />\r\n              <h4 className=\"mb-0\">Subir Archivo Adjunto</h4>\r\n            </div>\r\n            </div>\r\n          \r\n          <div className=\"modal-body\">\r\n            \r\n            <form onSubmit={handleUploadSubmit}>\r\n              <Row className=\"g-3\">\r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Cliente y Proyecto *</Form.Label>\r\n                  <CompanyProjectPicker \r\n                    value={{\r\n                      company_id: uploadForm.company_id || null,\r\n                      company: uploadForm.company || null,\r\n                      project_id: uploadForm.project_id || null,\r\n                      project: uploadForm.project || null,\r\n                      project_name: uploadForm.project_name || '',\r\n                      location: uploadForm.location || ''\r\n                    }}\r\n                    onChange={(selection) => {\r\n                      setUploadForm(f => ({ \r\n                        ...f, \r\n                        company_id: selection.company_id,\r\n                        company: selection.company,\r\n                        project_id: selection.project_id,\r\n                        project: selection.project,\r\n                        project_name: selection.project_name,\r\n                        location: selection.location,\r\n                        category_id: selection.project?.category_id || '',\r\n                        subcategory_id: selection.project?.subcategory_id || ''\r\n                      }));\r\n                    }}\r\n                  />\r\n                </Col>\r\n\r\n                {/* Categorías disponibles */}\r\n                <Col md={12}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <Form.Label className=\"fw-medium mb-0\">Categorías Disponibles</Form.Label>\r\n                    <Button \r\n                      variant=\"outline-secondary\" \r\n                      size=\"sm\"\r\n                      onClick={refreshCategoriesAndSubcategories}\r\n                      title=\"Actualizar lista de categorías\"\r\n                    >\r\n                      🔄 Actualizar\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"border rounded p-3 bg-light\" style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                    {categories.length > 0 ? (\r\n                      categories.map(category => (\r\n                        <Form.Check\r\n                          key={category.id}\r\n                          type=\"checkbox\"\r\n                          id={`category-${category.id}`}\r\n                          label={`📁 ${category.name}`}\r\n                          checked={uploadForm.category_id === category.id}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            category_id: e.target.checked ? category.id : ''\r\n                          }))}\r\n                          className=\"mb-2\"\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"text-muted mb-0\">No hay categorías disponibles</p>\r\n                    )}\r\n                  </div>\r\n                  <Form.Text className=\"text-muted d-block mt-1\">\r\n                    Selecciona una categoría para asignar al archivo\r\n                  </Form.Text>\r\n                </Col>\r\n\r\n                {/* Subcategorías disponibles */}\r\n                <Col md={12}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <Form.Label className=\"fw-medium mb-0\">Subcategorías Disponibles</Form.Label>\r\n                    <Button \r\n                      variant=\"outline-secondary\" \r\n                      size=\"sm\"\r\n                      onClick={refreshCategoriesAndSubcategories}\r\n                      title=\"Actualizar lista de subcategorías\"\r\n                    >\r\n                      🔄 Actualizar\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"border rounded p-3 bg-light\" style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                    {subcategories.length > 0 ? (\r\n                      subcategories.map(subcategory => (\r\n                        <Form.Check\r\n                          key={subcategory.id}\r\n                          type=\"checkbox\"\r\n                          id={`subcategory-${subcategory.id}`}\r\n                          label={`📂 ${subcategory.name}`}\r\n                          checked={uploadForm.subcategory_id === subcategory.id}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            subcategory_id: e.target.checked ? subcategory.id : ''\r\n                          }))}\r\n                          className=\"mb-2\"\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"text-muted mb-0\">No hay subcategorías disponibles</p>\r\n                    )}\r\n                  </div>\r\n                  <Form.Text className=\"text-muted d-block mt-1\">\r\n                    Selecciona una subcategoría para asignar al archivo\r\n                  </Form.Text>\r\n                </Col>\r\n                \r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Descripción (Opcional)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    value={uploadForm.description}\r\n                    onChange={(e) => setUploadForm(f => ({ ...f, description: e.target.value }))}\r\n                    placeholder=\"Describe el contenido del archivo...\"\r\n                  />\r\n                </Col>\r\n\r\n                {/* Servicios del archivo */}\r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Servicios Requeridos</Form.Label>\r\n                  <div className=\"border rounded p-3 bg-light\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"upload-requiere-laboratorio\"\r\n                          label=\"🧪 Laboratorio\"\r\n                          checked={uploadForm.requiere_laboratorio}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_laboratorio: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"upload-requiere-ingenieria\"\r\n                          label=\"⚙️ Ingeniería\"\r\n                          checked={uploadForm.requiere_ingenieria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_ingenieria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"upload-requiere-consultoria\"\r\n                          label=\"💼 Consultoría\"\r\n                          checked={uploadForm.requiere_consultoria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_consultoria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"upload-requiere-capacitacion\"\r\n                          label=\"🎓 Capacitación\"\r\n                          checked={uploadForm.requiere_capacitacion}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_capacitacion: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"upload-requiere-auditoria\"\r\n                          label=\"📋 Auditoría\"\r\n                          checked={uploadForm.requiere_auditoria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_auditoria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Form.Text className=\"text-muted d-block mt-2\">\r\n                      Marca los servicios que requiere este archivo\r\n                    </Form.Text>\r\n                  </div>\r\n                </Col>\r\n                \r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Archivo *</Form.Label>\r\n                  <div\r\n                    className={`border-2 border-dashed rounded p-4 text-center ${\r\n                      dragActive ? 'border-primary bg-light' : 'border-secondary'\r\n                    }`}\r\n                    onDragEnter={handleDragEnter}\r\n                    onDragLeave={handleDragLeave}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                    style={{ minHeight: '120px', cursor: 'pointer' }}\r\n                    onClick={() => document.getElementById('fileInput').click()}\r\n                  >\r\n                    {uploadForm.file ? (\r\n                      <div>\r\n                        <FiCheckCircle className=\"text-success mb-2\" size={32} />\r\n                        <div className=\"fw-medium\">{uploadForm.file.name}</div>\r\n                        <small className=\"text-muted\">\r\n                          {(uploadForm.file.size / 1024 / 1024).toFixed(2)} MB\r\n                        </small>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <FiUpload className=\"text-muted mb-2\" size={32} />\r\n                        <div className=\"fw-medium\">Arrastra y suelta tu archivo aquí</div>\r\n                        <small className=\"text-muted\">o haz clic para seleccionar</small>\r\n                        <div className=\"mt-2\">\r\n                          <small className=\"text-muted\">\r\n                            Formatos permitidos: PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX, JPG, PNG, GIF, TXT\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <Form.Control\r\n                    id=\"fileInput\"\r\n                    type=\"file\"\r\n                    className=\"d-none\"\r\n                    onChange={(e) => setUploadForm(f => ({ ...f, file: e.target.files[0] }))}\r\n                    accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif,.txt\"\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              \r\n              {createMutation.isLoading && (\r\n                <div className=\"mt-3\">\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <small>Subiendo archivo...</small>\r\n                    <small>{uploadProgress}%</small>\r\n                  </div>\r\n                  <ProgressBar now={uploadProgress} animated />\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"d-flex justify-content-end gap-2 mt-4\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-secondary\"\r\n                  onClick={() => setShowUploadModal(false)}\r\n                  disabled={createMutation.isLoading}\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={createMutation.isLoading || !uploadForm.file || !uploadForm.project_id}\r\n                >\r\n                  {createMutation.isLoading ? (\r\n                    <>\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                      Subiendo...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiUpload className=\"me-2\" />\r\n                      Subir Archivo\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          \r\n          <div className=\"modal-footer\">\r\n            <div className=\"d-flex gap-2 justify-content-end\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline-secondary\"\r\n                onClick={() => setShowUploadModal(false)}\r\n                disabled={createMutation.isLoading}\r\n              >\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={createMutation.isLoading}\r\n                onClick={handleUploadSubmit}\r\n              >\r\n                {createMutation.isLoading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" className=\"me-2\" />\r\n                    Subiendo...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FiUpload className=\"me-2\" />\r\n                    Subir Archivo\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {showEditModal && editingAttachment && (\r\n        <Modal open={showEditModal} onClose={() => setShowEditModal(false)} size=\"xl\" className=\"adjuntos-modal\">\r\n          <div className=\"modal-header\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <FiEdit className=\"me-2 text-success\" size={24} />\r\n              <h4 className=\"mb-0\">Editar Archivo Adjunto</h4>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"modal-body\">\r\n            \r\n            <form onSubmit={handleEditSubmit}>\r\n              <Row className=\"g-3\">\r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Proyecto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={editingAttachment.project_name || 'Sin proyecto'}\r\n                    readOnly\r\n                    className=\"bg-light\"\r\n                  />\r\n                </Col>\r\n                \r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Archivo Actual</Form.Label>\r\n                  <div className=\"d-flex align-items-center p-3 bg-light rounded\">\r\n                    <span className=\"me-2\" style={{ fontSize: '1.2em' }}>\r\n                      {getFileIcon(editingAttachment.original_name)}\r\n                    </span>\r\n                    <div>\r\n                      <div className=\"fw-medium\">{editingAttachment.original_name}</div>\r\n                      <small className=\"text-muted\">\r\n                        {(editingAttachment.file_size / 1024 / 1024).toFixed(2)} MB\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                \r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Nuevo Archivo (Opcional)</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    onChange={(e) => setUploadForm(f => ({ ...f, file: e.target.files[0] }))}\r\n                    accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif,.txt\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Deja vacío para mantener el archivo actual\r\n                  </Form.Text>\r\n                </Col>\r\n                \r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Descripción</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    value={uploadForm.description}\r\n                    onChange={(e) => setUploadForm(f => ({ ...f, description: e.target.value }))}\r\n                    placeholder=\"Describe el contenido del archivo...\"\r\n                  />\r\n                </Col>\r\n\r\n                {/* Categorías disponibles en edición */}\r\n                <Col md={12}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <Form.Label className=\"fw-medium mb-0\">Categorías Disponibles</Form.Label>\r\n                    <Button \r\n                      variant=\"outline-secondary\" \r\n                      size=\"sm\"\r\n                      onClick={refreshCategoriesAndSubcategories}\r\n                      title=\"Actualizar lista de categorías\"\r\n                    >\r\n                      🔄 Actualizar\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"border rounded p-3 bg-light\" style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                    {categories.length > 0 ? (\r\n                      categories.map(category => (\r\n                        <Form.Check\r\n                          key={category.id}\r\n                          type=\"checkbox\"\r\n                          id={`edit-category-${category.id}`}\r\n                          label={`📁 ${category.name}`}\r\n                          checked={uploadForm.category_id === category.id}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            category_id: e.target.checked ? category.id : ''\r\n                          }))}\r\n                          className=\"mb-2\"\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"text-muted mb-0\">No hay categorías disponibles</p>\r\n                    )}\r\n                  </div>\r\n                  <Form.Text className=\"text-muted d-block mt-1\">\r\n                    Selecciona una categoría para asignar al archivo\r\n                  </Form.Text>\r\n                </Col>\r\n\r\n                {/* Subcategorías disponibles en edición */}\r\n                <Col md={12}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <Form.Label className=\"fw-medium mb-0\">Subcategorías Disponibles</Form.Label>\r\n                    <Button \r\n                      variant=\"outline-secondary\" \r\n                      size=\"sm\"\r\n                      onClick={refreshCategoriesAndSubcategories}\r\n                      title=\"Actualizar lista de subcategorías\"\r\n                    >\r\n                      🔄 Actualizar\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"border rounded p-3 bg-light\" style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                    {subcategories.length > 0 ? (\r\n                      subcategories.map(subcategory => (\r\n                        <Form.Check\r\n                          key={subcategory.id}\r\n                          type=\"checkbox\"\r\n                          id={`edit-subcategory-${subcategory.id}`}\r\n                          label={`📂 ${subcategory.name}`}\r\n                          checked={uploadForm.subcategory_id === subcategory.id}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            subcategory_id: e.target.checked ? subcategory.id : ''\r\n                          }))}\r\n                          className=\"mb-2\"\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"text-muted mb-0\">No hay subcategorías disponibles</p>\r\n                    )}\r\n                  </div>\r\n                  <Form.Text className=\"text-muted d-block mt-1\">\r\n                    Selecciona una subcategoría para asignar al archivo\r\n                  </Form.Text>\r\n                </Col>\r\n\r\n                {/* Servicios del archivo */}\r\n                <Col md={12}>\r\n                  <Form.Label className=\"fw-medium\">Servicios Requeridos</Form.Label>\r\n                  <div className=\"border rounded p-3 bg-light\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"requiere-laboratorio\"\r\n                          label=\"🧪 Laboratorio\"\r\n                          checked={uploadForm.requiere_laboratorio}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_laboratorio: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"requiere-ingenieria\"\r\n                          label=\"⚙️ Ingeniería\"\r\n                          checked={uploadForm.requiere_ingenieria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_ingenieria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"requiere-consultoria\"\r\n                          label=\"💼 Consultoría\"\r\n                          checked={uploadForm.requiere_consultoria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_consultoria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"requiere-capacitacion\"\r\n                          label=\"🎓 Capacitación\"\r\n                          checked={uploadForm.requiere_capacitacion}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_capacitacion: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"requiere-auditoria\"\r\n                          label=\"📋 Auditoría\"\r\n                          checked={uploadForm.requiere_auditoria}\r\n                          onChange={(e) => setUploadForm(f => ({ \r\n                            ...f, \r\n                            requiere_auditoria: e.target.checked\r\n                          }))}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Form.Text className=\"text-muted d-block mt-2\">\r\n                      Marca los servicios que requiere este archivo\r\n                    </Form.Text>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              \r\n              <div className=\"d-flex justify-content-end gap-2 mt-4\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-secondary\"\r\n                  onClick={() => setShowEditModal(false)}\r\n                  disabled={updateMutation.isLoading}\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"success\"\r\n                  disabled={updateMutation.isLoading}\r\n                >\r\n                  {updateMutation.isLoading ? (\r\n                    <>\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                      Actualizando...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiEdit className=\"me-2\" />\r\n                      Actualizar Archivo\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          \r\n          <div className=\"modal-footer\">\r\n            <div className=\"d-flex gap-2 justify-content-end\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline-secondary\"\r\n                onClick={() => setShowEditModal(false)}\r\n                disabled={updateMutation.isLoading}\r\n              >\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"success\"\r\n                disabled={updateMutation.isLoading}\r\n                onClick={handleEditSubmit}\r\n              >\r\n                {updateMutation.isLoading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" className=\"me-2\" />\r\n                    Actualizando...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FiEdit className=\"me-2\" />\r\n                    Actualizar Archivo\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deletingAttachment && (\r\n        <Modal open={!!deletingAttachment} onClose={() => setDeletingAttachment(null)}>\r\n          <div>\r\n            <div className=\"d-flex align-items-center mb-4\">\r\n              <FiTrash2 className=\"me-2 text-danger\" size={24} />\r\n              <h4 className=\"mb-0\">Confirmar Eliminación</h4>\r\n            </div>\r\n            \r\n            <Alert variant=\"warning\" className=\"mb-4\">\r\n              <FiAlertTriangle className=\"me-2\" />\r\n              <strong>¡Atención!</strong> Esta acción no se puede deshacer.\r\n            </Alert>\r\n            \r\n            <div className=\"mb-4\">\r\n              <p>¿Estás seguro de que quieres eliminar el siguiente archivo?</p>\r\n              <Card className=\"bg-light\">\r\n                <Card.Body>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <span className=\"me-3\" style={{ fontSize: '1.5em' }}>\r\n                      {getFileIcon(deletingAttachment.original_name)}\r\n                    </span>\r\n                    <div>\r\n                      <div className=\"fw-medium\">{deletingAttachment.original_name}</div>\r\n                      <small className=\"text-muted\">\r\n                        Proyecto: {deletingAttachment.project_name || 'Sin proyecto'}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n            \r\n            <div className=\"d-flex justify-content-end gap-2\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={() => setDeletingAttachment(null)}\r\n                disabled={deleteMutation.isLoading}\r\n              >\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={handleDeleteConfirm}\r\n                disabled={deleteMutation.isLoading}\r\n              >\r\n                {deleteMutation.isLoading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" className=\"me-2\" />\r\n                    Eliminando...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FiTrash2 className=\"me-2\" />\r\n                    Eliminar Archivo\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n\r\n      <Toast \r\n        message={toast.message} \r\n        type={toast.type} \r\n        onClose={() => setToast({ message: '', type: 'success', show: false })} \r\n      />\r\n    </>\r\n  );\r\n}"],"names":["CompanyProjectPicker","value","onChange","companies","setCompanies","useState","projects","setProjects","loading","setLoading","form","setForm","error","setError","showProjectModal","setShowProjectModal","editingProject","setEditingProject","modalLoading","setModalLoading","useEffect","handleEscape","e","closeProjectModal","projectForm","setProjectForm","companiesRes","listCompanies","companiesData","timeoutId","projectsRes","listProjects","projectsData","selectedCompany","useMemo","c","selectedProject","p","filteredProjects","newValue","currentValue","newValueStr","createQuickProject","payload","prj","createProject","prev","openProjectModal","project","saveProject","savedProject","updateProject","jsxs","jsx","Fragment","createPortal","modalStyle","getCardStyle","size","className","baseStyle","Modal","open","onClose","children","cardStyle","emptyForm","Adjuntos","currentPage","setCurrentPage","limit","searchTerm","setSearchTerm","setSelectedProject","selectedFileType","setSelectedFileType","toast","setToast","location","useLocation","clientProjectSelection","setClientProjectSelection","showUploadModal","setShowUploadModal","showEditModal","setShowEditModal","uploadForm","setUploadForm","editingAttachment","setEditingAttachment","deletingAttachment","setDeletingAttachment","uploadProgress","setUploadProgress","dragActive","setDragActive","queryClient","useQueryClient","_a","data","isLoading","refetch","useQuery","getAllAttachments","refreshCategoriesAndSubcategories","handleMutationSuccess","message","handleMutationError","defaultMessage","createMutation","useMutation","formData","uploadAttachment","err","updateMutation","id","updateAttachment","deleteMutation","deleteAttachment","handleUploadSubmit","handleEdit","attachment","handleEditSubmit","updateData","key","handleDeleteConfirm","handleDownload","downloadFile","handleDragEnter","handleDragLeave","handleDragOver","handleDrop","files","f","handleFilter","filters","getFileIcon","fileName","getFileTypeBadge","ext","getRoleBadge","role","getStatusBadge","status","columns","row","Badge","fileType","Button","FiDownload","FiEdit","FiTrash2","rows","total","totalPages","stats","fileTypes","categories","subcategories","roles","totalSize","_b","filterOptions","Container","PageHeader","FiFolder","Row","Col","StatsCard","FiFile","FiUsers","FiAlertTriangle","Card","Alert","FiSearch","Form","FiRefreshCw","FiUpload","DataTable","selection","category","subcategory","FiCheckCircle","ProgressBar","Spinner","Toast"],"mappings":"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"}