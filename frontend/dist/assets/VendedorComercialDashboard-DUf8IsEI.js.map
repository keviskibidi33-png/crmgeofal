{"version":3,"file":"VendedorComercialDashboard-DUf8IsEI.js","sources":["../../src/pages/dashboards/VendedorComercialDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Alert, Spinner, Button, Badge } from 'react-bootstrap';\r\nimport { FiTarget, FiUsers, FiDollarSign, FiTrendingUp, FiActivity, FiBriefcase, FiPlus, FiEye, FiRefreshCw } from 'react-icons/fi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport StatsCard from '../../components/common/StatsCard';\r\nimport apiFetch from '../../services/api';\r\n\r\nexport default function VendedorComercialDashboard() {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [actionLoading, setActionLoading] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [lastUpdate, setLastUpdate] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async (showRefreshLoader = false) => {\r\n    try {\r\n      if (showRefreshLoader) {\r\n        setRefreshing(true);\r\n      } else {\r\n        setLoading(true);\r\n      }\r\n      setError(null);\r\n      setSuccessMessage(null);\r\n      \r\n      const data = await apiFetch('/api/role-dashboard/vendedor-comercial');\r\n      \r\n      // Validar que los datos recibidos sean válidos\r\n      if (!data) {\r\n        throw new Error('No se recibieron datos del servidor');\r\n      }\r\n      \r\n      setStats(data);\r\n      setLastUpdate(new Date());\r\n      \r\n      if (showRefreshLoader) {\r\n        setSuccessMessage('Datos actualizados correctamente');\r\n        setTimeout(() => setSuccessMessage(null), 3000);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching dashboard data:', err);\r\n      const errorMessage = err.message || 'Error al cargar los datos del dashboard. Por favor, inténtalo de nuevo.';\r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    fetchDashboardData(true);\r\n  };\r\n\r\n  const handleAction = async (action, actionName) => {\r\n    try {\r\n      setActionLoading(action);\r\n      setError(null);\r\n      setSuccessMessage(null);\r\n      \r\n      // Simular delay para mostrar feedback visual\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      switch (action) {\r\n        case 'nueva-cotizacion':\r\n          navigate('/cotizaciones/inteligente');\r\n          break;\r\n        case 'ver-clientes':\r\n          navigate('/clientes');\r\n          break;\r\n        case 'ver-proyectos':\r\n          navigate('/proyectos');\r\n          break;\r\n        case 'enviar-comprobante':\r\n          navigate('/comprobantes-pago');\r\n          break;\r\n        default:\r\n          throw new Error(`Acción ${action} no implementada`);\r\n      }\r\n      \r\n      // Mostrar mensaje de éxito\r\n      setSuccessMessage(`${actionName} ejecutado correctamente`);\r\n      setTimeout(() => setSuccessMessage(null), 2000);\r\n      \r\n    } catch (err) {\r\n      console.error(`Error en acción ${action}:`, err);\r\n      const errorMessage = err.message || `Error al ejecutar ${actionName}. Por favor, inténtalo de nuevo.`;\r\n      setError(errorMessage);\r\n    } finally {\r\n      setActionLoading(null);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container fluid className=\"p-4\">\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '400px' }}>\r\n          <Spinner animation=\"border\" size=\"lg\" />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container fluid className=\"p-4\">\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"p-4\">\r\n      <PageHeader\r\n        title=\"Mi Dashboard Comercial\"\r\n        subtitle=\"Métricas personales y rendimiento\"\r\n        icon={FiTarget}\r\n      >\r\n        <div className=\"d-flex align-items-center\">\r\n          {lastUpdate && (\r\n            <small className=\"text-muted me-3\">\r\n              Última actualización: {lastUpdate.toLocaleTimeString('es-PE')}\r\n            </small>\r\n          )}\r\n          <Button \r\n            variant=\"outline-primary\" \r\n            size=\"sm\" \r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n          >\r\n            {refreshing ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"me-2\" />\r\n                Actualizando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiRefreshCw className=\"me-2\" />\r\n                Actualizar\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </PageHeader>\r\n\r\n      {/* Notificaciones */}\r\n      {error && (\r\n        <Alert variant=\"danger\" dismissible onClose={() => setError(null)} className=\"mb-4\">\r\n          <Alert.Heading>⚠️ Error</Alert.Heading>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {successMessage && (\r\n        <Alert variant=\"success\" dismissible onClose={() => setSuccessMessage(null)} className=\"mb-4\">\r\n          <Alert.Heading>✅ Éxito</Alert.Heading>\r\n          {successMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Acciones rápidas */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">⚡ Acciones Rápidas</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row className=\"g-3\">\r\n                <Col md={3}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"w-100 d-flex align-items-center justify-content-center\"\r\n                    onClick={() => handleAction('nueva-cotizacion', 'Nueva Cotización')}\r\n                    disabled={actionLoading === 'nueva-cotizacion'}\r\n                  >\r\n                    {actionLoading === 'nueva-cotizacion' ? (\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                    ) : (\r\n                      <FiPlus className=\"me-2\" />\r\n                    )}\r\n                    Nueva Cotización\r\n                  </Button>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    className=\"w-100 d-flex align-items-center justify-content-center\"\r\n                    onClick={() => handleAction('ver-clientes', 'Ver Clientes')}\r\n                    disabled={actionLoading === 'ver-clientes'}\r\n                  >\r\n                    {actionLoading === 'ver-clientes' ? (\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                    ) : (\r\n                      <FiUsers className=\"me-2\" />\r\n                    )}\r\n                    Ver Clientes\r\n                  </Button>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    className=\"w-100 d-flex align-items-center justify-content-center\"\r\n                    onClick={() => handleAction('ver-proyectos', 'Ver Proyectos')}\r\n                    disabled={actionLoading === 'ver-proyectos'}\r\n                  >\r\n                    {actionLoading === 'ver-proyectos' ? (\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                    ) : (\r\n                      <FiBriefcase className=\"me-2\" />\r\n                    )}\r\n                    Ver Proyectos\r\n                  </Button>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    className=\"w-100 d-flex align-items-center justify-content-center\"\r\n                    onClick={() => handleAction('enviar-comprobante', 'Enviar Comprobante')}\r\n                    disabled={actionLoading === 'enviar-comprobante'}\r\n                  >\r\n                    {actionLoading === 'enviar-comprobante' ? (\r\n                      <Spinner size=\"sm\" className=\"me-2\" />\r\n                    ) : (\r\n                      <FiDollarSign className=\"me-2\" />\r\n                    )}\r\n                    Enviar Comprobante\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Métricas principales */}\r\n      <Row className=\"mb-4 g-3\">\r\n        <Col>\r\n          <h4 className=\"text-primary mb-3\">\r\n            <FiTarget className=\"me-2\" />\r\n            Resumen de tu actividad comercial\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4 g-3\">\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Mis Cotizaciones\"\r\n            value={stats?.misCotizaciones || 0}\r\n            icon={FiTarget}\r\n            color=\"primary\"\r\n            subtitle={`${stats?.cotizacionesAprobadas || 0} aprobadas`}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Clientes\"\r\n            value={stats?.totalClientes || 0}\r\n            icon={FiUsers}\r\n            color=\"info\"\r\n            subtitle={`${stats?.clientesNuevosEsteMes || 0} nuevos este mes`}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Ingresos Generados\"\r\n            value={`$${(stats?.ingresosGenerados || 0).toLocaleString()}`}\r\n            icon={FiDollarSign}\r\n            color=\"success\"\r\n            subtitle={`${stats?.cotizacionesFacturadas || 0} facturadas`}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Tasa de Conversión\"\r\n            value={`${stats?.conversionRate || 0}%`}\r\n            icon={FiTrendingUp}\r\n            color=\"warning\"\r\n            subtitle=\"Cotizaciones aprobadas\"\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Métricas de proyectos y mensuales */}\r\n      <Row className=\"mb-4 g-3\">\r\n        <Col>\r\n          <h4 className=\"text-info mb-3\">\r\n            <FiActivity className=\"me-2\" />\r\n            Métricas mensuales y proyectos\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4 g-3\">\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Proyectos Activos\"\r\n            value={stats?.proyectosActivos || 0}\r\n            icon={FiBriefcase}\r\n            color=\"primary\"\r\n            subtitle={`${stats?.proyectosCompletados || 0} completados`}\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Cotizaciones Este Mes\"\r\n            value={stats?.cotizacionesEsteMes || 0}\r\n            icon={FiActivity}\r\n            color=\"info\"\r\n            subtitle=\"Nuevas cotizaciones\"\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Ingresos Este Mes\"\r\n            value={`$${(stats?.ingresosEsteMes || 0).toLocaleString()}`}\r\n            icon={FiDollarSign}\r\n            color=\"success\"\r\n            subtitle=\"Ingresos del mes actual\"\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n        <Col lg={3} md={6}>\r\n          <StatsCard\r\n            title=\"Clientes Nuevos\"\r\n            value={stats?.clientesNuevosEsteMes || 0}\r\n            icon={FiUsers}\r\n            color=\"warning\"\r\n            subtitle=\"Este mes\"\r\n            size=\"normal\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Cotizaciones recientes */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h4 className=\"text-success mb-3\">\r\n            <FiTarget className=\"me-2\" />\r\n            Actividad reciente\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col lg={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">📋 Mis Cotizaciones Recientes</h5>\r\n              <Badge bg=\"primary\">{stats?.cotizacionesRecientes?.length || 0}</Badge>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {stats?.cotizacionesRecientes?.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm table-hover\">\r\n                    <thead className=\"table-light\">\r\n                      <tr>\r\n                        <th>Código</th>\r\n                        <th>Cliente</th>\r\n                        <th>Monto</th>\r\n                        <th>Estado</th>\r\n                        <th>Fecha</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.cotizacionesRecientes.map((cotizacion, index) => (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <code className=\"text-primary\">{cotizacion.quote_number}</code>\r\n                            {cotizacion.distinctive_info?.variant && (\r\n                              <div>\r\n                                <Badge bg=\"primary\" size=\"sm\">{cotizacion.distinctive_info.variant}</Badge>\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"fw-medium\">{cotizacion.client_contact}</div>\r\n                            {cotizacion.project_name && (\r\n                              <div className=\"text-muted small\">{cotizacion.project_name}</div>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <span className=\"fw-bold text-success\">\r\n                              S/ {cotizacion.total_amount?.toLocaleString('es-PE', { \r\n                                minimumFractionDigits: 2, \r\n                                maximumFractionDigits: 2 \r\n                              }) || '0.00'}\r\n                            </span>\r\n                            {cotizacion.distinctive_info?.delivery_days && (\r\n                              <div className=\"text-muted small\">\r\n                                {cotizacion.distinctive_info.delivery_days} días hábiles\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <Badge \r\n                              bg={\r\n                                cotizacion.status === 'aprobada' ? 'success' :\r\n                                cotizacion.status === 'facturada' ? 'primary' :\r\n                                cotizacion.status === 'pendiente' ? 'warning' : \r\n                                cotizacion.status === 'borrador' ? 'secondary' : 'info'\r\n                              }\r\n                              className=\"text-capitalize\"\r\n                            >\r\n                              {cotizacion.status || 'nueva'}\r\n                            </Badge>\r\n                          </td>\r\n                          <td>\r\n                            <small className=\"text-muted\">\r\n                              {new Date(cotizacion.created_at).toLocaleDateString('es-PE')}\r\n                            </small>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-4\">\r\n                  <FiTarget size={48} className=\"text-muted mb-3\" />\r\n                  <p className=\"text-muted mb-0\">No tienes cotizaciones recientes</p>\r\n                  <small className=\"text-muted\">Crea tu primera cotización usando el botón \"Nueva Cotización\"</small>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Clientes recientes */}\r\n        <Col lg={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">👥 Mis Clientes Recientes</h5>\r\n              <Badge bg=\"info\">{stats?.clientesRecientes?.length || 0}</Badge>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {stats?.clientesRecientes?.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm table-hover\">\r\n                    <thead className=\"table-light\">\r\n                      <tr>\r\n                        <th>Empresa</th>\r\n                        <th>RUC</th>\r\n                        <th>Última Cotización</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.clientesRecientes.map((cliente, index) => (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <div className=\"fw-medium\">{cliente.name}</div>\r\n                          </td>\r\n                          <td>\r\n                            <code className=\"text-muted\">{cliente.ruc}</code>\r\n                          </td>\r\n                          <td>\r\n                            <small className=\"text-muted\">\r\n                              {new Date(cliente.ultima_cotizacion).toLocaleDateString('es-PE')}\r\n                            </small>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-4\">\r\n                  <FiUsers size={48} className=\"text-muted mb-3\" />\r\n                  <p className=\"text-muted mb-0\">No tienes clientes recientes</p>\r\n                  <small className=\"text-muted\">Los clientes aparecerán aquí cuando crees cotizaciones</small>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Proyectos recientes */}\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">📁 Mis Proyectos Recientes</h5>\r\n              <Badge bg=\"success\">{stats?.proyectosRecientes?.length || 0}</Badge>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {stats?.proyectosRecientes?.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-sm table-hover\">\r\n                    <thead className=\"table-light\">\r\n                      <tr>\r\n                        <th>Proyecto</th>\r\n                        <th>Empresa</th>\r\n                        <th>Estado</th>\r\n                        <th>Fecha Creación</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.proyectosRecientes.map((proyecto, index) => (\r\n                        <tr key={index}>\r\n                          <td>\r\n                            <div className=\"fw-medium\">{proyecto.name}</div>\r\n                          </td>\r\n                          <td>\r\n                            <div className=\"text-muted\">{proyecto.company_name}</div>\r\n                          </td>\r\n                          <td>\r\n                            <Badge \r\n                              bg={\r\n                                proyecto.status === 'activo' ? 'success' :\r\n                                proyecto.status === 'completado' ? 'primary' :\r\n                                proyecto.status === 'pendiente' ? 'warning' : \r\n                                proyecto.status === 'en_progreso' ? 'info' : 'secondary'\r\n                              }\r\n                              className=\"text-capitalize\"\r\n                            >\r\n                              {proyecto.status}\r\n                            </Badge>\r\n                          </td>\r\n                          <td>\r\n                            <small className=\"text-muted\">\r\n                              {new Date(proyecto.created_at).toLocaleDateString('es-PE')}\r\n                            </small>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-4\">\r\n                  <FiBriefcase size={48} className=\"text-muted mb-3\" />\r\n                  <p className=\"text-muted mb-0\">No tienes proyectos recientes</p>\r\n                  <small className=\"text-muted\">Los proyectos aparecerán aquí cuando crees cotizaciones</small>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["VendedorComercialDashboard","stats","setStats","useState","loading","setLoading","error","setError","refreshing","setRefreshing","actionLoading","setActionLoading","successMessage","setSuccessMessage","lastUpdate","setLastUpdate","navigate","useNavigate","useEffect","fetchDashboardData","showRefreshLoader","data","apiFetch","err","errorMessage","handleRefresh","handleAction","action","actionName","resolve","jsx","Container","Spinner","Alert","jsxs","PageHeader","FiTarget","Button","Fragment","FiRefreshCw","Row","Col","Card","FiPlus","FiUsers","FiBriefcase","FiDollarSign","StatsCard","FiTrendingUp","FiActivity","Badge","_a","cotizacion","index","_b","_c","cliente","_e","proyecto"],"mappings":"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"}