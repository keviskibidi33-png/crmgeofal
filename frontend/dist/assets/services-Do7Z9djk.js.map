{"version":3,"file":"services-Do7Z9djk.js","sources":["../../src/services/services.js"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\n// Obtener todos los servicios\r\nexport const listServices = (params = {}) => {\r\n  const sp = new URLSearchParams();\r\n  if (params.type) sp.set('type', params.type);\r\n  if (params.search) sp.set('search', params.search);\r\n  if (params.page) sp.set('page', params.page);\r\n  if (params.limit) sp.set('limit', params.limit);\r\n  \r\n  const qs = sp.toString();\r\n  const path = qs ? `/api/services?${qs}` : '/api/services';\r\n  return apiFetch(path);\r\n};\r\n\r\n// Obtener servicio por ID\r\nexport const getService = (id) => {\r\n  return apiFetch(`/api/services/${id}`);\r\n};\r\n\r\n// Obtener subservicios de un servicio\r\nexport const listSubservices = (params = {}) => {\r\n  const sp = new URLSearchParams();\r\n  if (params.service_id) sp.set('service_id', params.service_id);\r\n  if (params.search) sp.set('search', params.search);\r\n  if (params.page) sp.set('page', params.page);\r\n  if (params.limit) sp.set('limit', params.limit);\r\n  \r\n  const qs = sp.toString();\r\n  const path = qs ? `/api/subservices?${qs}` : '/api/subservices';\r\n  return apiFetch(path);\r\n};\r\n\r\n// Crear nuevo servicio\r\nexport const createService = (serviceData) => {\r\n  return apiFetch('/api/services', {\r\n    method: 'POST',\r\n    body: JSON.stringify(serviceData)\r\n  });\r\n};\r\n\r\n// Actualizar servicio\r\nexport const updateService = (id, serviceData) => {\r\n  return apiFetch(`/api/services/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(serviceData)\r\n  });\r\n};\r\n\r\n// Eliminar servicio\r\nexport const deleteService = (id) => {\r\n  return apiFetch(`/api/services/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n};\r\n\r\n// Obtener estadÃ­sticas de servicios\r\nexport const getServiceStats = () => {\r\n  return apiFetch('/api/services/stats/overview');\r\n};\r\n\r\nexport default {\r\n  listServices,\r\n  getService,\r\n  listSubservices,\r\n  createService,\r\n  updateService,\r\n  deleteService,\r\n  getServiceStats\r\n};"],"names":["listServices","params","sp","qs","path","apiFetch","listSubservices"],"mappings":"wCAGY,MAACA,EAAe,CAACC,EAAS,KAAO,CAC3C,MAAMC,EAAK,IAAI,gBACXD,EAAO,MAAMC,EAAG,IAAI,OAAQD,EAAO,IAAI,EACvCA,EAAO,QAAQC,EAAG,IAAI,SAAUD,EAAO,MAAM,EAC7CA,EAAO,MAAMC,EAAG,IAAI,OAAQD,EAAO,IAAI,EACvCA,EAAO,OAAOC,EAAG,IAAI,QAASD,EAAO,KAAK,EAE9C,MAAME,EAAKD,EAAG,WACRE,EAAOD,EAAK,iBAAiBA,CAAE,GAAK,gBAC1C,OAAOE,EAASD,CAAI,CACtB,EAQaE,EAAkB,CAACL,EAAS,KAAO,CAC9C,MAAMC,EAAK,IAAI,gBACXD,EAAO,YAAYC,EAAG,IAAI,aAAcD,EAAO,UAAU,EACzDA,EAAO,QAAQC,EAAG,IAAI,SAAUD,EAAO,MAAM,EAC7CA,EAAO,MAAMC,EAAG,IAAI,OAAQD,EAAO,IAAI,EACvCA,EAAO,OAAOC,EAAG,IAAI,QAASD,EAAO,KAAK,EAE9C,MAAME,EAAKD,EAAG,WACRE,EAAOD,EAAK,oBAAoBA,CAAE,GAAK,mBAC7C,OAAOE,EAASD,CAAI,CACtB"}