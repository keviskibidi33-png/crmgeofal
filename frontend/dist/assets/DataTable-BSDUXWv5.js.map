{"version":3,"file":"DataTable-BSDUXWv5.js","sources":["../../src/components/common/DataTable.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { Table, Form, InputGroup, Button, Badge, Dropdown, Pagination, Row, Col } from 'react-bootstrap';\r\nimport { FiSearch, FiFilter, FiMoreVertical, FiEdit, FiTrash2, FiEye } from 'react-icons/fi';\r\nimport './DataTable.css';\r\n\r\nconst DataTable = ({\r\n  data = [],\r\n  columns = [],\r\n  searchable = true,\r\n  filterable = true,\r\n  actions = [],\r\n  onEdit,\r\n  onDelete,\r\n  onView,\r\n  loading = false,\r\n  emptyMessage = \"No hay datos disponibles\",\r\n  className = \"\",\r\n  // Nuevas props para paginación del backend\r\n  totalItems = 0,\r\n  itemsPerPage = 20,\r\n  currentPage = 1,\r\n  onPageChange,\r\n  onSearch,\r\n  onFilter,\r\n  // Props para filtros personalizados\r\n  filterOptions = null,\r\n  // Función para estilos de fila\r\n  getRowClassName = null\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortField, setSortField] = useState('');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Filtrar y ordenar datos\r\n  const filteredData = useMemo(() => {\r\n    let filtered = data;\r\n\r\n    // Si hay paginación del backend, no filtrar localmente\r\n    if (totalItems > 0) {\r\n      return filtered;\r\n    }\r\n\r\n    // Búsqueda local (solo si no hay paginación del backend)\r\n    if (searchTerm && searchable) {\r\n      filtered = filtered.filter(item =>\r\n        columns.some(col => {\r\n          const value = col.accessor ? item[col.accessor] : '';\r\n          return String(value).toLowerCase().includes(searchTerm.toLowerCase());\r\n        })\r\n      );\r\n    }\r\n\r\n    // Ordenamiento\r\n    if (sortField) {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const aVal = a[sortField];\r\n        const bVal = b[sortField];\r\n        \r\n        if (aVal < bVal) return sortDirection === 'asc' ? -1 : 1;\r\n        if (aVal > bVal) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [data, searchTerm, sortField, sortDirection, columns, searchable, totalItems]);\r\n\r\n  // Paginación - usar props del backend si están disponibles\r\n  const totalPages = totalItems > 0 ? Math.ceil(totalItems / itemsPerPage) : Math.ceil(filteredData.length / itemsPerPage);\r\n  const paginatedData = totalItems > 0 ? data : filteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  const handleSort = (field) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField !== field) return null;\r\n    return sortDirection === 'asc' ? '↑' : '↓';\r\n  };\r\n\r\n  const renderCell = (item, column) => {\r\n    const value = column.accessor ? item[column.accessor] : '';\r\n    \r\n    if (column.render) {\r\n      return column.render(value, item);\r\n    }\r\n    \r\n    if (column.type === 'badge') {\r\n      return (\r\n        <Badge bg={column.badgeColor || 'secondary'}>\r\n          {value}\r\n        </Badge>\r\n      );\r\n    }\r\n    \r\n    if (column.type === 'date') {\r\n      return new Date(value).toLocaleDateString('es-ES');\r\n    }\r\n    \r\n    return value;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-5\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Cargando...</span>\r\n        </div>\r\n        <p className=\"mt-2 text-muted\">Cargando datos...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`data-table ${className}`}>\r\n      {/* Barra de búsqueda y filtros */}\r\n      {(searchable || filterable) && (\r\n        <div className=\"table-controls bg-light p-3 rounded-top border\">\r\n          <Row className=\"align-items-center\">\r\n            {searchable && (\r\n              <Col md={6}>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiSearch />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por nombre, email, rol...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => {\r\n                      setSearchTerm(e.target.value);\r\n                      // Si hay función onSearch del backend, llamarla con debounce\r\n                      if (onSearch) {\r\n                        clearTimeout(window.searchTimeout);\r\n                        window.searchTimeout = setTimeout(() => {\r\n                          onSearch(e.target.value);\r\n                        }, 500); // Debounce de 500ms\r\n                      }\r\n                    }}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            )}\r\n            \r\n            {filterable && (\r\n              <Col md={6} className=\"text-end\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"outline-secondary\" size=\"sm\">\r\n                  <FiFilter className=\"me-1\" />\r\n                  Filtros\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu className=\"data-table-filter-dropdown\">\r\n                    <Dropdown.Item \r\n                      className=\"data-table-filter-item\"\r\n                      onClick={() => onFilter && onFilter({})}\r\n                    >\r\n                      Limpiar filtros\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    \r\n                    {/* Filtros dinámicos basados en filterOptions */}\r\n                    {filterOptions ? (\r\n                      filterOptions.map((section, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <Dropdown.Header className=\"data-table-filter-header\">{section.title}</Dropdown.Header>\r\n                          {section.options.map((option, optIndex) => (\r\n                            <Dropdown.Item \r\n                              key={optIndex}\r\n                              onClick={() => onFilter && onFilter(option.filter)}\r\n                              className=\"data-table-filter-item\"\r\n                            >\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                          {index < filterOptions.length - 1 && <Dropdown.Divider />}\r\n                        </React.Fragment>\r\n                      ))\r\n                    ) : (\r\n                      // Filtros por defecto para usuarios\r\n                      <>\r\n                        <Dropdown.Header className=\"data-table-filter-header\">Por Rol</Dropdown.Header>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'admin' })}>\r\n                          Administradores\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'vendedor_comercial' })}>\r\n                          Vendedores Comerciales\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'jefa_comercial' })}>\r\n                          Jefas Comerciales\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'jefe_laboratorio' })}>\r\n                          Jefes de Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'usuario_laboratorio' })}>\r\n                          Usuarios de Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'soporte' })}>\r\n                          Soporte\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ role: 'gerencia' })}>\r\n                          Gerencia\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Header className=\"data-table-filter-header\">Por Área</Dropdown.Header>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Comercial' })}>\r\n                          Comercial\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Laboratorio' })}>\r\n                          Laboratorio\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Sistemas' })}>\r\n                          Sistemas\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Gerencia' })}>\r\n                          Gerencia\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"data-table-filter-item\" onClick={() => onFilter && onFilter({ area: 'Soporte' })}>\r\n                          Soporte\r\n                        </Dropdown.Item>\r\n                      </>\r\n                    )}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tabla */}\r\n      <div className=\"table-responsive\">\r\n        <Table hover className=\"mb-0\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {columns.map((column, index) => (\r\n                <th \r\n                  key={index}\r\n                  className={column.sortable ? 'cursor-pointer' : ''}\r\n                  onClick={() => column.sortable && handleSort(column.accessor)}\r\n                  style={{ minWidth: column.width || 'auto' }}\r\n                >\r\n                  <div className=\"d-flex align-items-center\">\r\n                    {column.header}\r\n                    {column.sortable && (\r\n                      <span className=\"ms-1 text-muted\">\r\n                        {getSortIcon(column.accessor)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n              \r\n              {actions.length > 0 && (\r\n                <th width=\"120\" className=\"text-center\">Acciones</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          \r\n          <tbody>\r\n            {paginatedData.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={columns.length + (actions.length > 0 ? 1 : 0)} className=\"text-center py-5\">\r\n                  <div className=\"text-muted\">\r\n                    <FiSearch size={48} className=\"mb-3 opacity-50\" />\r\n                    <p className=\"mb-0\">{emptyMessage}</p>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              paginatedData.map((item, index) => (\r\n                <tr key={item.id || index} className={getRowClassName ? getRowClassName(item) : ''}>\r\n                  {columns.map((column, colIndex) => (\r\n                    <td key={colIndex}>\r\n                      {renderCell(item, column)}\r\n                    </td>\r\n                  ))}\r\n                  \r\n                  {actions.length > 0 && (\r\n                    <td className=\"text-center\">\r\n                      <Dropdown>\r\n                        <Dropdown.Toggle variant=\"link\" size=\"sm\" className=\"text-muted\">\r\n                          <FiMoreVertical />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                          {actions.length > 0 ? (\r\n                            actions.map((action, actionIndex) => (\r\n                              <Dropdown.Item \r\n                                key={actionIndex}\r\n                                onClick={() => action.onClick && action.onClick(item)}\r\n                                className={action.variant === 'outline-danger' ? 'text-danger' : ''}\r\n                              >\r\n                                {action.icon && <action.icon className=\"me-2\" />}\r\n                                {action.label}\r\n                              </Dropdown.Item>\r\n                            ))\r\n                          ) : (\r\n                            <>\r\n                              {onView && (\r\n                                <Dropdown.Item onClick={() => onView(item)}>\r\n                                  <FiEye className=\"me-2\" />\r\n                                  Ver\r\n                                </Dropdown.Item>\r\n                              )}\r\n                              {onEdit && (\r\n                                <Dropdown.Item onClick={() => onEdit(item)}>\r\n                                  <FiEdit className=\"me-2\" />\r\n                                  Editar\r\n                                </Dropdown.Item>\r\n                              )}\r\n                              {onDelete && (\r\n                                <Dropdown.Item \r\n                                  onClick={() => onDelete(item)}\r\n                                  className=\"text-danger\"\r\n                                >\r\n                                  <FiTrash2 className=\"me-2\" />\r\n                                  Eliminar\r\n                                </Dropdown.Item>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      {/* Paginación */}\r\n      {totalPages > 1 && (\r\n        <div className=\"table-footer bg-light p-3 rounded-bottom border border-top-0\">\r\n          <Row className=\"align-items-center\">\r\n            <Col>\r\n              <small className=\"text-muted\">\r\n                Mostrando {((currentPage - 1) * itemsPerPage) + 1} a {Math.min(currentPage * itemsPerPage, totalItems || filteredData.length)} de {totalItems || filteredData.length} registros\r\n              </small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <div className=\"d-flex align-items-center gap-2\">\r\n                {/* Botón Primera página */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => onPageChange && onPageChange(1)}\r\n                  title=\"Primera página\"\r\n                >\r\n                  ««\r\n                </Button>\r\n                \r\n                {/* Botón Anterior */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => onPageChange && onPageChange(currentPage - 1)}\r\n                  title=\"Página anterior\"\r\n                >\r\n                  «\r\n                </Button>\r\n                \r\n                {/* Páginas dinámicas (máximo 3 visibles) */}\r\n                {(() => {\r\n                  const pages = [];\r\n                  const startPage = Math.max(1, currentPage - 1);\r\n                  const endPage = Math.min(totalPages, startPage + 2);\r\n                  \r\n                  for (let i = startPage; i <= endPage; i++) {\r\n                    pages.push(\r\n                      <Button\r\n                        key={i}\r\n                        variant={currentPage === i ? \"primary\" : \"outline-secondary\"}\r\n                        size=\"sm\"\r\n                        onClick={() => onPageChange && onPageChange(i)}\r\n                        className=\"px-3\"\r\n                      >\r\n                        {i}\r\n                      </Button>\r\n                    );\r\n                  }\r\n                  return pages;\r\n                })()}\r\n                \r\n                {/* Botón Siguiente */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => onPageChange && onPageChange(currentPage + 1)}\r\n                  title=\"Página siguiente\"\r\n                >\r\n                  »\r\n                </Button>\r\n                \r\n                {/* Botón Última página */}\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => onPageChange && onPageChange(totalPages)}\r\n                  title=\"Última página\"\r\n                >\r\n                  »»\r\n                </Button>\r\n                \r\n                {/* Input para ir a página específica */}\r\n                <div className=\"d-flex align-items-center gap-1 ms-3\">\r\n                  <span className=\"text-muted small\">Ir a:</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max={totalPages}\r\n                    className=\"form-control form-control-sm\"\r\n                    style={{ width: '60px' }}\r\n                    placeholder=\"...\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        const page = parseInt(e.target.value);\r\n                        if (page >= 1 && page <= totalPages) {\r\n                          onPageChange && onPageChange(page);\r\n                          e.target.value = '';\r\n                        } else {\r\n                          // Si la página no existe, ir a la última página\r\n                          onPageChange && onPageChange(totalPages);\r\n                          e.target.value = '';\r\n                        }\r\n                      }\r\n                    }}\r\n                    title={`Ingresa un número del 1 al ${totalPages}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":["DataTable","data","columns","searchable","filterable","actions","onEdit","onDelete","onView","loading","emptyMessage","className","totalItems","itemsPerPage","currentPage","onPageChange","onSearch","onFilter","filterOptions","getRowClassName","searchTerm","setSearchTerm","useState","sortField","setSortField","sortDirection","setSortDirection","filteredData","useMemo","filtered","item","col","value","a","b","aVal","bVal","totalPages","paginatedData","handleSort","field","getSortIcon","renderCell","column","Badge","jsxs","jsx","Row","Col","InputGroup","FiSearch","Form","e","Dropdown","FiFilter","section","index","React","option","optIndex","Fragment","Table","colIndex","FiMoreVertical","action","actionIndex","FiEye","FiEdit","FiTrash2","Button","pages","startPage","endPage","page"],"mappings":"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"}