{"version":3,"file":"Usuarios-BOfPBYvG.js","sources":["../../src/pages/Usuarios.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { Button, Badge, Row, Col, Card, Container, Dropdown, Modal, Form, Alert, Spinner } from 'react-bootstrap';\r\nimport { FiPlus, FiEdit, FiTrash2, FiLock, FiUser, FiUsers, FiShield, FiSettings, FiRefreshCw, FiMoreVertical, FiUserX, FiUserCheck } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport ModalForm from '../components/common/ModalForm';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport ConfirmModal from '../components/common/ConfirmModal';\r\nimport { listUsers, createUser, updateUser, deleteUser, getUserStats } from '../services/users';\r\n\r\nconst emptyForm = { name: '', apellido: '', email: '', role: 'vendedor_comercial', area: 'Comercial', password: '' };\r\n\r\nconst ROLES = [\r\n  { value: 'admin', label: 'Administrador' },\r\n  { value: 'jefa_comercial', label: 'Jefa Comercial' },\r\n  { value: 'vendedor_comercial', label: 'Vendedor Comercial' },\r\n  { value: 'jefe_laboratorio', label: 'Jefe Laboratorio' },\r\n  { value: 'usuario_laboratorio', label: 'Usuario Laboratorio' },\r\n  { value: 'facturacion', label: 'Facturación' },\r\n  // Eliminado rol 'laboratorio'. Usar 'usuario_laboratorio'\r\n  { value: 'soporte', label: 'Soporte' },\r\n  { value: 'gerencia', label: 'Gerencia' },\r\n];\r\n\r\nconst AREAS = [\r\n  { value: 'Comercial', label: 'Comercial' },\r\n  { value: 'Laboratorio', label: 'Laboratorio' },\r\n  { value: 'Facturación', label: 'Facturación' },\r\n  { value: 'Sistemas', label: 'Sistemas' },\r\n  { value: 'Gerencia', label: 'Gerencia' },\r\n  { value: 'Soporte', label: 'Soporte' },\r\n];\r\n\r\nexport default function Usuarios() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [deletingUser, setDeletingUser] = useState(null);\r\n  // Eliminado flujo de restablecer contraseña\r\n  const [deactivatingUser, setDeactivatingUser] = useState(null);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  // Estado para paginación\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedArea, setSelectedArea] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['users', currentPage, searchTerm, selectedRole, selectedArea],\r\n    () => listUsers({ \r\n      page: currentPage, \r\n      limit: 20, \r\n      search: searchTerm, \r\n      role: selectedRole, \r\n      area: selectedArea \r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 0, // Siempre considerar los datos como obsoletos\r\n      cacheTime: 0  // No mantener en caché\r\n    }\r\n  );\r\n\r\n  // Consulta separada para estadísticas reales\r\n  const { data: statsData, isLoading: statsLoading } = useQuery(\r\n    ['userStats'],\r\n    getUserStats,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 30000, // 30 segundos\r\n      cacheTime: 60000  // 1 minuto\r\n    }\r\n  );\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    queryClient.invalidateQueries('users');\r\n    queryClient.invalidateQueries('userStats'); // Invalidar también las estadísticas\r\n    setShowModal(false);\r\n    setEditingUser(null);\r\n    setDeletingUser(null);\r\n    // Eliminado flujo de restablecer contraseña\r\n  };\r\n\r\n  // Función para manejar búsqueda\r\n  const handleSearch = (searchValue) => {\r\n    console.log('🔍 handleSearch - Búsqueda:', searchValue);\r\n    setSearchTerm(searchValue);\r\n    setCurrentPage(1); // Resetear a la primera página\r\n    setIsSearching(true);\r\n    \r\n    // La consulta se actualizará automáticamente por el useQuery\r\n    setTimeout(() => setIsSearching(false), 1000);\r\n  };\r\n\r\n  // Función para manejar filtros\r\n  const handleFilter = (filters) => {\r\n    console.log('🔍 handleFilter - Filtros:', filters);\r\n    setSelectedRole(filters.role || '');\r\n    setSelectedArea(filters.area || '');\r\n    setCurrentPage(1); // Resetear a la primera página\r\n  };\r\n\r\n  const createMutation = useMutation(createUser, {\r\n    onSuccess: () => handleMutationSuccess('Usuario creado exitosamente'),\r\n    onError: (error) => console.error('Error creating user:', error)\r\n  });\r\n\r\n  const updateMutation = useMutation(\r\n    ({ id, ...userData }) => updateUser(id, userData),\r\n    {\r\n      onSuccess: () => handleMutationSuccess('Usuario actualizado exitosamente'),\r\n      onError: (error) => console.error('Error updating user:', error)\r\n    }\r\n  );\r\n\r\n  const deleteMutation = useMutation(deleteUser, {\r\n    onSuccess: () => handleMutationSuccess('Usuario eliminado exitosamente'),\r\n    onError: (error) => console.error('Error deleting user:', error)\r\n  });\r\n\r\n  // Eliminado resetPasswordMutation\r\n\r\n  const deactivateUserMutation = useMutation(\r\n    ({ id, userData }) => {\r\n      console.log('🔍 deactivateUserMutation - Llamando updateUser con:', { id, userData });\r\n      return updateUser(id, userData);\r\n    },\r\n    {\r\n      onSuccess: (data) => {\r\n        console.log('✅ deactivateUserMutation - Éxito:', data);\r\n        setSuccess('Usuario desactivado exitosamente');\r\n        setDeactivatingUser(null);\r\n        queryClient.invalidateQueries('users');\r\n        queryClient.invalidateQueries('userStats');\r\n      },\r\n      onError: (error) => {\r\n        console.error('❌ deactivateUserMutation - Error:', error);\r\n        setError('Error al desactivar usuario: ' + (error.message || 'Error desconocido'));\r\n      }\r\n    }\r\n  );\r\n\r\n  const activateUserMutation = useMutation(\r\n    ({ id, userData }) => updateUser(id, userData),\r\n    {\r\n      onSuccess: () => {\r\n        setSuccess('Usuario activado exitosamente');\r\n        setDeactivatingUser(null);\r\n        queryClient.invalidateQueries('users');\r\n        queryClient.invalidateQueries('userStats');\r\n      },\r\n      onError: (error) => {\r\n        setError('Error al activar usuario: ' + (error.message || 'Error desconocido'));\r\n        console.error('Error activating user:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n  const handleCreate = () => {\r\n    setEditingUser(emptyForm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (user, event) => {\r\n    event?.stopPropagation();\r\n    setEditingUser(user);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (user, event) => {\r\n    event?.stopPropagation();\r\n    setDeletingUser(user);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      console.log('🔍 confirmDelete - Eliminando usuario:', deletingUser.id);\r\n      await deleteMutation.mutateAsync(deletingUser.id);\r\n      console.log('✅ confirmDelete - Usuario eliminado exitosamente');\r\n      setDeletingUser(null);\r\n    } catch (error) {\r\n      console.error('❌ confirmDelete - Error:', error);\r\n      setError('Error al eliminar usuario: ' + error.message);\r\n      setDeletingUser(null);\r\n    }\r\n  };\r\n\r\n  // Eliminado handleResetPassword\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (editingUser.id) {\r\n      await updateMutation.mutateAsync({ id: editingUser.id, ...formData });\r\n    } else {\r\n      await createMutation.mutateAsync(formData);\r\n    }\r\n  };\r\n\r\n  // Eliminado handlePasswordReset\r\n\r\n  const handleDeactivateUser = (user, event) => {\r\n    event?.stopPropagation();\r\n    setDeactivatingUser(user);\r\n  };\r\n\r\n  const confirmDeactivate = async () => {\r\n    if (deactivatingUser) {\r\n      console.log('🔍 confirmDeactivate - Desactivando usuario:', deactivatingUser.id);\r\n      try {\r\n        const result = await deactivateUserMutation.mutateAsync({\r\n          id: deactivatingUser.id,\r\n          userData: { active: false }\r\n        });\r\n        console.log('✅ confirmDeactivate - Usuario desactivado exitosamente:', result);\r\n      } catch (error) {\r\n        console.error('❌ confirmDeactivate - Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleActivateUser = (user, event) => {\r\n    event?.stopPropagation();\r\n    setDeactivatingUser(user);\r\n  };\r\n\r\n  const confirmActivate = async () => {\r\n    if (deactivatingUser) {\r\n      await activateUserMutation.mutateAsync({\r\n        id: deactivatingUser.id,\r\n        userData: { active: true }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getRoleBadgeColor = (role) => {\r\n    const colors = {\r\n      admin: 'danger',\r\n      jefa_comercial: 'warning',\r\n      vendedor_comercial: 'primary',\r\n      jefe_laboratorio: 'info',\r\n      usuario_laboratorio: 'secondary',\r\n      laboratorio: 'secondary',\r\n      soporte: 'success',\r\n      gerencia: 'dark'\r\n    };\r\n    return colors[role] || 'secondary';\r\n  };\r\n\r\n  const getRoleLabel = (role) => {\r\n    const roleObj = ROLES.find(r => r.value === role);\r\n    return roleObj ? roleObj.label : role;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'ID',\r\n      accessor: 'id',\r\n      width: '80px'\r\n    },\r\n    {\r\n      header: 'Nombre',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name} {row.apellido}</div>\r\n          <small className=\"text-muted\">{row.email}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Rol',\r\n      accessor: 'role',\r\n      render: (value) => (\r\n        <Badge bg={getRoleBadgeColor(value)} className=\"status-badge\">\r\n          {getRoleLabel(value)}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Área',\r\n      accessor: 'area',\r\n      render: (value) => (\r\n        <Badge bg=\"light\" text=\"dark\" className=\"status-badge\">\r\n          {value}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Estado',\r\n      accessor: 'active',\r\n      render: (value, row) => (\r\n        <Badge bg={value !== false ? 'success' : 'danger'} className=\"status-badge\">\r\n          {value !== false ? 'Activo' : 'Inactivo'}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Fecha Creación',\r\n      accessor: 'created_at',\r\n      type: 'date'\r\n    },\r\n    {\r\n      header: 'Acciones',\r\n      accessor: 'actions',\r\n      render: (value, row) => (\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"outline-secondary\" size=\"sm\" id={`dropdown-${row.id}`}>\r\n            <FiMoreVertical />\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n                <Dropdown.Item onClick={(e) => handleEdit(row, e)}>\r\n                  <FiEdit className=\"me-2\" />\r\n                  Editar Usuario\r\n                </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            {row.active !== false ? (\r\n              <Dropdown.Item onClick={(e) => handleDeactivateUser(row, e)} className=\"text-warning\">\r\n                <FiUserX className=\"me-2\" />\r\n                Desactivar Usuario\r\n              </Dropdown.Item>\r\n            ) : (\r\n              <Dropdown.Item onClick={(e) => handleActivateUser(row, e)} className=\"text-success\">\r\n                <FiUserCheck className=\"me-2\" />\r\n                Activar Usuario\r\n              </Dropdown.Item>\r\n            )}\r\n            <Dropdown.Item onClick={(e) => handleDelete(row, e)} className=\"text-danger\">\r\n              <FiTrash2 className=\"me-2\" />\r\n              Eliminar Usuario\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const formFields = [\r\n    {\r\n      name: 'name',\r\n      label: 'Nombre',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el nombre'\r\n    },\r\n    {\r\n      name: 'apellido',\r\n      label: 'Apellido',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el apellido'\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      required: true,\r\n      placeholder: 'usuario@ejemplo.com'\r\n    },\r\n    {\r\n      name: 'role',\r\n      label: 'Rol',\r\n      type: 'select',\r\n      required: true,\r\n      options: ROLES\r\n    },\r\n    {\r\n      name: 'area',\r\n      label: 'Área',\r\n      type: 'select',\r\n      required: true,\r\n      options: AREAS\r\n    },\r\n    {\r\n      name: 'password',\r\n      label: 'Contraseña',\r\n      type: 'password',\r\n      required: !editingUser?.id,\r\n      placeholder: 'Mínimo 6 caracteres',\r\n      help: editingUser?.id ? 'Dejar vacío para mantener la contraseña actual' : 'Mínimo 6 caracteres'\r\n    }\r\n  ];\r\n\r\n  // Removemos las acciones antiguas ya que ahora usamos el menú desplegable\r\n\r\n  // Calcular estadísticas\r\n  const stats = useMemo(() => {\r\n    // Usar estadísticas reales del backend si están disponibles\r\n    if (statsData) {\r\n      console.log('📊 Stats - Usando estadísticas reales del backend:', statsData);\r\n      return {\r\n        total: statsData.total || 0,\r\n        admins: statsData.admins || 0,\r\n        vendedores: statsData.vendedores || 0,\r\n        laboratorio: statsData.laboratorio || 0,\r\n        activos: statsData.active || 0\r\n      };\r\n    }\r\n    \r\n    // Fallback: calcular desde los datos de la página actual\r\n    const users = data?.data || [];\r\n    console.log('📊 Stats - Fallback: calculando desde página actual:', users);\r\n    return {\r\n      total: users.length,\r\n      admins: users.filter(u => u.role === 'admin').length,\r\n      vendedores: users.filter(u => u.role === 'vendedor_comercial').length,\r\n      laboratorio: users.filter(u => ['jefe_laboratorio', 'usuario_laboratorio'].includes(u.role)).length,\r\n      activos: users.filter(u => u.active !== false).length\r\n    };\r\n  }, [statsData, data]);\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <div className=\"fade-in\">\r\n        <PageHeader\r\n          title=\"Gestión de Usuarios\"\r\n          subtitle=\"Crear, editar, eliminar y gestionar usuarios del sistema\"\r\n          icon={FiUsers}\r\n          actions={\r\n            <Button variant=\"primary\" onClick={handleCreate}>\r\n              <FiPlus className=\"me-2\" />\r\n              Nuevo Usuario\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        {/* Estadísticas */}\r\n        <Row className=\"g-4 mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Usuarios\"\r\n              value={stats.total}\r\n              icon={FiUsers}\r\n              color=\"primary\"\r\n              subtitle=\"Usuarios registrados\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Administradores\"\r\n              value={stats.admins}\r\n              icon={FiShield}\r\n              color=\"danger\"\r\n              subtitle=\"Usuarios con privilegios\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Vendedores\"\r\n              value={stats.vendedores}\r\n              icon={FiUser}\r\n              color=\"success\"\r\n              subtitle=\"Equipo comercial\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Laboratorio\"\r\n              value={stats.laboratorio}\r\n              icon={FiSettings}\r\n              color=\"info\"\r\n              subtitle=\"Personal técnico\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Tabla de usuarios */}\r\n        <Card className=\"shadow-sm border-0\">\r\n          <Card.Header className=\"bg-white border-bottom\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiUsers className=\"me-2 text-primary\" />\r\n                Lista de Usuarios\r\n              </h5>\r\n              <div className=\"d-flex align-items-center gap-2\">\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => refetch()}\r\n                  disabled={isLoading}\r\n                  className=\"refresh-btn\"\r\n                >\r\n                  <FiRefreshCw className={isLoading ? 'spinning' : ''} />\r\n                </Button>\r\n                <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\r\n                  {stats.total} usuarios\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              data={data?.data || []}\r\n              columns={columns}\r\n              loading={isLoading || isSearching}\r\n              emptyMessage=\"No hay usuarios registrados\"\r\n              // Props para paginación del backend\r\n              totalItems={data?.total || 0}\r\n              itemsPerPage={20}\r\n              currentPage={currentPage}\r\n              onPageChange={setCurrentPage}\r\n              onSearch={handleSearch}\r\n              onFilter={handleFilter}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      <ModalForm\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        title={editingUser?.id ? 'Editar Usuario' : 'Nuevo Usuario'}\r\n        data={editingUser || emptyForm}\r\n        fields={formFields}\r\n        onSubmit={handleSubmit}\r\n        loading={createMutation.isLoading || updateMutation.isLoading}\r\n        submitText={editingUser?.id ? 'Actualizar' : 'Crear'}\r\n      />\r\n\r\n      {/* Modal de restablecer contraseña eliminado */}\r\n\r\n      {/* Modal para desactivar usuario */}\r\n      <Modal show={!!deactivatingUser} onHide={() => setDeactivatingUser(null)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <FiUserX className=\"me-2 text-warning\" />\r\n            {deactivatingUser?.active !== false ? 'Desactivar Usuario' : 'Activar Usuario'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            ¿Estás seguro de que quieres {deactivatingUser?.active !== false ? 'desactivar' : 'activar'} al usuario{' '}\r\n            <strong>{deactivatingUser?.name} {deactivatingUser?.apellido}</strong>?\r\n          </p>\r\n          {deactivatingUser?.active !== false ? (\r\n            <Alert variant=\"warning\">\r\n              <strong>Nota:</strong> Al desactivar el usuario, no podrá acceder al sistema hasta que sea reactivado.\r\n            </Alert>\r\n          ) : (\r\n            <Alert variant=\"info\">\r\n              <strong>Nota:</strong> Al activar el usuario, podrá acceder nuevamente al sistema.\r\n            </Alert>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setDeactivatingUser(null)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            variant={deactivatingUser?.active !== false ? 'warning' : 'success'}\r\n            onClick={deactivatingUser?.active !== false ? confirmDeactivate : confirmActivate}\r\n            disabled={deactivatingUser?.active !== false ? deactivateUserMutation.isLoading : activateUserMutation.isLoading}\r\n          >\r\n            {(deactivatingUser?.active !== false ? deactivateUserMutation.isLoading : activateUserMutation.isLoading) ? (\r\n              <>\r\n                <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                Procesando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                {deactivatingUser?.active !== false ? (\r\n                  <>\r\n                    <FiUserX className=\"me-2\" />\r\n                    Desactivar\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FiUserCheck className=\"me-2\" />\r\n                    Activar\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Modal para eliminar usuario */}\r\n      <ConfirmModal\r\n        show={!!deletingUser}\r\n        onHide={() => setDeletingUser(null)}\r\n        onConfirm={confirmDelete}\r\n        title=\"Eliminar Usuario\"\r\n        message={`¿Estás seguro de que quieres eliminar al usuario ${deletingUser?.name} ${deletingUser?.apellido}?`}\r\n        confirmText=\"Eliminar\"\r\n        variant=\"danger\"\r\n        isLoading={deleteMutation.isLoading}\r\n        alertMessage=\"¡Advertencia! Esta acción es irreversible. Se eliminarán todos los datos asociados al usuario.\"\r\n        alertVariant=\"danger\"\r\n      />\r\n\r\n\r\n      {/* Alertas de éxito y error */}\r\n      {success && (\r\n        <div className=\"position-fixed top-0 end-0 p-3\" style={{ zIndex: 1050 }}>\r\n          <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>\r\n            {success}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"position-fixed top-0 end-0 p-3\" style={{ zIndex: 1050 }}>\r\n          <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\r\n            {error}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};"],"names":["emptyForm","ROLES","AREAS","Usuarios","showModal","setShowModal","useState","editingUser","setEditingUser","deletingUser","setDeletingUser","deactivatingUser","setDeactivatingUser","success","setSuccess","error","setError","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedRole","setSelectedRole","selectedArea","setSelectedArea","isSearching","setIsSearching","queryClient","useQueryClient","data","isLoading","refetch","useQuery","listUsers","statsData","statsLoading","getUserStats","handleMutationSuccess","message","handleSearch","searchValue","handleFilter","filters","createMutation","useMutation","createUser","updateMutation","id","userData","updateUser","deleteMutation","deleteUser","deactivateUserMutation","activateUserMutation","handleCreate","handleEdit","user","event","handleDelete","confirmDelete","handleSubmit","formData","handleDeactivateUser","confirmDeactivate","result","handleActivateUser","confirmActivate","getRoleBadgeColor","role","getRoleLabel","roleObj","r","columns","value","row","jsxs","jsx","Badge","Dropdown","FiMoreVertical","e","FiEdit","FiUserX","FiUserCheck","FiTrash2","formFields","stats","useMemo","users","u","Container","PageHeader","FiUsers","Button","FiPlus","Row","Col","StatsCard","FiShield","FiUser","FiSettings","Card","FiRefreshCw","DataTable","ModalForm","Modal","Alert","Fragment","Spinner","ConfirmModal"],"mappings":"m1BAWA,MAAMA,EAAY,CAAE,KAAM,GAAI,SAAU,GAAI,MAAO,GAAI,KAAM,qBAAsB,KAAM,YAAa,SAAU,EAAA,EAE1GC,EAAQ,CACZ,CAAE,MAAO,QAAS,MAAO,eAAA,EACzB,CAAE,MAAO,iBAAkB,MAAO,gBAAA,EAClC,CAAE,MAAO,qBAAsB,MAAO,oBAAA,EACtC,CAAE,MAAO,mBAAoB,MAAO,kBAAA,EACpC,CAAE,MAAO,sBAAuB,MAAO,qBAAA,EACvC,CAAE,MAAO,cAAe,MAAO,aAAA,EAE/B,CAAE,MAAO,UAAW,MAAO,SAAA,EAC3B,CAAE,MAAO,WAAY,MAAO,UAAA,CAC9B,EAEMC,GAAQ,CACZ,CAAE,MAAO,YAAa,MAAO,WAAA,EAC7B,CAAE,MAAO,cAAe,MAAO,aAAA,EAC/B,CAAE,MAAO,cAAe,MAAO,aAAA,EAC/B,CAAE,MAAO,WAAY,MAAO,UAAA,EAC5B,CAAE,MAAO,WAAY,MAAO,UAAA,EAC5B,CAAE,MAAO,UAAW,MAAO,SAAA,CAC7B,EAEA,SAAwBC,IAAW,CACjC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,IAAI,EAC7C,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,IAAI,EAE/C,CAACK,EAAkBC,CAAmB,EAAIN,EAAAA,SAAS,IAAI,EACvD,CAACO,EAASC,CAAU,EAAIR,EAAAA,SAAS,EAAE,EACnC,CAACS,EAAOC,CAAQ,EAAIV,EAAAA,SAAS,EAAE,EAG/B,CAACW,EAAaC,CAAc,EAAIZ,EAAAA,SAAS,CAAC,EAC1C,CAACa,EAAYC,CAAa,EAAId,EAAAA,SAAS,EAAE,EACzC,CAACe,EAAcC,CAAe,EAAIhB,EAAAA,SAAS,EAAE,EAC7C,CAACiB,EAAcC,CAAe,EAAIlB,EAAAA,SAAS,EAAE,EAC7C,CAACmB,GAAaC,CAAc,EAAIpB,EAAAA,SAAS,EAAK,EAE9CqB,EAAcC,GAAA,EAEd,CAAE,KAAAC,EAAM,UAAAC,EAAW,QAAAC,EAAA,EAAYC,EACnC,CAAC,QAASf,EAAaE,EAAYE,EAAcE,CAAY,EAC7D,IAAMU,GAAU,CACd,KAAMhB,EACN,MAAO,GACP,OAAQE,CAGV,CAAC,EACD,CACE,iBAAkB,GAClB,qBAAsB,GACtB,eAAgB,GAChB,UAAW,EACX,UAAW,CAAA,CACb,EAII,CAAE,KAAMe,EAAW,UAAWC,GAAiBH,EACnD,CAAC,WAAW,EACZI,GACA,CACE,qBAAsB,GACtB,eAAgB,GAChB,UAAW,IACX,UAAW,GAAA,CACb,EAGIC,EAAyBC,GAAY,CACzCX,EAAY,kBAAkB,OAAO,EACrCA,EAAY,kBAAkB,WAAW,EACzCtB,EAAa,EAAK,EAClBG,EAAe,IAAI,EACnBE,EAAgB,IAAI,CAEtB,EAGM6B,GAAgBC,GAAgB,CACpC,QAAQ,IAAI,8BAA+BA,CAAW,EACtDpB,EAAcoB,CAAW,EACzBtB,EAAe,CAAC,EAChBQ,EAAe,EAAI,EAGnB,WAAW,IAAMA,EAAe,EAAK,EAAG,GAAI,CAC9C,EAGMe,GAAgBC,GAAY,CAChC,QAAQ,IAAI,6BAA8BA,CAAO,EACjDpB,EAAgBoB,EAAQ,MAAQ,EAAE,EAClClB,EAAgBkB,EAAQ,MAAQ,EAAE,EAClCxB,EAAe,CAAC,CAClB,EAEMyB,EAAiBC,EAAYC,GAAY,CAC7C,UAAW,IAAMR,EAAmD,EACpE,QAAUtB,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAChE,EAEK+B,EAAiBF,EACrB,CAAC,CAAE,GAAAG,EAAI,GAAGC,KAAeC,EAAWF,EAAIC,CAAQ,EAChD,CACE,UAAW,IAAMX,EAAwD,EACzE,QAAUtB,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CACjE,EAGImC,EAAiBN,EAAYO,GAAY,CAC7C,UAAW,IAAMd,EAAsD,EACvE,QAAUtB,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAChE,EAIKqC,EAAyBR,EAC7B,CAAC,CAAE,GAAAG,EAAI,SAAAC,MACL,QAAQ,IAAI,uDAAwD,CAAE,GAAAD,EAAI,SAAAC,EAAU,EAC7EC,EAAWF,EAAIC,CAAQ,GAEhC,CACE,UAAYnB,GAAS,CACnB,QAAQ,IAAI,oCAAqCA,CAAI,EACrDf,EAAW,kCAAkC,EAC7CF,EAAoB,IAAI,EACxBe,EAAY,kBAAkB,OAAO,EACrCA,EAAY,kBAAkB,WAAW,CAC3C,EACA,QAAUZ,GAAU,CAClB,QAAQ,MAAM,oCAAqCA,CAAK,EACxDC,EAAS,iCAAmCD,EAAM,SAAW,oBAAoB,CACnF,CAAA,CACF,EAGIsC,EAAuBT,EAC3B,CAAC,CAAE,GAAAG,EAAI,SAAAC,KAAeC,EAAWF,EAAIC,CAAQ,EAC7C,CACE,UAAW,IAAM,CACflC,EAAW,+BAA+B,EAC1CF,EAAoB,IAAI,EACxBe,EAAY,kBAAkB,OAAO,EACrCA,EAAY,kBAAkB,WAAW,CAC3C,EACA,QAAUZ,GAAU,CAClBC,EAAS,8BAAgCD,EAAM,SAAW,oBAAoB,EAC9E,QAAQ,MAAM,yBAA0BA,CAAK,CAC/C,CAAA,CACF,EAIIuC,GAAe,IAAM,CACzB9C,EAAeR,CAAS,EACxBK,EAAa,EAAI,CACnB,EAEMkD,GAAa,CAACC,EAAMC,IAAU,CAClCA,GAAA,MAAAA,EAAO,kBACPjD,EAAegD,CAAI,EACnBnD,EAAa,EAAI,CACnB,EAEMqD,GAAe,CAACF,EAAMC,IAAU,CACpCA,GAAA,MAAAA,EAAO,kBACP/C,EAAgB8C,CAAI,CACtB,EAEMG,GAAgB,SAAY,CAChC,GAAI,CACF,QAAQ,IAAI,yCAA0ClD,EAAa,EAAE,EACrE,MAAMyC,EAAe,YAAYzC,EAAa,EAAE,EAChD,QAAQ,IAAI,kDAAkD,EAC9DC,EAAgB,IAAI,CACtB,OAASK,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CC,EAAS,8BAAgCD,EAAM,OAAO,EACtDL,EAAgB,IAAI,CACtB,CACF,EAIMkD,GAAe,MAAOC,GAAa,CACnCtD,EAAY,GACd,MAAMuC,EAAe,YAAY,CAAE,GAAIvC,EAAY,GAAI,GAAGsD,EAAU,EAEpE,MAAMlB,EAAe,YAAYkB,CAAQ,CAE7C,EAIMC,GAAuB,CAACN,EAAMC,IAAU,CAC5CA,GAAA,MAAAA,EAAO,kBACP7C,EAAoB4C,CAAI,CAC1B,EAEMO,GAAoB,SAAY,CACpC,GAAIpD,EAAkB,CACpB,QAAQ,IAAI,+CAAgDA,EAAiB,EAAE,EAC/E,GAAI,CACF,MAAMqD,EAAS,MAAMZ,EAAuB,YAAY,CACtD,GAAIzC,EAAiB,GACrB,SAAU,CAAE,OAAQ,EAAA,CAAM,CAC3B,EACD,QAAQ,IAAI,0DAA2DqD,CAAM,CAC/E,OAASjD,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CACrD,CACF,CACF,EAGMkD,GAAqB,CAACT,EAAMC,IAAU,CAC1CA,GAAA,MAAAA,EAAO,kBACP7C,EAAoB4C,CAAI,CAC1B,EAEMU,GAAkB,SAAY,CAC9BvD,GACF,MAAM0C,EAAqB,YAAY,CACrC,GAAI1C,EAAiB,GACrB,SAAU,CAAE,OAAQ,EAAA,CAAK,CAC1B,CAEL,EAEMwD,GAAqBC,IACV,CACb,MAAO,SACP,eAAgB,UAChB,mBAAoB,UACpB,iBAAkB,OAClB,oBAAqB,YACrB,YAAa,YACb,QAAS,UACT,SAAU,MAAA,GAEEA,CAAI,GAAK,YAGnBC,GAAgBD,GAAS,CAC7B,MAAME,EAAUrE,EAAM,KAAKsE,GAAKA,EAAE,QAAUH,CAAI,EAChD,OAAOE,EAAUA,EAAQ,MAAQF,CACnC,EAEMI,GAAU,CACd,CACE,OAAQ,KACR,SAAU,KACV,MAAO,MAAA,EAET,CACE,OAAQ,SACR,SAAU,OACV,OAAQ,CAACC,EAAOC,WACb,MAAA,CACC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,YAAa,SAAA,CAAAD,EAAI,KAAK,IAAEA,EAAI,QAAA,EAAS,EACpDE,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAc,WAAI,KAAA,CAAM,CAAA,CAAA,CAC3C,CAAA,EAGJ,CACE,OAAQ,MACR,SAAU,OACV,OAASH,GACPG,EAAAA,IAACC,EAAA,CAAM,GAAIV,GAAkBM,CAAK,EAAG,UAAU,eAC5C,SAAAJ,GAAaI,CAAK,CAAA,CACrB,CAAA,EAGJ,CACE,OAAQ,OACR,SAAU,OACV,OAASA,GACPG,MAACC,EAAA,CAAM,GAAG,QAAQ,KAAK,OAAO,UAAU,eACrC,SAAAJ,CAAA,CACH,CAAA,EAGJ,CACE,OAAQ,SACR,SAAU,SACV,OAAQ,CAACA,EAAOC,IACdE,EAAAA,IAACC,GAAM,GAAIJ,IAAU,GAAQ,UAAY,SAAU,UAAU,eAC1D,SAAAA,IAAU,GAAQ,SAAW,UAAA,CAChC,CAAA,EAGJ,CACE,OAAQ,iBACR,SAAU,aACV,KAAM,MAAA,EAER,CACE,OAAQ,WACR,SAAU,UACV,OAAQ,CAACA,EAAOC,WACbI,EAAA,CACC,SAAA,CAAAF,EAAAA,IAACE,EAAS,OAAT,CAAgB,QAAQ,oBAAoB,KAAK,KAAK,GAAI,YAAYJ,EAAI,EAAE,GAC3E,SAAAE,EAAAA,IAACG,KAAe,EAClB,EACAJ,EAAAA,KAACG,EAAS,KAAT,CACK,SAAA,CAAAH,EAAAA,KAACG,EAAS,KAAT,CAAc,QAAUE,GAAMzB,GAAWmB,EAAKM,CAAC,EAC9C,SAAA,CAAAJ,EAAAA,IAACK,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,gBAAA,EAE7B,EACJL,MAACE,EAAS,QAAT,EAAiB,EACjBJ,EAAI,SAAW,GACdC,EAAAA,KAACG,EAAS,KAAT,CAAc,QAAUE,GAAMlB,GAAqBY,EAAKM,CAAC,EAAG,UAAU,eACrE,SAAA,CAAAJ,EAAAA,IAACM,EAAA,CAAQ,UAAU,MAAA,CAAO,EAAE,oBAAA,CAAA,CAE9B,EAEAP,EAAAA,KAACG,EAAS,KAAT,CAAc,QAAUE,GAAMf,GAAmBS,EAAKM,CAAC,EAAG,UAAU,eACnE,SAAA,CAAAJ,EAAAA,IAACO,EAAA,CAAY,UAAU,MAAA,CAAO,EAAE,iBAAA,EAElC,EAEFR,EAAAA,KAACG,EAAS,KAAT,CAAc,QAAUE,GAAMtB,GAAagB,EAAKM,CAAC,EAAG,UAAU,cAC7D,SAAA,CAAAJ,EAAAA,IAACQ,GAAA,CAAS,UAAU,MAAA,CAAO,EAAE,kBAAA,CAAA,CAE/B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,EAGIC,GAAa,CACjB,CACE,KAAM,OACN,MAAO,SACP,KAAM,OACN,SAAU,GACV,YAAa,mBAAA,EAEf,CACE,KAAM,WACN,MAAO,WACP,KAAM,OACN,SAAU,GACV,YAAa,qBAAA,EAEf,CACE,KAAM,QACN,MAAO,QACP,KAAM,QACN,SAAU,GACV,YAAa,qBAAA,EAEf,CACE,KAAM,OACN,MAAO,MACP,KAAM,SACN,SAAU,GACV,QAASpF,CAAA,EAEX,CACE,KAAM,OACN,MAAO,OACP,KAAM,SACN,SAAU,GACV,QAASC,EAAA,EAEX,CACE,KAAM,WACN,MAAO,aACP,KAAM,WACN,SAAU,EAACK,GAAA,MAAAA,EAAa,IACxB,YAAa,sBACb,KAAMA,GAAA,MAAAA,EAAa,GAAK,iDAAmD,qBAAA,CAC7E,EAMI+E,EAAQC,EAAAA,QAAQ,IAAM,CAE1B,GAAIrD,EACF,eAAQ,IAAI,qDAAsDA,CAAS,EACpE,CACL,MAAOA,EAAU,OAAS,EAC1B,OAAQA,EAAU,QAAU,EAC5B,WAAYA,EAAU,YAAc,EACpC,YAAaA,EAAU,aAAe,EACtC,QAASA,EAAU,QAAU,CAAA,EAKjC,MAAMsD,GAAQ3D,GAAA,YAAAA,EAAM,OAAQ,CAAA,EAC5B,eAAQ,IAAI,uDAAwD2D,CAAK,EAClE,CACL,MAAOA,EAAM,OACb,OAAQA,EAAM,UAAYC,EAAE,OAAS,OAAO,EAAE,OAC9C,WAAYD,EAAM,UAAYC,EAAE,OAAS,oBAAoB,EAAE,OAC/D,YAAaD,EAAM,OAAOC,GAAK,CAAC,mBAAoB,qBAAqB,EAAE,SAASA,EAAE,IAAI,CAAC,EAAE,OAC7F,QAASD,EAAM,UAAYC,EAAE,SAAW,EAAK,EAAE,MAAA,CAEnD,EAAG,CAACvD,EAAWL,CAAI,CAAC,EAEpB,OACE+C,EAAAA,IAACc,IAAU,MAAK,GAAC,UAAU,OACzB,SAAAf,EAAAA,KAAC,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAAA,IAACe,GAAA,CACC,MAAM,sBACN,SAAS,2DACT,KAAMC,EACN,QACEjB,EAAAA,KAACkB,EAAA,CAAO,QAAQ,UAAU,QAASvC,GACjC,SAAA,CAAAsB,EAAAA,IAACkB,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,eAAA,CAAA,CAE7B,CAAA,CAAA,EAKJnB,EAAAA,KAACoB,GAAA,CAAI,UAAU,WACb,SAAA,CAAAnB,EAAAA,IAACoB,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAApB,EAAAA,IAACqB,EAAA,CACC,MAAM,iBACN,MAAOX,EAAM,MACb,KAAMM,EACN,MAAM,UACN,SAAS,uBACT,QAASzD,CAAA,CAAA,EAEb,EACAyC,EAAAA,IAACoB,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAApB,EAAAA,IAACqB,EAAA,CACC,MAAM,kBACN,MAAOX,EAAM,OACb,KAAMY,GACN,MAAM,SACN,SAAS,2BACT,QAAS/D,CAAA,CAAA,EAEb,EACAyC,EAAAA,IAACoB,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAApB,EAAAA,IAACqB,EAAA,CACC,MAAM,aACN,MAAOX,EAAM,WACb,KAAMa,GACN,MAAM,UACN,SAAS,mBACT,QAAShE,CAAA,CAAA,EAEb,EACAyC,EAAAA,IAACoB,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAApB,EAAAA,IAACqB,EAAA,CACC,MAAM,cACN,MAAOX,EAAM,YACb,KAAMc,GACN,MAAM,OACN,SAAS,mBACT,QAASjE,CAAA,CAAA,CACX,CACF,CAAA,EACF,EAGAwC,EAAAA,KAAC0B,EAAA,CAAK,UAAU,qBACd,SAAA,CAAAzB,EAAAA,IAACyB,EAAK,OAAL,CAAY,UAAU,yBACrB,SAAA1B,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,OACZ,SAAA,CAAAC,EAAAA,IAACgB,EAAA,CAAQ,UAAU,mBAAA,CAAoB,EAAE,mBAAA,EAE3C,EACAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAAA,IAACiB,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS,IAAM9D,GAAA,EACf,SAAUD,EACV,UAAU,cAEV,SAAA8C,EAAAA,IAAC0B,GAAA,CAAY,UAAWxE,EAAY,WAAa,EAAA,CAAI,CAAA,CAAA,SAEtD+C,EAAA,CAAM,GAAG,QAAQ,KAAK,OAAO,UAAU,YACrC,SAAA,CAAAS,EAAM,MAAM,WAAA,CAAA,CACf,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EACAV,EAAAA,IAACyB,EAAK,KAAL,CAAU,UAAU,MACnB,SAAAzB,EAAAA,IAAC2B,GAAA,CACC,MAAM1E,GAAA,YAAAA,EAAM,OAAQ,CAAA,EACpB,QAAA2C,GACA,QAAS1C,GAAaL,GACtB,aAAa,8BAEb,YAAYI,GAAA,YAAAA,EAAM,QAAS,EAC3B,aAAc,GACd,YAAAZ,EACA,aAAcC,EACd,SAAUqB,GACV,SAAUE,EAAA,CAAA,CACZ,CACF,CAAA,EACF,EAEFmC,EAAAA,IAAC4B,GAAA,CACC,KAAMpG,EACN,OAAQ,IAAMC,EAAa,EAAK,EAChC,MAAOE,GAAA,MAAAA,EAAa,GAAK,iBAAmB,gBAC5C,KAAMA,GAAeP,EACrB,OAAQqF,GACR,SAAUzB,GACV,QAASjB,EAAe,WAAaG,EAAe,UACpD,WAAYvC,GAAA,MAAAA,EAAa,GAAK,aAAe,OAAA,CAAA,EAM/CoE,EAAAA,KAAC8B,EAAA,CAAM,KAAM,CAAC,CAAC9F,EAAkB,OAAQ,IAAMC,EAAoB,IAAI,EAAG,SAAQ,GAChF,SAAA,CAAAgE,EAAAA,IAAC6B,EAAM,OAAN,CAAa,YAAW,GACvB,SAAA9B,OAAC8B,EAAM,MAAN,CACC,SAAA,CAAA7B,EAAAA,IAACM,EAAA,CAAQ,UAAU,mBAAA,CAAoB,GACtCvE,GAAA,YAAAA,EAAkB,UAAW,GAAQ,qBAAuB,iBAAA,CAAA,CAC/D,CAAA,CACF,EACAgE,EAAAA,KAAC8B,EAAM,KAAN,CACC,SAAA,CAAA9B,OAAC,IAAA,CAAE,SAAA,CAAA,iCAC6BhE,GAAA,YAAAA,EAAkB,UAAW,GAAQ,aAAe,UAAU,cAAY,WACvG,SAAA,CAAQ,SAAA,CAAAA,GAAA,YAAAA,EAAkB,KAAK,IAAEA,GAAA,YAAAA,EAAkB,QAAA,EAAS,EAAS,GAAA,EACxE,GACCA,GAAA,YAAAA,EAAkB,UAAW,GAC5BgE,EAAAA,KAAC+B,EAAA,CAAM,QAAQ,UACb,SAAA,CAAA9B,EAAAA,IAAC,UAAO,SAAA,OAAA,CAAK,EAAS,kFAAA,CAAA,CACxB,EAEAD,EAAAA,KAAC+B,EAAA,CAAM,QAAQ,OACb,SAAA,CAAA9B,EAAAA,IAAC,UAAO,SAAA,OAAA,CAAK,EAAS,8DAAA,CAAA,CACxB,CAAA,EAEJ,EACAD,EAAAA,KAAC8B,EAAM,OAAN,CACC,SAAA,CAAA7B,EAAAA,IAACiB,EAAA,CAAO,QAAQ,YAAY,QAAS,IAAMjF,EAAoB,IAAI,EAAG,SAAA,UAAA,CAEtE,EACAgE,EAAAA,IAACiB,EAAA,CACC,SAASlF,GAAA,YAAAA,EAAkB,UAAW,GAAQ,UAAY,UAC1D,SAASA,GAAA,YAAAA,EAAkB,UAAW,GAAQoD,GAAoBG,GAClE,UAAUvD,GAAA,YAAAA,EAAkB,UAAW,GAAQyC,EAAuB,UAAYC,EAAqB,UAErG,4BAAkB,UAAW,GAAQD,EAAuB,UAAYC,EAAqB,WAC7FsB,EAAAA,KAAAgC,EAAAA,SAAA,CACE,SAAA,CAAA/B,MAACgC,IAAQ,UAAU,SAAS,KAAK,KAAK,UAAU,OAAO,EAAE,eAAA,CAAA,CAE3D,EAEAhC,EAAAA,IAAA+B,EAAAA,SAAA,CACG,UAAAhG,GAAA,YAAAA,EAAkB,UAAW,GAC5BgE,EAAAA,KAAAgC,EAAAA,SAAA,CACE,SAAA,CAAA/B,EAAAA,IAACM,EAAA,CAAQ,UAAU,MAAA,CAAO,EAAE,YAAA,CAAA,CAE9B,EAEAP,EAAAA,KAAAgC,EAAAA,SAAA,CACE,SAAA,CAAA/B,EAAAA,IAACO,EAAA,CAAY,UAAU,MAAA,CAAO,EAAE,SAAA,CAAA,CAElC,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EACF,EAGAP,EAAAA,IAACiC,GAAA,CACC,KAAM,CAAC,CAACpG,EACR,OAAQ,IAAMC,EAAgB,IAAI,EAClC,UAAWiD,GACX,MAAM,mBACN,QAAS,oDAAoDlD,GAAA,YAAAA,EAAc,IAAI,IAAIA,GAAA,YAAAA,EAAc,QAAQ,IACzG,YAAY,WACZ,QAAQ,SACR,UAAWyC,EAAe,UAC1B,aAAa,iGACb,aAAa,QAAA,CAAA,EAKdrC,SACE,MAAA,CAAI,UAAU,iCAAiC,MAAO,CAAE,OAAQ,MAC/D,SAAA+D,EAAAA,IAAC8B,GAAM,QAAQ,UAAU,YAAW,GAAC,QAAS,IAAM5F,EAAW,EAAE,EAC9D,SAAAD,CAAA,CACH,CAAA,CACF,EAGDE,SACE,MAAA,CAAI,UAAU,iCAAiC,MAAO,CAAE,OAAQ,IAAA,EAC/D,SAAA6D,EAAAA,IAAC8B,GAAM,QAAQ,SAAS,YAAW,GAAC,QAAS,IAAM1F,EAAS,EAAE,EAC3D,SAAAD,CAAA,CACH,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CACF,CAEJ"}