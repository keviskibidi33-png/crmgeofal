{"version":3,"file":"Notificaciones-07Om0Rhh.js","sources":["../../src/pages/Notificaciones.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { Container, Row, Col, Card, Badge, Button, Alert, Spinner, Modal } from 'react-bootstrap';\r\nimport { FiBell, FiCheck, FiX, FiEye, FiTrash2 } from 'react-icons/fi';\r\nimport { getNotifications, markNotificationAsRead, markAllNotificationsAsRead, deleteNotification } from '../services/notifications';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst Notificaciones = () => {\r\n  const { user } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  const [selectedNotification, setSelectedNotification] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Obtener todas las notificaciones\r\n  const { data: notifications, isLoading, error } = useQuery(\r\n    ['notifications-all', user?.id],\r\n    () => getNotifications({ limit: 50, unreadOnly: false }),\r\n    {\r\n      enabled: !!user,\r\n      refetchInterval: 30000, // Refrescar cada 30 segundos\r\n    }\r\n  );\r\n\r\n  // Mutaci√≥n para marcar como le√≠da\r\n  const markAsReadMutation = useMutation(markNotificationAsRead, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['notifications-all']);\r\n      queryClient.invalidateQueries(['notifications']);\r\n      queryClient.invalidateQueries(['notificationStats']);\r\n    }\r\n  });\r\n\r\n  // Mutaci√≥n para marcar todas como le√≠das\r\n  const markAllAsReadMutation = useMutation(markAllNotificationsAsRead, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['notifications-all']);\r\n      queryClient.invalidateQueries(['notifications']);\r\n      queryClient.invalidateQueries(['notificationStats']);\r\n    }\r\n  });\r\n\r\n  // Mutaci√≥n para eliminar notificaci√≥n\r\n  const deleteMutation = useMutation(deleteNotification, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['notifications-all']);\r\n      queryClient.invalidateQueries(['notifications']);\r\n      queryClient.invalidateQueries(['notificationStats']);\r\n    }\r\n  });\r\n\r\n  const handleMarkAsRead = (notificationId) => {\r\n    markAsReadMutation.mutate(notificationId);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    markAllAsReadMutation.mutate();\r\n  };\r\n\r\n  const handleDelete = (notificationId) => {\r\n    if (window.confirm('¬øEst√°s seguro de que quieres eliminar esta notificaci√≥n?')) {\r\n      deleteMutation.mutate(notificationId);\r\n    }\r\n  };\r\n\r\n  const handleViewNotification = (notification) => {\r\n    setSelectedNotification(notification);\r\n    setShowModal(true);\r\n    \r\n    // Marcar como le√≠da si no lo est√°\r\n    if (!notification.read_at) {\r\n      handleMarkAsRead(notification.id);\r\n    }\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    const icons = {\r\n      payment_proof_uploaded: 'üí∞',\r\n      payment_proof_approved: '‚úÖ',\r\n      payment_proof_rejected: '‚ùå',\r\n      quote_created: 'üìÑ',\r\n      quote_approved: '‚úÖ',\r\n      quote_rejected: '‚ùå',\r\n      project_created: 'üèóÔ∏è',\r\n      project_updated: 'üîÑ',\r\n      ticket_created: 'üé´',\r\n      ticket_updated: 'üîÑ',\r\n      system_update: 'üÜï'\r\n    };\r\n    return icons[type] || 'üîî';\r\n  };\r\n\r\n  const getNotificationColor = (type) => {\r\n    const colors = {\r\n      payment_proof_uploaded: 'primary',\r\n      payment_proof_approved: 'success',\r\n      payment_proof_rejected: 'danger',\r\n      quote_created: 'info',\r\n      quote_approved: 'success',\r\n      quote_rejected: 'danger',\r\n      project_created: 'primary',\r\n      project_updated: 'info',\r\n      ticket_created: 'warning',\r\n      ticket_updated: 'info',\r\n      system_update: 'secondary'\r\n    };\r\n    return colors[type] || 'secondary';\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Ahora';\r\n    if (diffInMinutes < 60) return `Hace ${diffInMinutes} min`;\r\n    \r\n    const diffInHours = Math.floor(diffInMinutes / 60);\r\n    if (diffInHours < 24) return `Hace ${diffInHours} h`;\r\n    \r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) return `Hace ${diffInDays} d√≠as`;\r\n    \r\n    return date.toLocaleDateString('es-ES', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" />\r\n          <p className=\"mt-2\">Cargando notificaciones...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          Error al cargar las notificaciones: {error.message}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const unreadCount = notifications?.filter(n => !n.read_at).length || 0;\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2 className=\"mb-0\">\r\n              <FiBell className=\"me-2\" />\r\n              Notificaciones\r\n            </h2>\r\n            <div className=\"d-flex gap-2\">\r\n              {unreadCount > 0 && (\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  size=\"sm\"\r\n                  onClick={handleMarkAllAsRead}\r\n                  disabled={markAllAsReadMutation.isLoading}\r\n                >\r\n                  <FiCheck className=\"me-1\" />\r\n                  Marcar todas como le√≠das\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {notifications?.length === 0 ? (\r\n            <Card>\r\n              <Card.Body className=\"text-center py-5\">\r\n                <FiBell size={48} className=\"text-muted mb-3\" />\r\n                <h5 className=\"text-muted\">No hay notificaciones</h5>\r\n                <p className=\"text-muted\">Cuando recibas notificaciones, aparecer√°n aqu√≠.</p>\r\n              </Card.Body>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"notification-list\">\r\n              {notifications?.map((notification) => (\r\n                <Card \r\n                  key={notification.id} \r\n                  className={`mb-3 ${!notification.read_at ? 'border-primary' : ''}`}\r\n                >\r\n                  <Card.Body>\r\n                    <div className=\"d-flex align-items-start\">\r\n                      <div className=\"me-3\">\r\n                        <span className=\"fs-4\">{getNotificationIcon(notification.type)}</span>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex-grow-1\">\r\n                        <div className=\"d-flex justify-content-between align-items-start mb-2\">\r\n                          <div>\r\n                            <h6 className=\"mb-1\">\r\n                              {notification.title}\r\n                              {!notification.read_at && (\r\n                                <Badge bg=\"primary\" className=\"ms-2\">Nueva</Badge>\r\n                              )}\r\n                            </h6>\r\n                            <p className=\"text-muted mb-2\">{notification.message}</p>\r\n                          </div>\r\n                          \r\n                          <div className=\"text-end\">\r\n                            <small className=\"text-muted\">\r\n                              {formatDate(notification.created_at)}\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex gap-2\">\r\n                          <Button\r\n                            variant=\"outline-primary\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleViewNotification(notification)}\r\n                          >\r\n                            <FiEye className=\"me-1\" />\r\n                            Ver detalles\r\n                          </Button>\r\n                          \r\n                          {!notification.read_at && (\r\n                            <Button\r\n                              variant=\"outline-success\"\r\n                              size=\"sm\"\r\n                              onClick={() => handleMarkAsRead(notification.id)}\r\n                              disabled={markAsReadMutation.isLoading}\r\n                            >\r\n                              <FiCheck className=\"me-1\" />\r\n                              Marcar como le√≠da\r\n                            </Button>\r\n                          )}\r\n                          \r\n                          <Button\r\n                            variant=\"outline-danger\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleDelete(notification.id)}\r\n                            disabled={deleteMutation.isLoading}\r\n                          >\r\n                            <FiTrash2 className=\"me-1\" />\r\n                            Eliminar\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modal para ver detalles de la notificaci√≥n */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {selectedNotification && getNotificationIcon(selectedNotification.type)} \r\n            {selectedNotification?.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedNotification && (\r\n            <div>\r\n              <p><strong>Mensaje:</strong></p>\r\n              <p className=\"mb-3\">{selectedNotification.message}</p>\r\n              \r\n              {selectedNotification.data && (\r\n                <div>\r\n                  <p><strong>Datos adicionales:</strong></p>\r\n                  <pre className=\"bg-light p-3 rounded\">\r\n                    {JSON.stringify(selectedNotification.data, null, 2)}\r\n                  </pre>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <p><strong>Tipo:</strong> {selectedNotification.type}</p>\r\n                  <p><strong>Prioridad:</strong> {selectedNotification.priority}</p>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <p><strong>Fecha:</strong> {new Date(selectedNotification.created_at).toLocaleString('es-ES')}</p>\r\n                  <p><strong>Estado:</strong> {selectedNotification.read_at ? 'Le√≠da' : 'No le√≠da'}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notificaciones;\r\n"],"names":["Notificaciones","user","useAuth","queryClient","useQueryClient","selectedNotification","setSelectedNotification","useState","showModal","setShowModal","notifications","isLoading","error","useQuery","getNotifications","markAsReadMutation","useMutation","markNotificationAsRead","markAllAsReadMutation","markAllNotificationsAsRead","deleteMutation","deleteNotification","handleMarkAsRead","notificationId","handleMarkAllAsRead","handleDelete","handleViewNotification","notification","getNotificationIcon","type","formatDate","dateString","date","diffInMinutes","diffInHours","diffInDays","Container","jsxs","jsx","Spinner","Alert","unreadCount","n","Row","Col","FiBell","Button","FiCheck","Card","Badge","FiEye","FiTrash2","Modal"],"mappings":"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"}