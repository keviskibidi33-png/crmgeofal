{"version":3,"file":"CommercialManager-xQwnwnDO.js","sources":["../../src/services/exportService.js","../../src/components/ClientEditModal.jsx","../../src/components/ClientCreateModal.jsx","../../src/pages/CommercialManager.jsx"],"sourcesContent":["import apiFetch from './api';\r\n\r\nconst exportService = {\r\n  /**\r\n   * Exportar clientes a CSV\r\n   */\r\n  async exportClientsCSV(filters = {}) {\r\n    try {\r\n      console.log('üìä Exportando clientes a CSV...');\r\n      \r\n      const response = await fetch('/api/export/clients/csv', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ filters })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al exportar CSV');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `clientes_${new Date().toISOString().split('T')[0]}.csv`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log('‚úÖ CSV exportado exitosamente');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('‚ùå Error exportando CSV:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Exportar clientes a JSON\r\n   */\r\n  async exportClientsJSON(filters = {}) {\r\n    try {\r\n      console.log('üìä Exportando clientes a JSON...');\r\n      \r\n      const response = await fetch('/api/export/clients/json', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ filters })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al exportar JSON');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `clientes_${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log('‚úÖ JSON exportado exitosamente');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('‚ùå Error exportando JSON:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener estad√≠sticas para exportaci√≥n\r\n   */\r\n  async getExportStats(filters = {}) {\r\n    try {\r\n      console.log('üìä Obteniendo estad√≠sticas de exportaci√≥n...');\r\n      const response = await apiFetch('/api/export/clients/stats', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ filters })\r\n      });\r\n      console.log('‚úÖ Estad√≠sticas obtenidas:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Error obteniendo estad√≠sticas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default exportService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Button, Row, Col, Alert, Spinner } from 'react-bootstrap';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { FiSave, FiX, FiUser, FiMail, FiPhone, FiMapPin, FiHome, FiActivity } from 'react-icons/fi';\r\nimport { updateCompany, getCompanyById } from '../services/companies';\r\nimport { listUsers } from '../services/users';\r\n\r\nconst ClientEditModal = ({ show, onHide, clientId, clientName, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    ruc: '',\r\n    contact_name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    sector: '',\r\n    priority: 'normal',\r\n    status: 'prospeccion',\r\n    assigned_user_id: null,\r\n    actividad: '',\r\n    servicios: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  const queryClient = useQueryClient();\r\n\r\n  // Resetear formulario cuando se cierre el modal\r\n  React.useEffect(() => {\r\n    if (!show) {\r\n      setFormData({\r\n        name: '',\r\n        ruc: '',\r\n        contact_name: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        city: '',\r\n        sector: '',\r\n        priority: 'normal',\r\n        status: 'prospeccion',\r\n        assigned_user_id: null,\r\n        actividad: '',\r\n        servicios: ''\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [show]);\r\n\r\n  // Obtener datos del cliente\r\n  const { data: clientData, isLoading: isLoadingClient } = useQuery(\r\n    ['client', clientId],\r\n    () => getCompanyById(clientId),\r\n    {\r\n      enabled: !!clientId && show,\r\n      staleTime: 0, // No usar cache, siempre obtener datos frescos\r\n      cacheTime: 0, // No mantener en cache\r\n      onSuccess: (data) => {\r\n        console.log('üìã ClientEditModal - Datos recibidos:', data);\r\n        if (data) {\r\n          // Manejar diferentes formatos de respuesta\r\n          const clientInfo = data.data || data.company || data;\r\n          console.log('üìã ClientEditModal - Datos procesados:', clientInfo);\r\n          console.log('üìã ClientEditModal - Prioridad recibida:', clientInfo.priority);\r\n          \r\n          setFormData({\r\n            name: clientInfo.name || '',\r\n            ruc: clientInfo.ruc || '',\r\n            contact_name: clientInfo.contact_name || '',\r\n            email: clientInfo.email || '',\r\n            phone: clientInfo.phone || '',\r\n            address: clientInfo.address || '',\r\n            city: clientInfo.city || '',\r\n            sector: clientInfo.sector || '',\r\n            priority: clientInfo.priority || 'normal',\r\n            status: clientInfo.status || 'prospeccion',\r\n            assigned_user_id: clientInfo.assigned_user_id || null,\r\n            actividad: clientInfo.actividad || '',\r\n            servicios: clientInfo.servicios || ''\r\n          });\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        console.error('‚ùå ClientEditModal - Error cargando cliente:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Obtener lista de usuarios para asignaci√≥n\r\n  const { data: usersData, isLoading: isLoadingUsers } = useQuery(\r\n    ['users'],\r\n    () => listUsers(),\r\n    {\r\n      enabled: show\r\n    }\r\n  );\r\n\r\n  const users = usersData?.users || [];\r\n\r\n  // Mutaci√≥n para actualizar cliente\r\n  const updateClientMutation = useMutation(\r\n    (data) => updateCompany(clientId, data),\r\n    {\r\n      onSuccess: (data) => {\r\n        // Invalidar cache espec√≠fico del cliente\r\n        queryClient.invalidateQueries(['client', clientId]);\r\n        queryClient.removeQueries(['client', clientId]); // Remover completamente del cache\r\n        queryClient.invalidateQueries(['commercial-clients']);\r\n        queryClient.invalidateQueries(['commercial-clients-with-totals']);\r\n        \r\n        // Forzar refetch inmediato de las queries principales\r\n        queryClient.refetchQueries(['commercial-clients-with-totals']);\r\n        queryClient.refetchQueries(['clients']);\r\n        \r\n        if (onSuccess) {\r\n          onSuccess(data);\r\n        }\r\n        onHide();\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error actualizando cliente:', error);\r\n        alert('‚ùå Error al actualizar cliente');\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Limpiar error del campo\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'El nombre del cliente es requerido';\r\n    }\r\n    \r\n    if (!formData.contact_name.trim()) {\r\n      newErrors.contact_name = 'El nombre de contacto es requerido';\r\n    }\r\n    \r\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'El email no es v√°lido';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      await updateClientMutation.mutateAsync(formData);\r\n    } catch (error) {\r\n      console.error('Error en submit:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      name: '',\r\n      ruc: '',\r\n      contact_name: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      city: '',\r\n      sector: '',\r\n      status: 'prospeccion',\r\n      assigned_user_id: null,\r\n      actividad: '',\r\n      servicios: ''\r\n    });\r\n    setErrors({});\r\n    onHide();\r\n  };\r\n\r\n  const statusOptions = [\r\n    { value: 'prospeccion', label: 'Prospecci√≥n' },\r\n    { value: 'contactado', label: 'Contactado' },\r\n    { value: 'no_contesto', label: 'No contest√≥' },\r\n    { value: 'interesado', label: 'Interesado' },\r\n    { value: 'pendiente_cotizacion', label: 'Pendiente Cotizaci√≥n' },\r\n    { value: 'cotizacion_enviada', label: 'Cotizaci√≥n Enviada' },\r\n    { value: 'negociacion', label: 'Negociaci√≥n' },\r\n    { value: 'ganado', label: 'Ganado' },\r\n    { value: 'perdido', label: 'Perdido' }\r\n  ];\r\n\r\n  if (isLoadingClient) {\r\n    return (\r\n      <Modal show={show} onHide={onHide} size=\"lg\">\r\n        <Modal.Body className=\"text-center py-5\">\r\n          <Spinner animation=\"border\" />\r\n          <p className=\"mt-3\">Cargando datos del cliente...</p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <FiUser className=\"me-2\" />\r\n          Editar Cliente: {clientName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          {Object.keys(errors).length > 0 && (\r\n            <Alert variant=\"danger\">\r\n              <strong>Por favor corrige los siguientes errores:</strong>\r\n              <ul className=\"mb-0 mt-2\">\r\n                {Object.entries(errors).map(([field, error]) => (\r\n                  <li key={field}>{error}</li>\r\n                ))}\r\n              </ul>\r\n            </Alert>\r\n          )}\r\n          \r\n          <Row className=\"g-3\">\r\n            {/* Informaci√≥n B√°sica */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiHome className=\"me-2\" />\r\n                Informaci√≥n B√°sica\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Nombre del Cliente *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.name}\r\n                  placeholder=\"Nombre de la empresa\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>RUC</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"ruc\"\r\n                  value={formData.ruc}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"RUC de la empresa\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Informaci√≥n de Contacto */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiUser className=\"me-2\" />\r\n                Informaci√≥n de Contacto\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Nombre de Contacto *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"contact_name\"\r\n                  value={formData.contact_name}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.contact_name}\r\n                  placeholder=\"Nombre del contacto principal\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.contact_name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.email}\r\n                  placeholder=\"email@empresa.com\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Tel√©fono</Form.Label>\r\n                <Form.Control\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"+51 999 999 999\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Ciudad</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Ciudad\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Direcci√≥n</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  value={formData.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Direcci√≥n completa\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Informaci√≥n Comercial */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiActivity className=\"me-2\" />\r\n                Informaci√≥n Comercial\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Estado</Form.Label>\r\n                <Form.Select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  {statusOptions.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Asignado a</Form.Label>\r\n                <Form.Select\r\n                  name=\"assigned_user_id\"\r\n                  value={formData.assigned_user_id || ''}\r\n                  onChange={handleInputChange}\r\n                  disabled={isLoadingUsers}\r\n                >\r\n                  <option value=\"\">Sin asignar</option>\r\n                  {users.map(user => (\r\n                    <option key={user.id} value={user.id}>\r\n                      {user.name} ({user.role})\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Sector</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"sector\"\r\n                  value={formData.sector}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Sector de la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Ejemplo: Laboratorio, Construcci√≥n, Miner√≠a, etc.\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Prioridad</Form.Label>\r\n                <Form.Select\r\n                  name=\"priority\"\r\n                  value={formData.priority}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"urgent\">URGENTE</option>\r\n                  <option value=\"high\">ALTA</option>\r\n                  <option value=\"normal\">NORMAL</option>\r\n                  <option value=\"low\">BAJA</option>\r\n                </Form.Select>\r\n                <Form.Text className=\"text-muted\">\r\n                  Nivel de prioridad del cliente\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Actividad y Servicios */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiActivity className=\"me-2\" />\r\n                Actividad y Servicios\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Actividad Principal</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"actividad\"\r\n                  value={formData.actividad}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe la actividad principal de la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Describe brevemente a qu√© se dedica la empresa\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Servicios</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"servicios\"\r\n                  value={formData.servicios}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe los servicios que ofrece o requiere la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Lista los servicios que ofrece o que necesita la empresa\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose} disabled={isSubmitting}>\r\n            <FiX className=\"me-1\" />\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            variant=\"primary\" \r\n            type=\"submit\" \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"me-1\" />\r\n                Guardando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiSave className=\"me-1\" />\r\n                Guardar Cambios\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientEditModal;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Form, Button, Row, Col, Alert, Spinner } from 'react-bootstrap';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { FiSave, FiX, FiUser, FiMail, FiPhone, FiMapPin, FiHome, FiActivity, FiPlus } from 'react-icons/fi';\r\nimport { createCompany } from '../services/companies';\r\nimport { listUsers } from '../services/users';\r\n\r\nconst ClientCreateModal = ({ show, onHide, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    ruc: '',\r\n    contact_name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    sector: '',\r\n    priority: 'normal',\r\n    status: 'prospeccion',\r\n    assigned_user_id: null,\r\n    actividad: '',\r\n    servicios: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  const queryClient = useQueryClient();\r\n\r\n  // Obtener lista de usuarios para asignaci√≥n\r\n  const { data: usersData, isLoading: isLoadingUsers } = useQuery(\r\n    ['users'],\r\n    () => listUsers(),\r\n    {\r\n      enabled: show\r\n    }\r\n  );\r\n\r\n  const users = usersData?.users || [];\r\n\r\n  // Mutaci√≥n para crear cliente\r\n  const createClientMutation = useMutation(\r\n    (data) => createCompany(data),\r\n    {\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries(['commercial-clients']);\r\n        queryClient.invalidateQueries(['commercial-clients-with-totals']);\r\n        if (onSuccess) {\r\n          onSuccess(data);\r\n        }\r\n        handleClose();\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error creando cliente:', error);\r\n        alert('‚ùå Error al crear cliente');\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Limpiar error del campo\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'El nombre del cliente es requerido';\r\n    }\r\n    \r\n    if (!formData.contact_name.trim()) {\r\n      newErrors.contact_name = 'El nombre de contacto es requerido';\r\n    }\r\n    \r\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'El email no es v√°lido';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      await createClientMutation.mutateAsync(formData);\r\n    } catch (error) {\r\n      console.error('Error en submit:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      name: '',\r\n      ruc: '',\r\n      contact_name: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      city: '',\r\n      sector: '',\r\n      status: 'prospeccion',\r\n      assigned_user_id: null,\r\n      actividad: '',\r\n      servicios: ''\r\n    });\r\n    setErrors({});\r\n    onHide();\r\n  };\r\n\r\n  const statusOptions = [\r\n    { value: 'prospeccion', label: 'Prospecci√≥n' },\r\n    { value: 'interesado', label: 'Interesado' },\r\n    { value: 'pendiente_cotizacion', label: 'Pendiente Cotizaci√≥n' },\r\n    { value: 'cotizacion_enviada', label: 'Cotizaci√≥n Enviada' },\r\n    { value: 'negociacion', label: 'Negociaci√≥n' },\r\n    { value: 'ganado', label: 'Ganado' },\r\n    { value: 'perdido', label: 'Perdido' }\r\n  ];\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <FiPlus className=\"me-2\" />\r\n          Crear Nuevo Cliente\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          {Object.keys(errors).length > 0 && (\r\n            <Alert variant=\"danger\">\r\n              <strong>Por favor corrige los siguientes errores:</strong>\r\n              <ul className=\"mb-0 mt-2\">\r\n                {Object.entries(errors).map(([field, error]) => (\r\n                  <li key={field}>{error}</li>\r\n                ))}\r\n              </ul>\r\n            </Alert>\r\n          )}\r\n          \r\n          <Row className=\"g-3\">\r\n            {/* Informaci√≥n B√°sica */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiHome className=\"me-2\" />\r\n                Informaci√≥n B√°sica\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Nombre del Cliente *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.name}\r\n                  placeholder=\"Nombre de la empresa\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>RUC</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"ruc\"\r\n                  value={formData.ruc}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"RUC de la empresa\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Informaci√≥n de Contacto */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiUser className=\"me-2\" />\r\n                Informaci√≥n de Contacto\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Nombre de Contacto *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"contact_name\"\r\n                  value={formData.contact_name}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.contact_name}\r\n                  placeholder=\"Nombre del contacto principal\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.contact_name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.email}\r\n                  placeholder=\"email@empresa.com\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Tel√©fono</Form.Label>\r\n                <Form.Control\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"+51 999 999 999\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Ciudad</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Ciudad\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Direcci√≥n</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  value={formData.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Direcci√≥n completa\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Informaci√≥n Comercial */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiActivity className=\"me-2\" />\r\n                Informaci√≥n Comercial\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Estado</Form.Label>\r\n                <Form.Select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  {statusOptions.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Asignado a</Form.Label>\r\n                <Form.Select\r\n                  name=\"assigned_user_id\"\r\n                  value={formData.assigned_user_id || ''}\r\n                  onChange={handleInputChange}\r\n                  disabled={isLoadingUsers}\r\n                >\r\n                  <option value=\"\">Sin asignar</option>\r\n                  {users.map(user => (\r\n                    <option key={user.id} value={user.id}>\r\n                      {user.name} ({user.role})\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Sector</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"sector\"\r\n                  value={formData.sector}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Sector de la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Ejemplo: Laboratorio, Construcci√≥n, Miner√≠a, etc.\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={6}>\r\n              <Form.Group>\r\n                <Form.Label>Prioridad</Form.Label>\r\n                <Form.Select\r\n                  name=\"priority\"\r\n                  value={formData.priority}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"urgent\">URGENTE</option>\r\n                  <option value=\"high\">ALTA</option>\r\n                  <option value=\"normal\">NORMAL</option>\r\n                  <option value=\"low\">BAJA</option>\r\n                </Form.Select>\r\n                <Form.Text className=\"text-muted\">\r\n                  Nivel de prioridad del cliente\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            {/* Actividad y Servicios */}\r\n            <Col md={12}>\r\n              <h6 className=\"text-primary mb-3 mt-4\">\r\n                <FiActivity className=\"me-2\" />\r\n                Actividad y Servicios\r\n              </h6>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Actividad Principal</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"actividad\"\r\n                  value={formData.actividad}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe la actividad principal de la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Describe brevemente a qu√© se dedica la empresa\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n              <Form.Group>\r\n                <Form.Label>Servicios</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"servicios\"\r\n                  value={formData.servicios}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe los servicios que ofrece o requiere la empresa\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Lista los servicios que ofrece o que necesita la empresa\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose} disabled={isSubmitting}>\r\n            <FiX className=\"me-1\" />\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            variant=\"success\" \r\n            type=\"submit\" \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"me-1\" />\r\n                Creando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiSave className=\"me-1\" />\r\n                Crear Cliente\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientCreateModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Table, Badge, Button, Form, InputGroup, Alert, Spinner, Dropdown } from 'react-bootstrap';\r\nimport { useQuery, useQueryClient } from 'react-query';\r\nimport { \r\n  FiUsers, FiTrendingUp, FiDollarSign, FiCalendar, \r\n  FiSearch, FiFilter, FiDownload, FiEye, FiMessageSquare,\r\n  FiUser, FiMail, FiPhone, FiMapPin, FiHome, FiActivity,\r\n  FiFileText, FiDatabase, FiChevronDown, FiRefreshCw\r\n} from 'react-icons/fi';\r\nimport { listCompanies, listCompaniesWithTotals, getCompanyStats } from '../services/companies';\r\nimport exportService from '../services/exportService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport RequireRole from '../components/RequireRole';\r\nimport ClientHistoryModal from '../components/ClientHistoryModal';\r\nimport ClientEditModal from '../components/ClientEditModal';\r\nimport ClientSuccessModal from '../components/ClientSuccessModal';\r\nimport ClientCreateModal from '../components/ClientCreateModal';\r\nimport ClientStatusDropdown from '../components/ClientStatusDropdown';\r\nimport './CommercialManager.css';\r\n\r\n// Funci√≥n para limpiar el sector para mostrar (sin prioridad embebida)\r\nconst cleanSectorForDisplay = (sector) => {\r\n  if (!sector) return 'General';\r\n  // Limpiar cualquier prioridad embebida que pueda quedar\r\n  return sector.replace(/\\s*\\[PRIORIDAD:\\s*\\w+\\]/g, '').replace(/\\s*\\[URG\\]/g, '').replace(/\\s*\\[ALTA\\]/g, '').replace(/\\s*\\[BAJA\\]/g, '').trim() || 'General';\r\n};\r\n\r\n// Configuraci√≥n de prioridades\r\nconst PRIORITY_CONFIG = {\r\n  urgent: { label: 'URGENTE', variant: 'danger', icon: FiActivity },\r\n  high: { label: 'ALTA', variant: 'warning', icon: FiTrendingUp },\r\n  normal: { label: 'NORMAL', variant: 'info', icon: FiUser },\r\n  low: { label: 'BAJA', variant: 'secondary', icon: FiCalendar }\r\n};\r\n\r\n// Configuraci√≥n de estados\r\nconst STATUS_CONFIG = {\r\n  prospeccion: { label: 'Prospecci√≥n', variant: 'primary' },\r\n  contactado: { label: 'Contactado', variant: 'info' },\r\n  no_contesto: { label: 'No contest√≥', variant: 'warning' },\r\n  interesado: { label: 'Interesado', variant: 'info' },\r\n  pendiente_cotizacion: { label: 'Pendiente Cotizaci√≥n', variant: 'warning' },\r\n  cotizacion_enviada: { label: 'Cotizaci√≥n Enviada', variant: 'secondary' },\r\n  negociacion: { label: 'Negociaci√≥n', variant: 'warning' },\r\n  ganado: { label: 'Ganado', variant: 'success' },\r\n  perdido: { label: 'Perdido', variant: 'danger' }\r\n};\r\n\r\nconst CommercialManager = () => {\r\n  const { user } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  \r\n  // Estados para filtros y paginaci√≥n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [selectedPriority, setSelectedPriority] = useState('');\r\n  const [selectedSector, setSelectedSector] = useState('');\r\n  const [sortBy, setSortBy] = useState('created_at');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportType, setExportType] = useState('');\r\n  \r\n  // Estados para modales\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  \r\n  // Estados para modal de √©xito\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successClientData, setSuccessClientData] = useState(null);\r\n  const [isEditSuccess, setIsEditSuccess] = useState(false);\r\n\r\n  // Consulta principal de clientes con totales\r\n  const { data, isLoading, error, refetch } = useQuery(\r\n    ['commercial-clients-with-totals', currentPage, searchTerm, selectedStatus, selectedPriority, selectedSector, sortBy, sortOrder],\r\n    () => listCompaniesWithTotals({ \r\n      page: currentPage, \r\n      limit: 50, \r\n      search: searchTerm,\r\n      status: selectedStatus,\r\n      priority: selectedPriority,\r\n      sector: selectedSector,\r\n      sortBy,\r\n      sortOrder\r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: true,\r\n      staleTime: 0 // No usar cache, siempre obtener datos frescos\r\n    }\r\n  );\r\n\r\n  const clients = data?.data || [];\r\n  const totalPages = data?.totalPages || 1;\r\n  const totalClients = data?.total || 0;\r\n\r\n  // Consulta para obtener estad√≠sticas globales\r\n  const { data: statsData, isLoading: isLoadingStats } = useQuery(\r\n    ['company-stats'],\r\n    () => getCompanyStats(),\r\n    {\r\n      staleTime: 60000, // 1 minuto\r\n      onError: (error) => {\r\n        console.error('Error cargando estad√≠sticas:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Estad√≠sticas calculadas - usar datos globales del backend\r\n  const stats = React.useMemo(() => {\r\n    // Usar estad√≠sticas reales del backend si est√°n disponibles\r\n    if (statsData && statsData.data) {\r\n      console.log('üìä Stats - Usando estad√≠sticas reales del backend:', statsData);\r\n      return {\r\n        total: statsData.data.total || 0,\r\n        byStatus: statsData.data.byStatus || {},\r\n        byPriority: statsData.data.byPriority || {},\r\n        bySector: statsData.data.bySector || {}\r\n      };\r\n    }\r\n    \r\n    // Fallback: calcular desde los datos de la p√°gina actual\r\n    if (!clients.length) return { total: 0, byStatus: {}, byPriority: {}, bySector: {} };\r\n    \r\n    const byStatus = {};\r\n    const byPriority = {};\r\n    const bySector = {};\r\n    \r\n    clients.forEach(client => {\r\n      // Por estado\r\n      byStatus[client.status] = (byStatus[client.status] || 0) + 1;\r\n      \r\n      // Por prioridad\r\n      const priority = client.priority || 'normal'; // Usar el campo priority de la base de datos\r\n      byPriority[priority] = (byPriority[priority] || 0) + 1;\r\n      \r\n      // Por sector\r\n      const cleanSector = cleanSectorForDisplay(client.sector);\r\n      bySector[cleanSector] = (bySector[cleanSector] || 0) + 1;\r\n    });\r\n    \r\n    return {\r\n      total: clients.length,\r\n      byStatus,\r\n      byPriority,\r\n      bySector\r\n    };\r\n  }, [statsData, clients]);\r\n\r\n  // Funci√≥n para manejar el ordenamiento\r\n  const handleSort = (field) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  // Funci√≥n para limpiar filtros\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedStatus('');\r\n    setSelectedPriority('');\r\n    setSelectedSector('');\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Funci√≥n para exportar datos\r\n  const handleExport = async (type) => {\r\n    try {\r\n      setIsExporting(true);\r\n      setExportType(type);\r\n      \r\n      const filters = {\r\n        search: searchTerm,\r\n        status: selectedStatus,\r\n        sector: selectedSector,\r\n        sortBy,\r\n        sortOrder\r\n      };\r\n      \r\n      if (type === 'csv') {\r\n        await exportService.exportClientsCSV(filters);\r\n      } else if (type === 'json') {\r\n        await exportService.exportClientsJSON(filters);\r\n      }\r\n      \r\n      alert(`‚úÖ Datos exportados exitosamente en formato ${type.toUpperCase()}`);\r\n    } catch (error) {\r\n      console.error('Error en exportaci√≥n:', error);\r\n      alert(`‚ùå Error al exportar datos: ${error.message}`);\r\n    } finally {\r\n      setIsExporting(false);\r\n      setExportType('');\r\n    }\r\n  };\r\n\r\n  // Funciones para manejar modales\r\n  const handleViewClient = (client) => {\r\n    setSelectedClient(client);\r\n    setShowViewModal(true);\r\n  };\r\n\r\n  const handleEditClient = (client) => {\r\n    console.log('üîß CommercialManager - Editando cliente:', {\r\n      id: client.id,\r\n      name: client.name,\r\n      priority: client.priority,\r\n      status: client.status\r\n    });\r\n    setSelectedClient(client);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleCreateClient = () => {\r\n    setSelectedClient(null);\r\n    setShowCreateModal(true);\r\n  };\r\n\r\n  const handleCloseModals = () => {\r\n    setShowViewModal(false);\r\n    setShowEditModal(false);\r\n    setShowCreateModal(false);\r\n    // No resetear selectedClient aqu√≠ para mantener el clientId disponible\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setShowEditModal(false);\r\n    setSelectedClient(null); // Resetear solo cuando se cierre el modal de edici√≥n\r\n  };\r\n\r\n  // Funci√≥n para manejar cambio de estado\r\n  const handleStatusChange = (clientId, newStatus) => {\r\n    console.log(`üîÑ CommercialManager - Estado del cliente ${clientId} cambiado a: ${newStatus}`);\r\n    // La actualizaci√≥n se maneja autom√°ticamente por react-query\r\n  };\r\n\r\n  // Callbacks para modales de √©xito\r\n  const handleCreateSuccess = (data) => {\r\n    setSuccessClientData(data);\r\n    setIsEditSuccess(false);\r\n    setShowSuccessModal(true);\r\n  };\r\n\r\n  const handleEditSuccess = (data) => {\r\n    setSuccessClientData(data);\r\n    setIsEditSuccess(true);\r\n    setShowSuccessModal(true);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container fluid className=\"py-4\">\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '400px' }}>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Cargando...</span>\r\n          </Spinner>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container fluid className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          <Alert.Heading>Error al cargar los datos</Alert.Heading>\r\n          <p>{error.message}</p>\r\n          <Button variant=\"outline-danger\" onClick={() => refetch()}>\r\n            Reintentar\r\n          </Button>\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RequireRole roles={['admin', 'jefa_comercial', 'vendedor_comercial']}>\r\n      <div className=\"commercial-manager\">\r\n        <Container fluid className=\"py-4\">\r\n          {/* Header */}\r\n          <Row className=\"mb-4\">\r\n            <Col>\r\n              <div className=\"excel-header\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <div>\r\n                    <h2 className=\"excel-title\">\r\n                      <FiUsers className=\"me-2\" />\r\n                      Panel de Gesti√≥n Comercial\r\n                    </h2>\r\n                    <p className=\"excel-subtitle\">\r\n                      Vista completa de todos los clientes y su informaci√≥n de seguimiento\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button variant=\"success\" onClick={handleCreateClient}>\r\n                      <FiUser className=\"me-1\" />\r\n                      Crear Cliente\r\n                    </Button>\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle \r\n                        variant=\"outline-primary\" \r\n                        disabled={isExporting}\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        {isExporting ? (\r\n                          <>\r\n                            <Spinner size=\"sm\" className=\"me-1\" />\r\n                            Exportando {exportType?.toUpperCase()}...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <FiDownload className=\"me-1\" />\r\n                            Exportar\r\n                            <FiChevronDown className=\"ms-1\" />\r\n                          </>\r\n                        )}\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => handleExport('csv')} disabled={isExporting}>\r\n                          <FiFileText className=\"me-2\" />\r\n                          Exportar CSV\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => handleExport('json')} disabled={isExporting}>\r\n                          <FiDatabase className=\"me-2\" />\r\n                          Exportar JSON\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Button variant=\"primary\" onClick={() => refetch()} disabled={isExporting}>\r\n                      <FiRefreshCw className=\"me-1\" />\r\n                      Actualizar\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Estad√≠sticas */}\r\n          <Row className=\"mb-4\">\r\n            <Col md={3}>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon text-primary\">\r\n                  <FiUsers size={24} />\r\n                </div>\r\n                <h4 className=\"stat-number text-primary\">{stats.total}</h4>\r\n                <p className=\"stat-label\">Total Clientes</p>\r\n              </div>\r\n            </Col>\r\n            <Col md={3}>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon text-warning\">\r\n                  <FiTrendingUp size={24} />\r\n                </div>\r\n                <h4 className=\"stat-number text-warning\">{stats.byPriority.urgent || 0}</h4>\r\n                <p className=\"stat-label\">Urgentes</p>\r\n              </div>\r\n            </Col>\r\n            <Col md={3}>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon text-success\">\r\n                  <FiDollarSign size={24} />\r\n                </div>\r\n                <h4 className=\"stat-number text-success\">{stats.byStatus.ganado || 0}</h4>\r\n                <p className=\"stat-label\">Ganados</p>\r\n              </div>\r\n            </Col>\r\n            <Col md={3}>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon text-info\">\r\n                  <FiActivity size={24} />\r\n                </div>\r\n                <h4 className=\"stat-number text-info\">{stats.byStatus.prospeccion || 0}</h4>\r\n                <p className=\"stat-label\">En Prospecci√≥n</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Filtros */}\r\n          <div className=\"excel-filters\">\r\n            <div className=\"filter-row\">\r\n              <div className=\"filter-group\">\r\n                <div className=\"filter-label\">Buscar</div>\r\n                <InputGroup>\r\n                  <InputGroup.Text><FiSearch /></InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar cliente...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"filter-input\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <div className=\"filter-group\">\r\n                <div className=\"filter-label\">Estado</div>\r\n                <Form.Select\r\n                  value={selectedStatus}\r\n                  onChange={(e) => setSelectedStatus(e.target.value)}\r\n                  className=\"filter-input\"\r\n                >\r\n                  <option value=\"\">Todos los estados</option>\r\n                  {Object.entries(STATUS_CONFIG).map(([key, config]) => (\r\n                    <option key={key} value={key}>{config.label}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </div>\r\n              <div className=\"filter-group\">\r\n                <div className=\"filter-label\">Prioridad</div>\r\n                <Form.Select\r\n                  value={selectedPriority}\r\n                  onChange={(e) => setSelectedPriority(e.target.value)}\r\n                  className=\"filter-input\"\r\n                >\r\n                  <option value=\"\">Todas las prioridades</option>\r\n                  {Object.entries(PRIORITY_CONFIG).map(([key, config]) => (\r\n                    <option key={key} value={key}>{config.label}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </div>\r\n              <div className=\"filter-group\">\r\n                <div className=\"filter-label\">Sector</div>\r\n                <Form.Select\r\n                  value={selectedSector}\r\n                  onChange={(e) => setSelectedSector(e.target.value)}\r\n                  className=\"filter-input\"\r\n                >\r\n                  <option value=\"\">Todos los sectores</option>\r\n                  {Object.keys(stats.bySector).map(sector => (\r\n                    <option key={sector} value={sector}>{sector}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </div>\r\n              <div className=\"filter-group\">\r\n                <div className=\"filter-label\">&nbsp;</div>\r\n                <Button variant=\"outline-secondary\" onClick={clearFilters} className=\"filter-input\">\r\n                  <FiFilter className=\"me-1\" />\r\n                  Limpiar\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tabla de clientes */}\r\n          <div className=\"excel-table-container\">\r\n            <div className=\"excel-table-header\">\r\n              <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                <h5 className=\"excel-table-title\">Lista de Clientes</h5>\r\n                <small className=\"excel-table-count\">\r\n                  Mostrando {clients.length} de {totalClients} clientes\r\n                </small>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <Table className=\"excel-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th \r\n                      className={`sortable ${sortBy === 'name' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\r\n                      onClick={() => handleSort('name')}\r\n                    >\r\n                      Cliente\r\n                    </th>\r\n                    <th>Contacto</th>\r\n                    <th \r\n                      className={`sortable ${sortBy === 'status' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\r\n                      onClick={() => handleSort('status')}\r\n                    >\r\n                      Estado\r\n                    </th>\r\n                    <th>Prioridad</th>\r\n                    <th>Sector</th>\r\n                    <th>Actividad</th>\r\n                    <th>Servicios</th>\r\n                    <th \r\n                      className={`sortable ${sortBy === 'created_at' ? (sortOrder === 'asc' ? 'sort-asc' : 'sort-desc') : ''}`}\r\n                      onClick={() => handleSort('created_at')}\r\n                    >\r\n                      Fecha Creaci√≥n\r\n                    </th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {clients.map((client) => {\r\n                    const priority = client.priority || 'normal'; // Usar el campo priority de la base de datos\r\n                    const cleanSector = cleanSectorForDisplay(client.sector);\r\n                    const priorityConfig = PRIORITY_CONFIG[priority];\r\n                    const statusConfig = STATUS_CONFIG[client.status];\r\n                    \r\n                    return (\r\n                      <tr key={client.id}>\r\n                        <td>\r\n                          <div className=\"cell-client\">\r\n                            <div>{client.name}</div>\r\n                            <small className=\"text-muted\">\r\n                              {client.ruc && `RUC: ${client.ruc}`}\r\n                            </small>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-contact\">\r\n                            <div className=\"cell-contact-item\">\r\n                              <FiUser className=\"cell-contact-icon\" />\r\n                              {client.contact_name || 'Sin contacto'}\r\n                            </div>\r\n                            {client.email && (\r\n                              <div className=\"cell-contact-item\">\r\n                                <FiMail className=\"cell-contact-icon\" />\r\n                                <small \r\n                                  className=\"text-muted\" \r\n                                  style={{ cursor: 'pointer', color: '#007bff' }}\r\n                                  onClick={() => window.open(`mailto:${client.email}`, '_blank')}\r\n                                  title=\"Abrir en Outlook\"\r\n                                >\r\n                                  {client.email}\r\n                                </small>\r\n                              </div>\r\n                            )}\r\n                            {client.phone && (\r\n                              <div className=\"cell-contact-item\">\r\n                                <FiPhone className=\"cell-contact-icon\" />\r\n                                <small \r\n                                  className=\"text-muted\" \r\n                                  style={{ cursor: 'pointer', color: '#25d366' }}\r\n                                  onClick={() => window.open(`https://wa.me/51${client.phone.replace(/\\D/g, '')}`, '_blank')}\r\n                                  title=\"Abrir en WhatsApp\"\r\n                                >\r\n                                  {client.phone}\r\n                                </small>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <span className={`cell-status status-${client.status}`}>\r\n                            {statusConfig?.label || client.status}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <span className={`cell-priority priority-${priority}`}>\r\n                            {priorityConfig?.icon && <priorityConfig.icon className=\"cell-priority-icon\" />}\r\n                            {priorityConfig?.label || priority}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-sector\">\r\n                            <div>{cleanSector}</div>\r\n                            {client.city && (\r\n                              <div className=\"cell-sector-location\">\r\n                                <FiMapPin className=\"cell-contact-icon\" />\r\n                                {client.city}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-activity\">\r\n                            {client.actividad ? (\r\n                              <div className=\"cell-activity-content\">\r\n                                <div className=\"cell-activity-text\" title={client.actividad}>\r\n                                  {client.actividad.length > 50 \r\n                                    ? `${client.actividad.substring(0, 50)}...` \r\n                                    : client.actividad\r\n                                  }\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <span className=\"text-muted\">Sin especificar</span>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-services\">\r\n                            {client.servicios ? (\r\n                              <div className=\"cell-services-content\">\r\n                                <div className=\"cell-services-text\" title={client.servicios}>\r\n                                  {client.servicios.length > 50 \r\n                                    ? `${client.servicios.substring(0, 50)}...` \r\n                                    : client.servicios\r\n                                  }\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <span className=\"text-muted\">Sin especificar</span>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-date\">\r\n                            <FiCalendar className=\"cell-date-icon\" />\r\n                            {new Date(client.created_at).toLocaleDateString('es-ES')}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"cell-actions\">\r\n                            <button\r\n                              className=\"cell-action-btn\"\r\n                              title=\"Ver historial y comentarios\"\r\n                              onClick={() => handleViewClient(client)}\r\n                            >\r\n                              <FiEye className=\"cell-action-icon\" />\r\n                            </button>\r\n                            <button\r\n                              className=\"cell-action-btn\"\r\n                              title=\"Editar cliente\"\r\n                              onClick={() => handleEditClient(client)}\r\n                            >\r\n                              <FiUser className=\"cell-action-icon\" />\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <div className=\"excel-pagination\">\r\n              <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                <small className=\"text-muted\">\r\n                  P√°gina {currentPage} de {totalPages}\r\n                </small>\r\n                <div className=\"d-flex gap-2\">\r\n                  <button\r\n                    className=\"pagination-btn\"\r\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                    disabled={currentPage === 1}\r\n                  >\r\n                    Anterior\r\n                  </button>\r\n                  <button\r\n                    className=\"pagination-btn\"\r\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                    disabled={currentPage === totalPages}\r\n                  >\r\n                    Siguiente\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n        \r\n        {/* Modal de Vista de Cliente */}\r\n        {showViewModal && selectedClient && (\r\n          <ClientHistoryModal\r\n            show={showViewModal}\r\n            onHide={handleCloseModals}\r\n            clientId={selectedClient.id}\r\n            clientName={selectedClient.name}\r\n          />\r\n        )}\r\n        \r\n        {/* Modal de Edici√≥n de Cliente */}\r\n        {showEditModal && selectedClient && (\r\n          <ClientEditModal\r\n            show={showEditModal}\r\n            onHide={handleCloseEditModal}\r\n            clientId={selectedClient.id}\r\n            clientName={selectedClient.name}\r\n            onSuccess={handleEditSuccess}\r\n          />\r\n        )}\r\n        \r\n        {/* Modal de Crear Cliente */}\r\n        {showCreateModal && (\r\n          <ClientCreateModal\r\n            show={showCreateModal}\r\n            onHide={handleCloseModals}\r\n            onSuccess={handleCreateSuccess}\r\n          />\r\n        )}\r\n\r\n        {/* Modal de √âxito */}\r\n        <ClientSuccessModal\r\n          show={showSuccessModal}\r\n          onHide={() => setShowSuccessModal(false)}\r\n          clientData={successClientData}\r\n          isEdit={isEditSuccess}\r\n        />\r\n      </div>\r\n    </RequireRole>\r\n  );\r\n};\r\n\r\nexport default CommercialManager;\r\n"],"names":["exportService","filters","response","blob","url","link","error","apiFetch","ClientEditModal","show","onHide","clientId","clientName","onSuccess","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","queryClient","useQueryClient","React","clientData","isLoadingClient","useQuery","getCompanyById","data","clientInfo","usersData","isLoadingUsers","listUsers","users","updateClientMutation","useMutation","updateCompany","handleInputChange","e","name","value","prev","validateForm","newErrors","handleSubmit","handleClose","statusOptions","jsx","Modal","jsxs","Spinner","FiUser","Form","Alert","field","Row","Col","FiHome","FiActivity","option","user","Button","FiX","Fragment","FiSave","ClientCreateModal","createClientMutation","createCompany","FiPlus","cleanSectorForDisplay","sector","PRIORITY_CONFIG","FiTrendingUp","FiCalendar","STATUS_CONFIG","CommercialManager","useAuth","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedStatus","setSelectedStatus","selectedPriority","setSelectedPriority","selectedSector","setSelectedSector","sortBy","setSortBy","sortOrder","setSortOrder","isExporting","setIsExporting","exportType","setExportType","showViewModal","setShowViewModal","showEditModal","setShowEditModal","showCreateModal","setShowCreateModal","selectedClient","setSelectedClient","showSuccessModal","setShowSuccessModal","successClientData","setSuccessClientData","isEditSuccess","setIsEditSuccess","isLoading","refetch","listCompaniesWithTotals","clients","totalPages","totalClients","statsData","isLoadingStats","getCompanyStats","stats","byStatus","byPriority","bySector","client","priority","cleanSector","handleSort","clearFilters","handleExport","type","handleViewClient","handleEditClient","handleCreateClient","handleCloseModals","handleCloseEditModal","handleCreateSuccess","handleEditSuccess","Container","RequireRole","FiUsers","Dropdown","FiDownload","FiChevronDown","FiFileText","FiDatabase","FiRefreshCw","FiDollarSign","InputGroup","FiSearch","key","config","FiFilter","Table","priorityConfig","statusConfig","FiMail","FiPhone","FiMapPin","FiEye","ClientHistoryModal","ClientSuccessModal"],"mappings":"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"}