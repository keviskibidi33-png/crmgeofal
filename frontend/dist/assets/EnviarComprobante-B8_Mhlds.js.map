{"version":3,"file":"EnviarComprobante-B8_Mhlds.js","sources":["../../src/pages/EnviarComprobante.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Modal, Form, Badge } from 'react-bootstrap';\r\nimport { FiUpload, FiFileText, FiDollarSign, FiCalendar, FiUser, FiMail, FiPhone, FiMapPin, FiCheckCircle } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport api from '../services/api';\r\n\r\nconst EnviarComprobante = () => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]); // New state for filtered projects\r\n  const [quotes, setQuotes] = useState([]); // New state for quotes\r\n  const [clients, setClients] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n  const [clientSearch, setClientSearch] = useState('');\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [showClientDropdown, setShowClientDropdown] = useState(false);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // Estados para el buscador avanzado de cotizaciones\r\n  const [quoteSearch, setQuoteSearch] = useState('');\r\n  const [dateFrom, setDateFrom] = useState('');\r\n  const [dateTo, setDateTo] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [showQuoteFilters, setShowQuoteFilters] = useState(false);\r\n  const [filteredQuotes, setFilteredQuotes] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // Formulario de env√≠o\r\n  const [formData, setFormData] = useState({\r\n    quote_id: '',\r\n    client_name: '',\r\n    client_email: '',\r\n    client_phone: '',\r\n    client_address: '',\r\n    amount_paid: '',\r\n    payment_date: '',\r\n    payment_method: '',\r\n    payment_proof: null,\r\n    quote_file: null,\r\n    project_id: '',\r\n    description: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n    fetchClients();\r\n    fetchQuotes();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Aplicar filtros cuando cambien los par√°metros\r\n  useEffect(() => {\r\n    applyQuoteFilters();\r\n  }, [quotes, quoteSearch, dateFrom, dateTo, selectedUser]);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      console.log('üîç fetchProjects - Llamando a /api/projects');\r\n      console.log('üîç fetchProjects - Usuario actual:', user);\r\n      const projectsData = await api('/api/projects?limit=500');\r\n      console.log('üîç fetchProjects - Respuesta recibida:', projectsData);\r\n      \r\n      const projectsList = projectsData?.data || projectsData || [];\r\n      console.log('üîç fetchProjects - Lista de proyectos:', projectsList.length, 'proyectos');\r\n      console.log('üîç fetchProjects - Primeros 3 proyectos:', projectsList.slice(0, 3).map(p => ({ id: p.id, name: p.name, company_id: p.company_id })));\r\n      \r\n      setProjects(projectsList);\r\n    } catch (err) {\r\n      console.error('‚ùå Error fetching projects:', err);\r\n      setError('Error al cargar los proyectos: ' + (err.message || 'Error desconocido'));\r\n      setProjects([]);\r\n    }\r\n  };\r\n\r\n  const fetchQuotes = async () => {\r\n    try {\r\n      console.log('üîç fetchQuotes - Llamando a /api/quotes/my-quotes');\r\n      const quotesData = await api('/api/quotes/my-quotes');\r\n      console.log('üîç fetchQuotes - Respuesta recibida:', quotesData);\r\n      \r\n      const quotesList = quotesData?.data || quotesData || [];\r\n      console.log('üîç fetchQuotes - Lista de cotizaciones:', quotesList.length, 'cotizaciones');\r\n      console.log('üîç fetchQuotes - Primeras 3 cotizaciones:', quotesList.slice(0, 3).map(q => ({ id: q.id, quote_number: q.quote_number, client_name: q.client_name })));\r\n      \r\n      setQuotes(quotesList);\r\n    } catch (err) {\r\n      console.error('‚ùå Error fetching quotes:', err);\r\n      setError('Error al cargar las cotizaciones: ' + (err.message || 'Error desconocido'));\r\n      setQuotes([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      console.log('üîç fetchUsers - Llamando a /api/users');\r\n      const usersData = await api('/api/users?limit=100');\r\n      console.log('üîç fetchUsers - Respuesta recibida:', usersData);\r\n      \r\n      const usersList = usersData?.data || usersData || [];\r\n      console.log('üîç fetchUsers - Lista de usuarios:', usersList.length, 'usuarios');\r\n      \r\n      setUsers(usersList);\r\n    } catch (err) {\r\n      console.error('‚ùå Error fetching users:', err);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  // Funci√≥n para aplicar filtros a las cotizaciones\r\n  const applyQuoteFilters = () => {\r\n    let filtered = [...quotes];\r\n\r\n    // Filtro por texto de b√∫squeda\r\n    if (quoteSearch.trim()) {\r\n      const searchLower = quoteSearch.toLowerCase();\r\n      filtered = filtered.filter(quote => {\r\n        const clientName = (quote.client_name || quote.client_contact || '').toLowerCase();\r\n        const quoteNumber = (quote.quote_number || '').toLowerCase();\r\n        const total = (quote.total || quote.total_amount || 0).toString();\r\n        \r\n        return clientName.includes(searchLower) || \r\n               quoteNumber.includes(searchLower) || \r\n               total.includes(searchLower);\r\n      });\r\n    }\r\n\r\n    // Filtro por rango de fechas\r\n    if (dateFrom) {\r\n      filtered = filtered.filter(quote => {\r\n        const quoteDate = new Date(quote.created_at);\r\n        const fromDate = new Date(dateFrom);\r\n        return quoteDate >= fromDate;\r\n      });\r\n    }\r\n\r\n    if (dateTo) {\r\n      filtered = filtered.filter(quote => {\r\n        const quoteDate = new Date(quote.created_at);\r\n        const toDate = new Date(dateTo);\r\n        toDate.setHours(23, 59, 59, 999); // Incluir todo el d√≠a\r\n        return quoteDate <= toDate;\r\n      });\r\n    }\r\n\r\n    // Filtro por usuario\r\n    if (selectedUser) {\r\n      filtered = filtered.filter(quote => {\r\n        return quote.user_id == selectedUser || quote.created_by == selectedUser;\r\n      });\r\n    }\r\n\r\n    console.log('üîç applyQuoteFilters - Filtros aplicados:', {\r\n      search: quoteSearch,\r\n      dateFrom,\r\n      dateTo,\r\n      selectedUser,\r\n      totalQuotes: quotes.length,\r\n      filteredQuotes: filtered.length\r\n    });\r\n\r\n    setFilteredQuotes(filtered);\r\n  };\r\n\r\n  // Funci√≥n para limpiar filtros\r\n  const clearQuoteFilters = () => {\r\n    setQuoteSearch('');\r\n    setDateFrom('');\r\n    setDateTo('');\r\n    setSelectedUser('');\r\n    setShowQuoteFilters(false);\r\n  };\r\n\r\n  // Funci√≥n para establecer filtro de √∫ltimos d√≠as\r\n  const setLastDaysFilter = (days) => {\r\n    const today = new Date();\r\n    const fromDate = new Date(today);\r\n    fromDate.setDate(today.getDate() - days);\r\n    \r\n    setDateFrom(fromDate.toISOString().split('T')[0]);\r\n    setDateTo(today.toISOString().split('T')[0]);\r\n    setShowQuoteFilters(true);\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      console.log('üîç fetchClients - Llamando a /api/companies');\r\n      const clientsData = await api('/api/companies?limit=500');\r\n      console.log('üîç fetchClients - Respuesta recibida:', clientsData);\r\n      \r\n      const clientsList = clientsData?.data || clientsData || [];\r\n      console.log('üîç fetchClients - Lista de clientes:', clientsList.length, 'clientes');\r\n      \r\n      // Ordenar clientes por actividad reciente (m√°s proyectos = m√°s activos)\r\n      const sortedClients = clientsList.sort((a, b) => {\r\n        const aProjects = projects.filter(p => p.company_id === a.id).length;\r\n        const bProjects = projects.filter(p => p.company_id === b.id).length;\r\n        return bProjects - aProjects;\r\n      });\r\n      \r\n      console.log('üîç fetchClients - Clientes ordenados:', sortedClients.length);\r\n      console.log('üîç fetchClients - Primeros 3 clientes:', sortedClients.slice(0, 3).map(c => ({ id: c.id, name: c.name, ruc: c.ruc })));\r\n      setClients(sortedClients);\r\n      setFilteredClients(sortedClients);\r\n    } catch (err) {\r\n      console.error('‚ùå Error fetching clients:', err);\r\n      setError('Error al cargar los clientes: ' + (err.message || 'Error desconocido'));\r\n      setClients([]);\r\n      setFilteredClients([]);\r\n    }\r\n  };\r\n\r\n  const handleClientSearch = (searchTerm) => {\r\n    console.log('üîç handleClientSearch - T√©rmino de b√∫squeda:', searchTerm);\r\n    console.log('üîç handleClientSearch - Total de clientes:', clients.length);\r\n    \r\n    setClientSearch(searchTerm);\r\n    if (searchTerm.trim() === '') {\r\n      setFilteredClients(clients);\r\n      setShowClientDropdown(false);\r\n    } else {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      console.log('üîç handleClientSearch - B√∫squeda en min√∫sculas:', searchLower);\r\n      \r\n      const filtered = clients.filter(client => {\r\n        // B√∫squeda por nombre completo\r\n        const nameMatch = client.name.toLowerCase().includes(searchLower);\r\n        \r\n        // B√∫squeda por palabras individuales del nombre\r\n        const nameWords = client.name.toLowerCase().split(' ');\r\n        const searchWords = searchLower.split(' ');\r\n        const nameWordsMatch = searchWords.every(searchWord => \r\n          nameWords.some(nameWord => nameWord.includes(searchWord))\r\n        );\r\n        \r\n        // B√∫squeda por RUC\r\n        const rucMatch = client.ruc?.toLowerCase().includes(searchLower);\r\n        \r\n        // B√∫squeda por email\r\n        const emailMatch = client.email?.toLowerCase().includes(searchLower);\r\n        \r\n        // B√∫squeda por tel√©fono\r\n        const phoneMatch = client.phone?.toLowerCase().includes(searchLower);\r\n        \r\n        const matches = nameMatch || nameWordsMatch || rucMatch || emailMatch || phoneMatch;\r\n        \r\n        if (matches) {\r\n          console.log('‚úÖ Cliente encontrado:', client.name, '- Match:', {\r\n            nameMatch, nameWordsMatch, rucMatch, emailMatch, phoneMatch\r\n          });\r\n        }\r\n        \r\n        return matches;\r\n      });\r\n      \r\n      console.log('üîç handleClientSearch - Resultados encontrados:', filtered.length);\r\n      setFilteredClients(filtered);\r\n      setShowClientDropdown(true); // Mostrar dropdown cuando hay resultados\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (client) => {\r\n    console.log('üîç handleClientSelect - Cliente seleccionado:', client.name, 'ID:', client.id);\r\n    setSelectedClient(client);\r\n    setClientSearch(client.name);\r\n    setShowClientDropdown(false); // Ocultar dropdown al seleccionar cliente\r\n    setFormData({\r\n      ...formData,\r\n      client_name: client.name,\r\n      client_email: client.email || '',\r\n      client_phone: client.phone || '',\r\n      client_address: client.address || ''\r\n    });\r\n    // Filtrar proyectos del cliente seleccionado\r\n    console.log('üîç handleClientSelect - Total de proyectos disponibles:', projects.length);\r\n    console.log('üîç handleClientSelect - ID del cliente:', client.id);\r\n    console.log('üîç handleClientSelect - Todos los proyectos con company_id:', projects.map(p => ({ id: p.id, name: p.name, company_id: p.company_id })));\r\n    \r\n    const clientProjects = projects.filter(project => project.company_id === client.id);\r\n    console.log('üîç handleClientSelect - Proyectos encontrados:', clientProjects.length);\r\n    console.log('üîç handleClientSelect - Proyectos del cliente:', clientProjects.map(p => ({ id: p.id, name: p.name, company_id: p.company_id })));\r\n    setFilteredProjects(clientProjects);\r\n  };\r\n\r\n  const handleClientClear = () => {\r\n    console.log('üîç handleClientClear - Limpiando selecci√≥n de cliente');\r\n    setSelectedClient(null);\r\n    setClientSearch('');\r\n    setShowClientDropdown(false); // Ocultar dropdown al limpiar\r\n    setFormData({\r\n      ...formData,\r\n      client_name: '',\r\n      client_email: '',\r\n      client_phone: '',\r\n      client_address: '',\r\n      project_id: ''\r\n    });\r\n    setFilteredProjects([]); // Clear filtered projects\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setFormData({ ...formData, payment_proof: file });\r\n    }\r\n  };\r\n\r\n  const handleQuoteFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setFormData({ ...formData, quote_file: file });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.payment_proof) {\r\n      setError('Debe subir un comprobante de pago');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setError(null);\r\n\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append('quote_id', formData.quote_id);\r\n      formDataToSend.append('client_name', formData.client_name);\r\n      formDataToSend.append('client_email', formData.client_email);\r\n      formDataToSend.append('client_phone', formData.client_phone);\r\n      formDataToSend.append('client_address', formData.client_address);\r\n      formDataToSend.append('amount_paid', formData.amount_paid);\r\n      formDataToSend.append('payment_date', formData.payment_date);\r\n      formDataToSend.append('payment_method', formData.payment_method);\r\n      formDataToSend.append('description', formData.description);\r\n      formDataToSend.append('project_id', formData.project_id);\r\n      formDataToSend.append('payment_proof', formData.payment_proof);\r\n      \r\n      if (formData.quote_file) {\r\n        formDataToSend.append('quote_file', formData.quote_file);\r\n      }\r\n\r\n      const response = await api('/api/payment-proofs/upload', {\r\n        method: 'POST',\r\n        body: formDataToSend\r\n      });\r\n\r\n      // Limpiar estados de manera segura\r\n      setSuccess('Comprobante de pago enviado exitosamente');\r\n      \r\n      // Cerrar modal despu√©s de un peque√±o delay para evitar warnings de React\r\n      setTimeout(() => {\r\n        setShowUploadModal(false);\r\n        setFormData({\r\n          quote_id: '',\r\n          client_name: '',\r\n          client_email: '',\r\n          client_phone: '',\r\n          client_address: '',\r\n          amount_paid: '',\r\n          payment_date: '',\r\n          payment_method: '',\r\n          payment_proof: null,\r\n          quote_file: null,\r\n          project_id: '',\r\n          description: ''\r\n        });\r\n        \r\n        // Limpiar estados de b√∫squeda\r\n        setSelectedClient(null);\r\n        setClientSearch('');\r\n        setShowClientDropdown(false);\r\n        setQuoteSearch('');\r\n        setDateFrom('');\r\n        setDateTo('');\r\n        setSelectedUser('');\r\n        setShowQuoteFilters(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      console.error('Error uploading proof:', err);\r\n      setError('Error al enviar el comprobante: ' + (err.message || 'Error desconocido'));\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2>üì§ Enviar Comprobante de Pago</h2>\r\n          <p className=\"text-muted\">Sube tu comprobante de pago y archivos relacionados para que facturaci√≥n los revise y apruebe</p>\r\n        </Col>\r\n      </Row>\r\n\r\n      {error && (\r\n        <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {success && (\r\n        <Alert variant=\"success\" dismissible onClose={() => setSuccess(null)}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">\r\n                <FiUpload className=\"me-2\" />\r\n                Subir Comprobante de Pago\r\n              </h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"text-center py-4\">\r\n                <p className=\"text-muted mb-4\">Sube tu comprobante de pago y archivos relacionados</p>\r\n                <Button \r\n                  variant=\"success\" \r\n                  size=\"lg\"\r\n                  onClick={() => setShowUploadModal(true)}\r\n                >\r\n                  <FiUpload className=\"me-2\" />\r\n                  Subir Comprobante de Pago\r\n                </Button>\r\n                <p className=\"text-muted mt-3\">\r\n                  <small>Facturaci√≥n revisar√° y aprobar√° tu comprobante</small>\r\n                </p>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modal de subida */}\r\n      <Modal show={showUploadModal} onHide={() => setShowUploadModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <FiUpload className=\"me-2\" />\r\n            Subir Comprobante de Pago\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            {/* Paso 1: Selecci√≥n de Cliente */}\r\n            <div className=\"mb-4\">\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiUser className=\"me-2\" />\r\n                Paso 1: Seleccionar Cliente\r\n              </h6>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Buscar Cliente</Form.Label>\r\n                <div className=\"position-relative\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={clientSearch}\r\n                    onChange={(e) => handleClientSearch(e.target.value)}\r\n                    onFocus={() => setShowClientDropdown(true)}\r\n                    placeholder=\"Buscar por nombre, RUC, email o tel√©fono...\"\r\n                    className=\"pe-5\"\r\n                  />\r\n                  {selectedClient && (\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      size=\"sm\"\r\n                      className=\"position-absolute end-0 top-50 translate-middle-y me-2\"\r\n                      onClick={handleClientClear}\r\n                    >\r\n                      ‚úï\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                {clientSearch && showClientDropdown && filteredClients.length > 0 && (\r\n                  <div className=\"border rounded mt-2\" style={{maxHeight: '200px', overflowY: 'auto'}}>\r\n                    <div className=\"p-2 bg-light border-bottom\">\r\n                      <small className=\"text-muted\">\r\n                        {filteredClients.length} cliente{filteredClients.length !== 1 ? 's' : ''} encontrado{filteredClients.length !== 1 ? 's' : ''}\r\n                      </small>\r\n                    </div>\r\n                    {filteredClients.map((client) => (\r\n                      <div\r\n                        key={client.id}\r\n                        className=\"p-2 border-bottom cursor-pointer hover-bg-light\"\r\n                        onClick={() => handleClientSelect(client)}\r\n                        style={{cursor: 'pointer'}}\r\n                      >\r\n                        <div className=\"fw-bold\">{client.name}</div>\r\n                        <small className=\"text-muted\">\r\n                          RUC: {client.ruc} | Email: {client.email}\r\n                          {client.phone && ` | Tel: ${client.phone}`}\r\n                        </small>\r\n                        <div className=\"mt-1\">\r\n                          <small className=\"text-success\">\r\n                            üìä {projects.filter(p => p.company_id === client.id).length} proyecto{projects.filter(p => p.company_id === client.id).length !== 1 ? 's' : ''}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {clientSearch && showClientDropdown && filteredClients.length === 0 && (\r\n                  <div className=\"border rounded mt-2 p-3 text-center\">\r\n                    <small className=\"text-muted\">\r\n                      No se encontraron clientes con \"{clientSearch}\"\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {selectedClient && (\r\n                  <div className=\"mt-2 p-2 bg-light rounded\">\r\n                    <strong>Cliente seleccionado:</strong> {selectedClient.name}\r\n                    <br />\r\n                    <small className=\"text-muted\">\r\n                      RUC: {selectedClient.ruc} | Email: {selectedClient.email}\r\n                      {selectedClient.phone && ` | Tel: ${selectedClient.phone}`}\r\n                    </small>\r\n                    <div className=\"mt-1\">\r\n                      <small className=\"text-success\">\r\n                        üìä {projects.filter(p => p.company_id === selectedClient.id).length} proyecto{projects.filter(p => p.company_id === selectedClient.id).length !== 1 ? 's' : ''} disponible{projects.filter(p => p.company_id === selectedClient.id).length !== 1 ? 's' : ''}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Form.Group>\r\n            </div>\r\n\r\n            {/* Paso 2: Informaci√≥n del Cliente */}\r\n            {selectedClient && (\r\n              <div className=\"mb-4\">\r\n                <h6 className=\"text-primary mb-3\">\r\n                  <FiUser className=\"me-2\" />\r\n                  Paso 2: Informaci√≥n del Cliente\r\n                </h6>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Nombre del Cliente</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={formData.client_name}\r\n                        onChange={(e) => setFormData({...formData, client_name: e.target.value})}\r\n                        placeholder=\"Nombre del cliente\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Email del Cliente</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={formData.client_email}\r\n                        onChange={(e) => setFormData({...formData, client_email: e.target.value})}\r\n                        placeholder=\"email@cliente.com\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Tel√©fono del Cliente</Form.Label>\r\n                      <Form.Control\r\n                        type=\"tel\"\r\n                        value={formData.client_phone}\r\n                        onChange={(e) => setFormData({...formData, client_phone: e.target.value})}\r\n                        placeholder=\"Tel√©fono del cliente\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Direcci√≥n del Cliente</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={formData.client_address}\r\n                        onChange={(e) => setFormData({...formData, client_address: e.target.value})}\r\n                        placeholder=\"Direcci√≥n del cliente\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            )}\r\n\r\n            {/* Paso 3: Informaci√≥n del Pago */}\r\n            <div className=\"mb-4\">\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiDollarSign className=\"me-2\" />\r\n                Paso 3: Informaci√≥n del Pago\r\n              </h6>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Cotizaci√≥n Asociada</Form.Label>\r\n                    \r\n                    {/* Buscador de cotizaciones */}\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"d-flex gap-2 mb-2\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Buscar cotizaci√≥n por n√∫mero, cliente o monto...\"\r\n                          value={quoteSearch}\r\n                          onChange={(e) => setQuoteSearch(e.target.value)}\r\n                          style={{flex: 1}}\r\n                        />\r\n                        <Button \r\n                          variant=\"outline-secondary\" \r\n                          onClick={() => setShowQuoteFilters(!showQuoteFilters)}\r\n                          size=\"sm\"\r\n                        >\r\n                          üîç Filtros\r\n                        </Button>\r\n                        {(quoteSearch || dateFrom || dateTo || selectedUser) && (\r\n                          <Button \r\n                            variant=\"outline-danger\" \r\n                            onClick={clearQuoteFilters}\r\n                            size=\"sm\"\r\n                          >\r\n                            ‚úï Limpiar\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Filtros avanzados */}\r\n                      {showQuoteFilters && (\r\n                        <Card className=\"mb-3\">\r\n                          <Card.Header className=\"py-2\">\r\n                            <small className=\"fw-bold\">Filtros Avanzados</small>\r\n                          </Card.Header>\r\n                          <Card.Body className=\"py-2\">\r\n                            <Row>\r\n                              <Col md={3}>\r\n                                <Form.Label className=\"small\">Fecha Desde</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"date\"\r\n                                  value={dateFrom}\r\n                                  onChange={(e) => setDateFrom(e.target.value)}\r\n                                  size=\"sm\"\r\n                                />\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <Form.Label className=\"small\">Fecha Hasta</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"date\"\r\n                                  value={dateTo}\r\n                                  onChange={(e) => setDateTo(e.target.value)}\r\n                                  size=\"sm\"\r\n                                />\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <Form.Label className=\"small\">Usuario</Form.Label>\r\n                                <Form.Select\r\n                                  value={selectedUser}\r\n                                  onChange={(e) => setSelectedUser(e.target.value)}\r\n                                  size=\"sm\"\r\n                                >\r\n                                  <option value=\"\">Todos los usuarios</option>\r\n                                  {users.map((user) => (\r\n                                    <option key={user.id} value={user.id}>\r\n                                      {user.name} ({user.email})\r\n                                    </option>\r\n                                  ))}\r\n                                </Form.Select>\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <Form.Label className=\"small\">√öltimos d√≠as</Form.Label>\r\n                                <div className=\"d-flex gap-1\">\r\n                                  <Button \r\n                                    variant=\"outline-primary\" \r\n                                    size=\"sm\" \r\n                                    onClick={() => setLastDaysFilter(7)}\r\n                                    className=\"flex-fill\"\r\n                                  >\r\n                                    7d\r\n                                  </Button>\r\n                                  <Button \r\n                                    variant=\"outline-primary\" \r\n                                    size=\"sm\" \r\n                                    onClick={() => setLastDaysFilter(30)}\r\n                                    className=\"flex-fill\"\r\n                                  >\r\n                                    30d\r\n                                  </Button>\r\n                                  <Button \r\n                                    variant=\"outline-primary\" \r\n                                    size=\"sm\" \r\n                                    onClick={() => setLastDaysFilter(90)}\r\n                                    className=\"flex-fill\"\r\n                                  >\r\n                                    90d\r\n                                  </Button>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      )}\r\n\r\n                      {/* Dropdown de cotizaciones filtradas */}\r\n                      <Form.Select\r\n                        value={formData.quote_id}\r\n                        onChange={(e) => setFormData({...formData, quote_id: e.target.value})}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Seleccionar cotizaci√≥n</option>\r\n                        {Array.isArray(filteredQuotes) && filteredQuotes.map((quote) => (\r\n                          <option key={quote.id} value={quote.id}>\r\n                            {quote.quote_number || `COT-${quote.id}`} - {quote.client_name || quote.client_contact} - ${quote.total || quote.total_amount || 0}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Select>\r\n                      \r\n                      {/* Informaci√≥n de resultados */}\r\n                      <div className=\"mt-2\">\r\n                        <small className=\"text-muted\">\r\n                          {filteredQuotes.length > 0 ? (\r\n                            <>\r\n                              üìä {filteredQuotes.length} cotizaci√≥n{filteredQuotes.length !== 1 ? 'es' : ''} encontrada{filteredQuotes.length !== 1 ? 's' : ''}\r\n                              {quotes.length !== filteredQuotes.length && (\r\n                                <span className=\"text-warning ms-2\">\r\n                                  (de {quotes.length} total)\r\n                                </span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <span className=\"text-danger\">\r\n                              ‚ùå No se encontraron cotizaciones con los filtros aplicados\r\n                            </span>\r\n                          )}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <Form.Text className=\"text-muted\">\r\n                      Selecciona la cotizaci√≥n relacionada con este comprobante de pago\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Monto Pagado</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={formData.amount_paid}\r\n                      onChange={(e) => setFormData({...formData, amount_paid: e.target.value})}\r\n                      placeholder=\"0.00\"\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Fecha de Pago</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      value={formData.payment_date}\r\n                      onChange={(e) => setFormData({...formData, payment_date: e.target.value})}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>M√©todo de Pago</Form.Label>\r\n                    <Form.Select\r\n                      value={formData.payment_method}\r\n                      onChange={(e) => setFormData({...formData, payment_method: e.target.value})}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Seleccionar m√©todo</option>\r\n                      <option value=\"transferencia\">Transferencia Bancaria</option>\r\n                      <option value=\"efectivo\">Efectivo</option>\r\n                      <option value=\"cheque\">Cheque</option>\r\n                      <option value=\"tarjeta\">Tarjeta de Cr√©dito/D√©bito</option>\r\n                      <option value=\"otros\">Otros</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n            {/* Paso 4: Selecci√≥n de Proyecto */}\r\n            <div className=\"mb-4\">\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiFileText className=\"me-2\" />\r\n                Paso 4: Seleccionar Proyecto\r\n              </h6>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Proyecto Asociado</Form.Label>\r\n                {!selectedClient ? (\r\n                  <div className=\"alert alert-info\">\r\n                    <small>Primero selecciona un cliente para ver sus proyectos</small>\r\n                  </div>\r\n                ) : (\r\n                  <Form.Select\r\n                    value={formData.project_id}\r\n                    onChange={(e) => setFormData({...formData, project_id: e.target.value})}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccionar proyecto de {selectedClient.name}</option>\r\n                    {Array.isArray(filteredProjects) && filteredProjects.map((project) => (\r\n                      <option key={project.id} value={project.id}>\r\n                        {project.name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                )}\r\n                <Form.Text className=\"text-muted\">\r\n                  Proyecto al que pertenece esta cotizaci√≥n\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </div>\r\n\r\n            {/* Paso 5: Archivos */}\r\n            <div className=\"mb-4\">\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiUpload className=\"me-2\" />\r\n                Paso 5: Subir Archivos\r\n              </h6>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Archivo de Cotizaci√≥n (PDF/Excel)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      accept=\".pdf,.xlsx,.xls\"\r\n                      onChange={handleQuoteFileUpload}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                      Archivo de la cotizaci√≥n enviada al cliente\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Comprobante de Pago (PDF/Imagen) *</Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      accept=\".pdf,.jpg,.jpeg,.png\"\r\n                      onChange={handleFileUpload}\r\n                      required\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                      Archivo del comprobante de pago (obligatorio)\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n            {/* Paso 6: Descripci√≥n */}\r\n            <div className=\"mb-4\">\r\n              <h6 className=\"text-primary mb-3\">\r\n                <FiFileText className=\"me-2\" />\r\n                Paso 6: Informaci√≥n Adicional\r\n              </h6>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Descripci√≥n</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n                  placeholder=\"Informaci√≥n adicional sobre el pago...\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowUploadModal(false)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            variant=\"success\" \r\n            onClick={handleSubmit}\r\n            disabled={uploading}\r\n          >\r\n            {uploading ? (\r\n              <>\r\n                <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                Enviando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiUpload className=\"me-2\" />\r\n                Enviar Comprobante\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EnviarComprobante;"],"names":["EnviarComprobante","user","useAuth","loading","setLoading","useState","error","setError","success","setSuccess","projects","setProjects","filteredProjects","setFilteredProjects","quotes","setQuotes","clients","setClients","filteredClients","setFilteredClients","clientSearch","setClientSearch","selectedClient","setSelectedClient","showClientDropdown","setShowClientDropdown","showUploadModal","setShowUploadModal","uploading","setUploading","quoteSearch","setQuoteSearch","dateFrom","setDateFrom","dateTo","setDateTo","selectedUser","setSelectedUser","showQuoteFilters","setShowQuoteFilters","filteredQuotes","setFilteredQuotes","users","setUsers","formData","setFormData","useEffect","fetchProjects","fetchClients","fetchQuotes","fetchUsers","applyQuoteFilters","projectsData","api","projectsList","p","err","quotesData","quotesList","q","usersData","usersList","filtered","searchLower","quote","clientName","quoteNumber","total","quoteDate","fromDate","toDate","clearQuoteFilters","setLastDaysFilter","days","today","clientsData","clientsList","sortedClients","a","b","aProjects","c","handleClientSearch","searchTerm","client","nameMatch","nameWords","nameWordsMatch","nameWord","searchWord","rucMatch","_a","emailMatch","_b","phoneMatch","_c","matches","handleClientSelect","clientProjects","project","handleClientClear","handleFileUpload","event","file","handleQuoteFileUpload","handleSubmit","e","formDataToSend","response","jsxs","Container","jsx","Row","Col","Alert","Card","FiUpload","Button","Modal","Form","FiUser","FiDollarSign","Fragment","FiFileText","Spinner"],"mappings":"yaAMA,MAAMA,GAAoB,IAAM,CAC9B,KAAM,CAAE,KAAAC,EAAA,EAASC,GAAA,EACX,CAACC,GAASC,EAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,IAAI,EACjC,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,IAAI,EACrC,CAACK,EAAUC,CAAW,EAAIN,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACO,EAAkBC,CAAmB,EAAIR,EAAAA,SAAS,CAAA,CAAE,EACrD,CAACS,EAAQC,CAAS,EAAIV,EAAAA,SAAS,CAAA,CAAE,EACjC,CAACW,EAASC,CAAU,EAAIZ,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACa,EAAiBC,CAAkB,EAAId,EAAAA,SAAS,CAAA,CAAE,EACnD,CAACe,EAAcC,CAAe,EAAIhB,EAAAA,SAAS,EAAE,EAC7C,CAACiB,EAAgBC,CAAiB,EAAIlB,EAAAA,SAAS,IAAI,EACnD,CAACmB,EAAoBC,CAAqB,EAAIpB,EAAAA,SAAS,EAAK,EAC5D,CAACqB,GAAiBC,CAAkB,EAAItB,EAAAA,SAAS,EAAK,EACtD,CAACuB,EAAWC,CAAY,EAAIxB,EAAAA,SAAS,EAAK,EAG1C,CAACyB,EAAaC,CAAc,EAAI1B,EAAAA,SAAS,EAAE,EAC3C,CAAC2B,EAAUC,CAAW,EAAI5B,EAAAA,SAAS,EAAE,EACrC,CAAC6B,EAAQC,CAAS,EAAI9B,EAAAA,SAAS,EAAE,EACjC,CAAC+B,EAAcC,CAAe,EAAIhC,EAAAA,SAAS,EAAE,EAC7C,CAACiC,EAAkBC,CAAmB,EAAIlC,EAAAA,SAAS,EAAK,EACxD,CAACmC,EAAgBC,EAAiB,EAAIpC,EAAAA,SAAS,CAAA,CAAE,EACjD,CAACqC,GAAOC,EAAQ,EAAItC,EAAAA,SAAS,CAAA,CAAE,EAG/B,CAACuC,EAAUC,CAAW,EAAIxC,WAAS,CACvC,SAAU,GACV,YAAa,GACb,aAAc,GACd,aAAc,GACd,eAAgB,GAChB,YAAa,GACb,aAAc,GACd,eAAgB,GAChB,cAAe,KACf,WAAY,KACZ,WAAY,GACZ,YAAa,EAAA,CACd,EAEDyC,EAAAA,UAAU,IAAM,CACdC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,CACF,EAAG,CAAA,CAAE,EAGLJ,EAAAA,UAAU,IAAM,CACdK,GAAA,CACF,EAAG,CAACrC,EAAQgB,EAAaE,EAAUE,EAAQE,CAAY,CAAC,EAExD,MAAMW,GAAgB,SAAY,CAChC,GAAI,CACF,QAAQ,IAAI,6CAA6C,EACzD,QAAQ,IAAI,qCAAsC9C,EAAI,EACtD,MAAMmD,EAAe,MAAMC,EAAI,yBAAyB,EACxD,QAAQ,IAAI,yCAA0CD,CAAY,EAElE,MAAME,GAAeF,GAAA,YAAAA,EAAc,OAAQA,GAAgB,CAAA,EAC3D,QAAQ,IAAI,yCAA0CE,EAAa,OAAQ,WAAW,EACtF,QAAQ,IAAI,2CAA4CA,EAAa,MAAM,EAAG,CAAC,EAAE,IAAIC,IAAM,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,WAAYA,EAAE,UAAA,EAAa,CAAC,EAEjJ5C,EAAY2C,CAAY,CAC1B,OAASE,EAAK,CACZ,QAAQ,MAAM,6BAA8BA,CAAG,EAC/CjD,EAAS,mCAAqCiD,EAAI,SAAW,oBAAoB,EACjF7C,EAAY,CAAA,CAAE,CAChB,CACF,EAEMsC,GAAc,SAAY,CAC9B,GAAI,CACF,QAAQ,IAAI,mDAAmD,EAC/D,MAAMQ,EAAa,MAAMJ,EAAI,uBAAuB,EACpD,QAAQ,IAAI,uCAAwCI,CAAU,EAE9D,MAAMC,GAAaD,GAAA,YAAAA,EAAY,OAAQA,GAAc,CAAA,EACrD,QAAQ,IAAI,0CAA2CC,EAAW,OAAQ,cAAc,EACxF,QAAQ,IAAI,4CAA6CA,EAAW,MAAM,EAAG,CAAC,EAAE,IAAIC,IAAM,CAAE,GAAIA,EAAE,GAAI,aAAcA,EAAE,aAAc,YAAaA,EAAE,WAAA,EAAc,CAAC,EAElK5C,EAAU2C,CAAU,CACtB,OAASF,EAAK,CACZ,QAAQ,MAAM,2BAA4BA,CAAG,EAC7CjD,EAAS,sCAAwCiD,EAAI,SAAW,oBAAoB,EACpFzC,EAAU,CAAA,CAAE,CACd,CACF,EAEMmC,GAAa,SAAY,CAC7B,GAAI,CACF,QAAQ,IAAI,uCAAuC,EACnD,MAAMU,EAAY,MAAMP,EAAI,sBAAsB,EAClD,QAAQ,IAAI,sCAAuCO,CAAS,EAE5D,MAAMC,GAAYD,GAAA,YAAAA,EAAW,OAAQA,GAAa,CAAA,EAClD,QAAQ,IAAI,qCAAsCC,EAAU,OAAQ,UAAU,EAE9ElB,GAASkB,CAAS,CACpB,OAASL,EAAK,CACZ,QAAQ,MAAM,0BAA2BA,CAAG,EAC5Cb,GAAS,CAAA,CAAE,CACb,CACF,EAGMQ,GAAoB,IAAM,CAC9B,IAAIW,EAAW,CAAC,GAAGhD,CAAM,EAGzB,GAAIgB,EAAY,OAAQ,CACtB,MAAMiC,EAAcjC,EAAY,YAAA,EAChCgC,EAAWA,EAAS,OAAOE,GAAS,CAClC,MAAMC,GAAcD,EAAM,aAAeA,EAAM,gBAAkB,IAAI,YAAA,EAC/DE,GAAeF,EAAM,cAAgB,IAAI,YAAA,EACzCG,GAASH,EAAM,OAASA,EAAM,cAAgB,GAAG,SAAA,EAEvD,OAAOC,EAAW,SAASF,CAAW,GAC/BG,EAAY,SAASH,CAAW,GAChCI,EAAM,SAASJ,CAAW,CACnC,CAAC,CACH,CAGI/B,IACF8B,EAAWA,EAAS,OAAOE,GAAS,CAClC,MAAMI,EAAY,IAAI,KAAKJ,EAAM,UAAU,EACrCK,EAAW,IAAI,KAAKrC,CAAQ,EAClC,OAAOoC,GAAaC,CACtB,CAAC,GAGCnC,IACF4B,EAAWA,EAAS,OAAOE,GAAS,CAClC,MAAMI,EAAY,IAAI,KAAKJ,EAAM,UAAU,EACrCM,EAAS,IAAI,KAAKpC,CAAM,EAC9B,OAAAoC,EAAO,SAAS,GAAI,GAAI,GAAI,GAAG,EACxBF,GAAaE,CACtB,CAAC,GAIClC,IACF0B,EAAWA,EAAS,OAAOE,GAClBA,EAAM,SAAW5B,GAAgB4B,EAAM,YAAc5B,CAC7D,GAGH,QAAQ,IAAI,4CAA6C,CACvD,OAAQN,EACR,SAAAE,EACA,OAAAE,EACA,aAAAE,EACA,YAAatB,EAAO,OACpB,eAAgBgD,EAAS,MAAA,CAC1B,EAEDrB,GAAkBqB,CAAQ,CAC5B,EAGMS,GAAoB,IAAM,CAC9BxC,EAAe,EAAE,EACjBE,EAAY,EAAE,EACdE,EAAU,EAAE,EACZE,EAAgB,EAAE,EAClBE,EAAoB,EAAK,CAC3B,EAGMiC,EAAqBC,GAAS,CAClC,MAAMC,MAAY,KACZL,EAAW,IAAI,KAAKK,CAAK,EAC/BL,EAAS,QAAQK,EAAM,QAAA,EAAYD,CAAI,EAEvCxC,EAAYoC,EAAS,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EAChDlC,EAAUuC,EAAM,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EAC3CnC,EAAoB,EAAI,CAC1B,EAEMS,GAAe,SAAY,CAC/B,GAAI,CACF,QAAQ,IAAI,6CAA6C,EACzD,MAAM2B,EAAc,MAAMtB,EAAI,0BAA0B,EACxD,QAAQ,IAAI,wCAAyCsB,CAAW,EAEhE,MAAMC,GAAcD,GAAA,YAAAA,EAAa,OAAQA,GAAe,CAAA,EACxD,QAAQ,IAAI,uCAAwCC,EAAY,OAAQ,UAAU,EAGlF,MAAMC,EAAgBD,EAAY,KAAK,CAACE,EAAGC,IAAM,CAC/C,MAAMC,EAAYtE,EAAS,OAAO6C,GAAKA,EAAE,aAAeuB,EAAE,EAAE,EAAE,OAE9D,OADkBpE,EAAS,OAAO6C,GAAKA,EAAE,aAAewB,EAAE,EAAE,EAAE,OAC3CC,CACrB,CAAC,EAED,QAAQ,IAAI,wCAAyCH,EAAc,MAAM,EACzE,QAAQ,IAAI,yCAA0CA,EAAc,MAAM,EAAG,CAAC,EAAE,IAAII,IAAM,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,IAAKA,EAAE,GAAA,EAAM,CAAC,EAClIhE,EAAW4D,CAAa,EACxB1D,EAAmB0D,CAAa,CAClC,OAASrB,EAAK,CACZ,QAAQ,MAAM,4BAA6BA,CAAG,EAC9CjD,EAAS,kCAAoCiD,EAAI,SAAW,oBAAoB,EAChFvC,EAAW,CAAA,CAAE,EACbE,EAAmB,CAAA,CAAE,CACvB,CACF,EAEM+D,GAAsBC,GAAe,CAKzC,GAJA,QAAQ,IAAI,+CAAgDA,CAAU,EACtE,QAAQ,IAAI,6CAA8CnE,EAAQ,MAAM,EAExEK,EAAgB8D,CAAU,EACtBA,EAAW,KAAA,IAAW,GACxBhE,EAAmBH,CAAO,EAC1BS,EAAsB,EAAK,MACtB,CACL,MAAMsC,EAAcoB,EAAW,YAAA,EAC/B,QAAQ,IAAI,kDAAmDpB,CAAW,EAE1E,MAAMD,EAAW9C,EAAQ,OAAOoE,GAAU,cAExC,MAAMC,EAAYD,EAAO,KAAK,YAAA,EAAc,SAASrB,CAAW,EAG1DuB,EAAYF,EAAO,KAAK,YAAA,EAAc,MAAM,GAAG,EAE/CG,EADcxB,EAAY,MAAM,GAAG,EACN,UACjCuB,EAAU,SAAiBE,GAAS,SAASC,EAAU,CAAC,CAAA,EAIpDC,IAAWC,GAAAP,EAAO,MAAP,YAAAO,GAAY,cAAc,SAAS5B,GAG9C6B,IAAaC,GAAAT,EAAO,QAAP,YAAAS,GAAc,cAAc,SAAS9B,GAGlD+B,IAAaC,GAAAX,EAAO,QAAP,YAAAW,GAAc,cAAc,SAAShC,GAElDiC,GAAUX,GAAaE,GAAkBG,IAAYE,IAAcE,GAEzE,OAAIE,IACF,QAAQ,IAAI,wBAAyBZ,EAAO,KAAM,WAAY,CAC5D,UAAAC,EAAW,eAAAE,EAAgB,SAAAG,GAAU,WAAAE,GAAY,WAAAE,EAAA,CAClD,EAGIE,EACT,CAAC,EAED,QAAQ,IAAI,kDAAmDlC,EAAS,MAAM,EAC9E3C,EAAmB2C,CAAQ,EAC3BrC,EAAsB,EAAI,CAC5B,CACF,EAEMwE,GAAsBb,GAAW,CACrC,QAAQ,IAAI,gDAAiDA,EAAO,KAAM,MAAOA,EAAO,EAAE,EAC1F7D,EAAkB6D,CAAM,EACxB/D,EAAgB+D,EAAO,IAAI,EAC3B3D,EAAsB,EAAK,EAC3BoB,EAAY,CACV,GAAGD,EACH,YAAawC,EAAO,KACpB,aAAcA,EAAO,OAAS,GAC9B,aAAcA,EAAO,OAAS,GAC9B,eAAgBA,EAAO,SAAW,EAAA,CACnC,EAED,QAAQ,IAAI,0DAA2D1E,EAAS,MAAM,EACtF,QAAQ,IAAI,0CAA2C0E,EAAO,EAAE,EAChE,QAAQ,IAAI,8DAA+D1E,EAAS,IAAI6C,IAAM,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,WAAYA,EAAE,UAAA,EAAa,CAAC,EAEpJ,MAAM2C,EAAiBxF,EAAS,UAAkByF,EAAQ,aAAef,EAAO,EAAE,EAClF,QAAQ,IAAI,iDAAkDc,EAAe,MAAM,EACnF,QAAQ,IAAI,iDAAkDA,EAAe,IAAI3C,IAAM,CAAE,GAAIA,EAAE,GAAI,KAAMA,EAAE,KAAM,WAAYA,EAAE,UAAA,EAAa,CAAC,EAC7I1C,EAAoBqF,CAAc,CACpC,EAEME,GAAoB,IAAM,CAC9B,QAAQ,IAAI,uDAAuD,EACnE7E,EAAkB,IAAI,EACtBF,EAAgB,EAAE,EAClBI,EAAsB,EAAK,EAC3BoB,EAAY,CACV,GAAGD,EACH,YAAa,GACb,aAAc,GACd,aAAc,GACd,eAAgB,GAChB,WAAY,EAAA,CACb,EACD/B,EAAoB,CAAA,CAAE,CACxB,EAEMwF,GAAoBC,GAAU,CAClC,MAAMC,EAAOD,EAAM,OAAO,MAAM,CAAC,EAC7BC,GACF1D,EAAY,CAAE,GAAGD,EAAU,cAAe2D,EAAM,CAEpD,EAEMC,GAAyBF,GAAU,CACvC,MAAMC,EAAOD,EAAM,OAAO,MAAM,CAAC,EAC7BC,GACF1D,EAAY,CAAE,GAAGD,EAAU,WAAY2D,EAAM,CAEjD,EAEME,GAAe,MAAOC,GAAM,CAGhC,GAFAA,EAAE,eAAA,EAEE,CAAC9D,EAAS,cAAe,CAC3BrC,EAAS,mCAAmC,EAC5C,MACF,CAEA,GAAI,CACFsB,EAAa,EAAI,EACjBtB,EAAS,IAAI,EAEb,MAAMoG,EAAiB,IAAI,SAC3BA,EAAe,OAAO,WAAY/D,EAAS,QAAQ,EACnD+D,EAAe,OAAO,cAAe/D,EAAS,WAAW,EACzD+D,EAAe,OAAO,eAAgB/D,EAAS,YAAY,EAC3D+D,EAAe,OAAO,eAAgB/D,EAAS,YAAY,EAC3D+D,EAAe,OAAO,iBAAkB/D,EAAS,cAAc,EAC/D+D,EAAe,OAAO,cAAe/D,EAAS,WAAW,EACzD+D,EAAe,OAAO,eAAgB/D,EAAS,YAAY,EAC3D+D,EAAe,OAAO,iBAAkB/D,EAAS,cAAc,EAC/D+D,EAAe,OAAO,cAAe/D,EAAS,WAAW,EACzD+D,EAAe,OAAO,aAAc/D,EAAS,UAAU,EACvD+D,EAAe,OAAO,gBAAiB/D,EAAS,aAAa,EAEzDA,EAAS,YACX+D,EAAe,OAAO,aAAc/D,EAAS,UAAU,EAGzD,MAAMgE,EAAW,MAAMvD,EAAI,6BAA8B,CACvD,OAAQ,OACR,KAAMsD,CAAA,CACP,EAGDlG,EAAW,0CAA0C,EAGrD,WAAW,IAAM,CACfkB,EAAmB,EAAK,EACxBkB,EAAY,CACV,SAAU,GACV,YAAa,GACb,aAAc,GACd,aAAc,GACd,eAAgB,GAChB,YAAa,GACb,aAAc,GACd,eAAgB,GAChB,cAAe,KACf,WAAY,KACZ,WAAY,GACZ,YAAa,EAAA,CACd,EAGDtB,EAAkB,IAAI,EACtBF,EAAgB,EAAE,EAClBI,EAAsB,EAAK,EAC3BM,EAAe,EAAE,EACjBE,EAAY,EAAE,EACdE,EAAU,EAAE,EACZE,EAAgB,EAAE,EAClBE,EAAoB,EAAK,CAC3B,EAAG,GAAG,CACR,OAASiB,EAAK,CACZ,QAAQ,MAAM,yBAA0BA,CAAG,EAC3CjD,EAAS,oCAAsCiD,EAAI,SAAW,oBAAoB,CACpF,QAAA,CACE3B,EAAa,EAAK,CACpB,CACF,EAEA,OACEgF,EAAAA,KAACC,GAAA,CAAU,MAAK,GACd,SAAA,CAAAC,MAACC,EAAA,CAAI,UAAU,OACb,SAAAH,EAAAA,KAACI,EAAA,CACC,SAAA,CAAAF,EAAAA,IAAC,MAAG,SAAA,+BAAA,CAA6B,EACjCA,EAAAA,IAAC,IAAA,CAAE,UAAU,aAAa,SAAA,+FAAA,CAA6F,CAAA,CAAA,CACzH,CAAA,CACF,EAECzG,GACCyG,EAAAA,IAACG,GAAA,CAAM,QAAQ,SAAS,YAAW,GAAC,QAAS,IAAM3G,EAAS,IAAI,EAC7D,SAAAD,CAAA,CACH,EAGDE,GACCuG,EAAAA,IAACG,GAAA,CAAM,QAAQ,UAAU,YAAW,GAAC,QAAS,IAAMzG,EAAW,IAAI,EAChE,SAAAD,CAAA,CACH,QAGDwG,EAAA,CACC,SAAAD,EAAAA,IAACE,GAAI,GAAI,GACP,gBAACE,EAAA,CACC,SAAA,CAAAJ,MAACI,EAAK,OAAL,CACC,SAAAN,OAAC,KAAA,CAAG,UAAU,OACZ,SAAA,CAAAE,EAAAA,IAACK,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,2BAAA,CAAA,CAE/B,CAAA,CACF,QACCD,EAAK,KAAL,CACC,SAAAN,OAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,sDAAmD,EAClFF,EAAAA,KAACQ,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM1F,EAAmB,EAAI,EAEtC,SAAA,CAAAoF,EAAAA,IAACK,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,2BAAA,CAAA,CAAA,QAG9B,IAAA,CAAE,UAAU,kBACX,SAAAL,EAAAA,IAAC,QAAA,CAAM,0DAA8C,CAAA,CACvD,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,EAGAF,EAAAA,KAACS,EAAA,CAAM,KAAM5F,GAAiB,OAAQ,IAAMC,EAAmB,EAAK,EAAG,KAAK,KAC1E,SAAA,CAAAoF,EAAAA,IAACO,EAAM,OAAN,CAAa,YAAW,GACvB,SAAAT,OAACS,EAAM,MAAN,CACC,SAAA,CAAAP,EAAAA,IAACK,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,2BAAA,CAAA,CAE/B,CAAA,CACF,QACCE,EAAM,KAAN,CACC,SAAAT,OAACU,EAAA,CAAK,SAAUd,GAEd,SAAA,CAAAI,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACS,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,6BAAA,EAE7B,EACAX,EAAAA,KAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,gBAAA,CAAc,EAC1BV,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAOnG,EACP,SAAWsF,GAAMxB,GAAmBwB,EAAE,OAAO,KAAK,EAClD,QAAS,IAAMjF,EAAsB,EAAI,EACzC,YAAY,8CACZ,UAAU,MAAA,CAAA,EAEXH,GACCyF,EAAAA,IAACM,EAAA,CACC,QAAQ,oBACR,KAAK,KACL,UAAU,yDACV,QAASjB,GACV,SAAA,GAAA,CAAA,CAED,EAEJ,EACChF,GAAgBI,GAAsBN,EAAgB,OAAS,GAC9D2F,EAAAA,KAAC,MAAA,CAAI,UAAU,sBAAsB,MAAO,CAAC,UAAW,QAAS,UAAW,QAC1E,SAAA,CAAAE,EAAAA,IAAC,OAAI,UAAU,6BACb,SAAAF,EAAAA,KAAC,QAAA,CAAM,UAAU,aACd,SAAA,CAAA3F,EAAgB,OAAO,WAASA,EAAgB,SAAW,EAAI,IAAM,GAAG,cAAYA,EAAgB,SAAW,EAAI,IAAM,EAAA,CAAA,CAC5H,CAAA,CACF,EACCA,EAAgB,IAAKkE,GACpByB,EAAAA,KAAC,MAAA,CAEC,UAAU,kDACV,QAAS,IAAMZ,GAAmBb,CAAM,EACxC,MAAO,CAAC,OAAQ,SAAA,EAEhB,SAAA,CAAA2B,EAAAA,IAAC,MAAA,CAAI,UAAU,UAAW,SAAA3B,EAAO,KAAK,EACtCyB,EAAAA,KAAC,QAAA,CAAM,UAAU,aAAa,SAAA,CAAA,QACtBzB,EAAO,IAAI,aAAWA,EAAO,MAClCA,EAAO,OAAS,WAAWA,EAAO,KAAK,EAAA,EAC1C,QACC,MAAA,CAAI,UAAU,OACb,SAAAyB,EAAAA,KAAC,QAAA,CAAM,UAAU,eAAe,SAAA,CAAA,MAC1BnG,EAAS,OAAO6C,GAAKA,EAAE,aAAe6B,EAAO,EAAE,EAAE,OAAO,YAAU1E,EAAS,OAAO6C,GAAKA,EAAE,aAAe6B,EAAO,EAAE,EAAE,SAAW,EAAI,IAAM,EAAA,CAAA,CAC9I,CAAA,CACF,CAAA,CAAA,EAdKA,EAAO,EAAA,CAgBf,CAAA,EACH,EAEDhE,GAAgBI,GAAsBN,EAAgB,SAAW,GAChE6F,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAF,OAAC,QAAA,CAAM,UAAU,aAAa,SAAA,CAAA,mCACKzF,EAAa,GAAA,CAAA,CAChD,CAAA,CACF,EAEDE,GACCuF,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAA,uBAAA,CAAqB,EAAS,IAAEzF,EAAe,WACtD,KAAA,EAAG,EACJuF,EAAAA,KAAC,QAAA,CAAM,UAAU,aAAa,SAAA,CAAA,QACtBvF,EAAe,IAAI,aAAWA,EAAe,MAClDA,EAAe,OAAS,WAAWA,EAAe,KAAK,EAAA,EAC1D,QACC,MAAA,CAAI,UAAU,OACb,SAAAuF,EAAAA,KAAC,QAAA,CAAM,UAAU,eAAe,SAAA,CAAA,MAC1BnG,EAAS,OAAO6C,GAAKA,EAAE,aAAejC,EAAe,EAAE,EAAE,OAAO,YAAUZ,EAAS,OAAO6C,GAAKA,EAAE,aAAejC,EAAe,EAAE,EAAE,SAAW,EAAI,IAAM,GAAG,cAAYZ,EAAS,OAAO6C,GAAKA,EAAE,aAAejC,EAAe,EAAE,EAAE,SAAW,EAAI,IAAM,EAAA,CAAA,CAC3P,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,EAGCA,GACCuF,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACS,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,iCAAA,EAE7B,SACCR,EAAA,CACC,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,EACP,SAAAJ,OAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,oBAAA,CAAkB,EAC9BR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAO3E,EAAS,YAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,YAAa8D,EAAE,OAAO,MAAM,EACvE,YAAY,qBACZ,SAAQ,EAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,EACAK,EAAAA,IAACE,GAAI,GAAI,EACP,gBAACM,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,mBAAA,CAAiB,EAC7BR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,QACL,MAAO3E,EAAS,aAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,aAAc8D,EAAE,OAAO,MAAM,EACxE,YAAY,mBAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,CAAA,EACF,SACCM,EAAA,CACC,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,EACP,SAAAJ,OAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,sBAAA,CAAoB,EAChCR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,MACL,MAAO3E,EAAS,aAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,aAAc8D,EAAE,OAAO,MAAM,EACxE,YAAY,sBAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,EACAK,EAAAA,IAACE,GAAI,GAAI,EACP,gBAACM,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,uBAAA,CAAqB,EACjCR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAO3E,EAAS,eAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,eAAgB8D,EAAE,OAAO,MAAM,EAC1E,YAAY,uBAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAIFG,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACU,GAAA,CAAa,UAAU,MAAA,CAAO,EAAE,8BAAA,EAEnC,EACAV,EAAAA,IAACC,EAAA,CACC,SAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,GACP,SAAAJ,EAAAA,KAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,qBAAA,CAAmB,EAG/BV,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,YAAY,mDACZ,MAAOzF,EACP,SAAW4E,GAAM3E,EAAe2E,EAAE,OAAO,KAAK,EAC9C,MAAO,CAAC,KAAM,CAAA,CAAC,CAAA,EAEjBK,EAAAA,IAACM,EAAA,CACC,QAAQ,oBACR,QAAS,IAAM9E,EAAoB,CAACD,CAAgB,EACpD,KAAK,KACN,SAAA,YAAA,CAAA,GAGCR,GAAeE,GAAYE,GAAUE,IACrC2E,EAAAA,IAACM,EAAA,CACC,QAAQ,iBACR,QAAS9C,GACT,KAAK,KACN,SAAA,WAAA,CAAA,CAED,EAEJ,EAGCjC,GACCuE,EAAAA,KAACM,EAAA,CAAK,UAAU,OACd,SAAA,CAAAJ,EAAAA,IAACI,EAAK,OAAL,CAAY,UAAU,OACrB,eAAC,QAAA,CAAM,UAAU,UAAU,SAAA,mBAAA,CAAiB,CAAA,CAC9C,QACCA,EAAK,KAAL,CAAU,UAAU,OACnB,gBAACH,EAAA,CACC,SAAA,CAAAH,EAAAA,KAACI,EAAA,CAAI,GAAI,EACP,SAAA,CAAAF,EAAAA,IAACQ,EAAK,MAAL,CAAW,UAAU,QAAQ,SAAA,cAAW,EACzCR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAOvF,EACP,SAAW0E,GAAMzE,EAAYyE,EAAE,OAAO,KAAK,EAC3C,KAAK,IAAA,CAAA,CACP,EACF,EACAG,EAAAA,KAACI,EAAA,CAAI,GAAI,EACP,SAAA,CAAAF,EAAAA,IAACQ,EAAK,MAAL,CAAW,UAAU,QAAQ,SAAA,cAAW,EACzCR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAOrF,EACP,SAAWwE,GAAMvE,EAAUuE,EAAE,OAAO,KAAK,EACzC,KAAK,IAAA,CAAA,CACP,EACF,EACAG,EAAAA,KAACI,EAAA,CAAI,GAAI,EACP,SAAA,CAAAF,EAAAA,IAACQ,EAAK,MAAL,CAAW,UAAU,QAAQ,SAAA,UAAO,EACrCV,EAAAA,KAACU,EAAK,OAAL,CACC,MAAOnF,EACP,SAAWsE,GAAMrE,EAAgBqE,EAAE,OAAO,KAAK,EAC/C,KAAK,KAEL,SAAA,CAAAK,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,qBAAkB,EAClCrE,GAAM,IAAKzC,UACT,SAAA,CAAqB,MAAOA,EAAK,GAC/B,SAAA,CAAAA,EAAK,KAAK,KAAGA,EAAK,MAAM,GAAA,CAAA,EADdA,EAAK,EAElB,CACD,CAAA,CAAA,CAAA,CACH,EACF,EACA4G,EAAAA,KAACI,EAAA,CAAI,GAAI,EACP,SAAA,CAAAF,EAAAA,IAACQ,EAAK,MAAL,CAAW,UAAU,QAAQ,SAAA,eAAY,EAC1CV,EAAAA,KAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAE,EAAAA,IAACM,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS,IAAM7C,EAAkB,CAAC,EAClC,UAAU,YACX,SAAA,IAAA,CAAA,EAGDuC,EAAAA,IAACM,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS,IAAM7C,EAAkB,EAAE,EACnC,UAAU,YACX,SAAA,KAAA,CAAA,EAGDuC,EAAAA,IAACM,EAAA,CACC,QAAQ,kBACR,KAAK,KACL,QAAS,IAAM7C,EAAkB,EAAE,EACnC,UAAU,YACX,SAAA,KAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIFqC,EAAAA,KAACU,EAAK,OAAL,CACC,MAAO3E,EAAS,SAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,SAAU8D,EAAE,OAAO,MAAM,EACpE,SAAQ,GAER,SAAA,CAAAK,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,yBAAsB,EACtC,MAAM,QAAQvE,CAAc,GAAKA,EAAe,IAAKwB,GACpD6C,EAAAA,KAAC,SAAA,CAAsB,MAAO7C,EAAM,GACjC,SAAA,CAAAA,EAAM,cAAgB,OAAOA,EAAM,EAAE,GAAG,MAAIA,EAAM,aAAeA,EAAM,eAAe,OAAKA,EAAM,OAASA,EAAM,cAAgB,CAAA,CAAA,EADtHA,EAAM,EAEnB,CACD,CAAA,CAAA,CAAA,EAIH+C,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,aACd,SAAAvE,EAAe,OAAS,EACvBqE,OAAAa,EAAAA,SAAA,CAAE,SAAA,CAAA,MACIlF,EAAe,OAAO,cAAYA,EAAe,SAAW,EAAI,KAAO,GAAG,cAAYA,EAAe,SAAW,EAAI,IAAM,GAC7H1B,EAAO,SAAW0B,EAAe,QAChCqE,EAAAA,KAAC,OAAA,CAAK,UAAU,oBAAoB,SAAA,CAAA,OAC7B/F,EAAO,OAAO,SAAA,CAAA,CACrB,CAAA,EAEJ,EAEAiG,MAAC,OAAA,CAAK,UAAU,cAAc,SAAA,6DAE9B,EAEJ,CAAA,CACF,CAAA,EACF,QAECQ,EAAK,KAAL,CAAU,UAAU,aAAa,SAAA,mEAAA,CAElC,CAAA,CAAA,CACF,EACF,EACF,SACCP,EAAA,CACC,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,EACP,SAAAJ,OAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,cAAA,CAAY,EACxBR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,SACL,KAAK,OACL,MAAO3E,EAAS,YAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,YAAa8D,EAAE,OAAO,MAAM,EACvE,YAAY,OACZ,SAAQ,EAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,EACAK,EAAAA,IAACE,GAAI,GAAI,EACP,gBAACM,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,eAAA,CAAa,EACzBR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,MAAO3E,EAAS,aAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,aAAc8D,EAAE,OAAO,MAAM,EACxE,SAAQ,EAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACAK,EAAAA,IAACC,EAAA,CACC,SAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,EACP,SAAAJ,EAAAA,KAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,gBAAA,CAAc,EAC1BV,EAAAA,KAACU,EAAK,OAAL,CACC,MAAO3E,EAAS,eAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,eAAgB8D,EAAE,OAAO,MAAM,EAC1E,SAAQ,GAER,SAAA,CAAAK,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,qBAAkB,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,gBAAgB,SAAA,yBAAsB,EACpDA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,WAAQ,EACjCA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAM,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,UAAU,SAAA,4BAAyB,EACjDA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,OAAA,CAAK,CAAA,CAAA,CAAA,CAC7B,CAAA,CACF,EACF,CAAA,CACF,CAAA,EACF,EAGAF,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACY,GAAA,CAAW,UAAU,MAAA,CAAO,EAAE,8BAAA,EAEjC,EACAd,EAAAA,KAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,mBAAA,CAAiB,EAC3BjG,EAKAuF,EAAAA,KAACU,EAAK,OAAL,CACC,MAAO3E,EAAS,WAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,WAAY8D,EAAE,OAAO,MAAM,EACtE,SAAQ,GAER,SAAA,CAAAG,EAAAA,KAAC,SAAA,CAAO,MAAM,GAAG,SAAA,CAAA,2BAAyBvF,EAAe,IAAA,EAAK,EAC7D,MAAM,QAAQV,CAAgB,GAAKA,EAAiB,IAAKuF,GACxDY,MAAC,SAAA,CAAwB,MAAOZ,EAAQ,GACrC,WAAQ,IAAA,EADEA,EAAQ,EAErB,CACD,CAAA,CAAA,CAAA,EAdHY,EAAAA,IAAC,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAAA,IAAC,QAAA,CAAM,SAAA,sDAAA,CAAoD,CAAA,CAC7D,QAeDQ,EAAK,KAAL,CAAU,UAAU,aAAa,SAAA,2CAAA,CAElC,CAAA,CAAA,CACF,CAAA,EACF,EAGAV,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACK,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,wBAAA,EAE/B,SACCJ,EAAA,CACC,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAI,GAAI,EACP,SAAAJ,OAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,mCAAA,CAAiC,EAC7CR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,OAAO,kBACP,SAAUf,EAAA,CAAA,QAEXe,EAAK,KAAL,CAAU,UAAU,aAAa,SAAA,6CAAA,CAElC,CAAA,CAAA,CACF,CAAA,CACF,EACAR,EAAAA,IAACE,GAAI,GAAI,EACP,gBAACM,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,oCAAA,CAAkC,EAC9CR,EAAAA,IAACQ,EAAK,QAAL,CACC,KAAK,OACL,OAAO,uBACP,SAAUlB,GACV,SAAQ,EAAA,CAAA,QAETkB,EAAK,KAAL,CAAU,UAAU,aAAa,SAAA,+CAAA,CAElC,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGAV,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oBACZ,SAAA,CAAAE,EAAAA,IAACY,GAAA,CAAW,UAAU,MAAA,CAAO,EAAE,+BAAA,EAEjC,EACAd,EAAAA,KAACU,EAAK,MAAL,CAAW,UAAU,OACpB,SAAA,CAAAR,EAAAA,IAACQ,EAAK,MAAL,CAAW,SAAA,aAAA,CAAW,EACvBR,EAAAA,IAACQ,EAAK,QAAL,CACC,GAAG,WACH,KAAM,EACN,MAAO3E,EAAS,YAChB,SAAW8D,GAAM7D,EAAY,CAAC,GAAGD,EAAU,YAAa8D,EAAE,OAAO,MAAM,EACvE,YAAY,wCAAA,CAAA,CACd,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EACAG,EAAAA,KAACS,EAAM,OAAN,CACC,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAO,QAAQ,YAAY,QAAS,IAAM1F,EAAmB,EAAK,EAAG,SAAA,UAAA,CAEtE,EACAoF,EAAAA,IAACM,EAAA,CACC,QAAQ,UACR,QAASZ,GACT,SAAU7E,EAET,WACCiF,EAAAA,KAAAa,EAAAA,SAAA,CACE,SAAA,CAAAX,MAACa,IAAQ,UAAU,SAAS,KAAK,KAAK,UAAU,OAAO,EAAE,aAAA,CAAA,CAE3D,EAEAf,EAAAA,KAAAa,EAAAA,SAAA,CACE,SAAA,CAAAX,EAAAA,IAACK,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,oBAAA,CAAA,CAE/B,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}