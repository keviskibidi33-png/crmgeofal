{"version":3,"file":"CotizacionInteligente-EFbjFZTP.js","sources":["../../src/pages/CotizacionInteligente.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport ModuloBase from '../components/ModuloBase';\r\nimport { createQuote } from '../services/quotes';\r\nimport { getExistingServices, listProjects, createProject } from '../services/projects';\r\nimport { getOrCreateCompany, listCompanies } from '../services/companies';\r\nimport CompanyProjectPicker from '../components/CompanyProjectPicker';\r\nimport SubserviceAutocomplete from '../components/SubserviceAutocomplete';\r\nimport './CotizacionInteligente.css';\r\nimport '../styles/autocomplete.css';\r\n\r\nconst emptyClient = {\r\n  company_name: '', ruc: '', contact_name: '', contact_phone: '', contact_email: '',\r\n  project_location: '', project_name: '',\r\n};\r\n\r\nconst emptyQuote = {\r\n  request_date: '', issue_date: '', commercial_name: '', commercial_phone: '', \r\n  payment_terms: 'adelantado', reference: '', reference_type: ['email', 'phone'], \r\n  igv: true, delivery_days: 4, category_main: 'laboratorio',\r\n};\r\n\r\nconst emptyItem = { code: '', description: '', norm: '', unit_price: 0, quantity: 1 };\r\n\r\nfunction computePartial(item) {\r\n  const u = Number(item.unit_price || 0);\r\n  const q = Number(item.quantity || 0);\r\n  return Number((u * q).toFixed(2));\r\n}\r\n\r\nfunction suggestedFileName(seq = 'xxx-XX', client = '') {\r\n  const clientName = (client || '').toUpperCase().trim() || 'NOMBRE DEL CLIENTE';\r\n  return `Cotización ${seq} LEM-GEOFAL-${clientName}`;\r\n}\r\n\r\nfunction generateQuoteCode() {\r\n  const year = new Date().getFullYear();\r\n  const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n  const day = String(new Date().getDate()).padStart(2, '0');\r\n  const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\r\n  return `COT-${year}${month}${day}-${random}`;\r\n}\r\n\r\nconst normalizeKey = (s = '') => (s || '')\r\n  .normalize('NFD')\r\n  .replace(/[\\u0300-\\u036f]/g, '')\r\n  .toUpperCase()\r\n  .trim();\r\n\r\nconst VARIANT_TEXTS = {\r\n  [normalizeKey('MUESTRA DE SUELO Y AGREGADO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('PROBETAS')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe proporcionar las probetas antes del ingreso a obra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('DENSIDAD DE CAMPO Y MUESTREO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- Para el ensayo de Densidad de campo, la cantidad de puntos/salida minimo 4 und.\\n- El cliente deberá de programar el servicio, Densidad de campo, con 24 horas de anticipación.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('EXTRACCIÓN DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  [normalizeKey('DIAMANTINA PARA PASES')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Extracción diamantina, con 24 horas de anticipación.\\n- El area de trabajo, zona de extraccion de diamantina, debera estar libre de interferencia.\\n- Para extraer la diamantina, se ubicara el acero con un escaneador.\\n- Movilizacion y desmovilizacion de equipos y del personal tecnico, estara a cargo de Geofal.`,\r\n  [normalizeKey('ALBAÑILERÍA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  [normalizeKey('VIGA BECKELMAN')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Ensayo de Deflexión, con 24 horas de anticipación.\\n- El area de trabajo tiene que estar habilitado.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP o MTC vigente de acuerdo con el alcance del laboratorio.\\n- Especificar las caracteristicas del camion`,\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n};\r\n\r\nconst getVariantText = (v) => {\r\n  const t = normalizeKey(v?.title || '');\r\n  if (VARIANT_TEXTS[t]) return VARIANT_TEXTS[t];\r\n  const entry = Object.entries(VARIANT_TEXTS).find(([k]) => t.includes(k) || k.includes(t));\r\n  return entry ? entry[1] : '';\r\n};\r\n\r\nexport default function CotizacionInteligente() {\r\n  const [variants, setVariants] = useState([]);\r\n  const [variantId, setVariantId] = useState('');\r\n  const [client, setClient] = useState(emptyClient);\r\n  const [selection, setSelection] = useState({ company_id: null, project_id: null, company: null, project: null });\r\n  const [quote, setQuote] = useState(emptyQuote);\r\n  const [items, setItems] = useState([{ ...emptyItem }]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [conditionsText, setConditionsText] = useState('');\r\n  const [lastSavedId, setLastSavedId] = useState(null);\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [projectSuggestions, setProjectSuggestions] = useState([]);\r\n  const [showProjectSuggestions, setShowProjectSuggestions] = useState(false);\r\n  const [suggestedFileName, setSuggestedFileName] = useState('');\r\n  \r\n  // Estados para el buscador de clientes\r\n  const [clients, setClients] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n  const [clientSearch, setClientSearch] = useState('');\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [showClientDropdown, setShowClientDropdown] = useState(false);\r\n  \r\n  // Etiquetas predefinidas para referencia\r\n  const referenceTypes = [\r\n    { value: 'email', label: '📧 Correo electrónico', icon: '📧' },\r\n    { value: 'phone', label: '📞 Llamada telefónica', icon: '📞' },\r\n    { value: 'ticket', label: '🎯 Sistema de tickets', icon: '🎯' },\r\n    { value: 'meeting', label: '🤝 Reunión presencial', icon: '🤝' },\r\n    { value: 'form', label: '📋 Formulario web', icon: '📋' },\r\n    { value: 'referral', label: '👥 Referido', icon: '👥' },\r\n    { value: 'other', label: '📝 Otro', icon: '📝' }\r\n  ];\r\n\r\n  // Cargar variantes\r\n  useEffect(() => {\r\n    const fallback = [\r\n      { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n      { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n      { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n      { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n      { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n      { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n      { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n      { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n    ];\r\n    setVariants(fallback);\r\n  }, []);\r\n\r\n  // Cargar proyectos existentes\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await listProjects({ page: 1, limit: 100 });\r\n        const projects = response.data || [];\r\n        setAllProjects(projects);\r\n        setProjectSuggestions(projects);\r\n      } catch (e) {\r\n        console.warn('No se pudieron cargar proyectos existentes:', e);\r\n        setAllProjects([]);\r\n        setProjectSuggestions([]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Auto-completar datos del cliente cuando se selecciona\r\n  useEffect(() => {\r\n    if (selection.company) {\r\n      setClient(prev => ({\r\n        ...prev,\r\n        company_name: selection.company.name || prev.company_name,\r\n        ruc: selection.company.ruc || prev.ruc,\r\n        contact_name: selection.company.contact_name || prev.contact_name,\r\n        contact_phone: selection.company.phone || prev.contact_phone,\r\n        contact_email: selection.company.email || prev.contact_email,\r\n        project_location: selection.project?.location || prev.project_location,\r\n        project_name: selection.project?.name || prev.project_name\r\n      }));\r\n    }\r\n  }, [selection.company, selection.project]);\r\n\r\n  // Auto-completar datos del asesor comercial\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n        if (payload.name) {\r\n          setQuote(prev => ({\r\n            ...prev,\r\n            commercial_name: payload.name,\r\n            commercial_phone: payload.phone || ''\r\n          }));\r\n        }\r\n      } catch (e) {\r\n        console.warn('No se pudo decodificar el token:', e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n\r\n  // Autocompletar desde la variante seleccionada\r\n  useEffect(() => {\r\n    if (!variantId) return;\r\n    const v = (variants || []).find(x => String(x.id) === String(variantId));\r\n    if (!v) return;\r\n    const c = v.conditions || {};\r\n    setQuote(prev => ({\r\n      ...prev,\r\n      payment_terms: c.default_payment_terms || prev.payment_terms,\r\n      igv: typeof c.default_igv === 'boolean' ? c.default_igv : prev.igv,\r\n      reference: c.default_reference || prev.reference,\r\n    }));\r\n    const extra = getVariantText(v) || v.description || '';\r\n    if (extra) setConditionsText(extra);\r\n  }, [variantId]);\r\n\r\n  const subtotal = useMemo(() => items.reduce((acc, it) => acc + computePartial(it), 0), [items]);\r\n  const igvAmount = useMemo(() => (quote.igv ? Number((subtotal * 0.18).toFixed(2)) : 0), [subtotal, quote.igv]);\r\n  const total = useMemo(() => Number((subtotal + igvAmount).toFixed(2)), [subtotal, igvAmount]);\r\n\r\n  const onAddItem = () => setItems([...items, { ...emptyItem }]);\r\n  const onRemoveItem = (idx) => setItems(items.filter((_, i) => i !== idx));\r\n  const onChangeItem = (idx, patch) => setItems(items.map((it, i) => (i === idx ? { ...it, ...patch } : it)));\r\n\r\n  // Funciones para el buscador de clientes\r\n  const fetchClients = async () => {\r\n    try {\r\n      console.log('🔍 fetchClients - Llamando a /api/companies');\r\n      const clientsData = await listCompanies({ limit: 500 });\r\n      console.log('🔍 fetchClients - Respuesta recibida:', clientsData);\r\n      \r\n      const clientsList = clientsData?.data || clientsData || [];\r\n      console.log('🔍 fetchClients - Lista de clientes:', clientsList.length, 'clientes');\r\n      \r\n      setClients(clientsList);\r\n    } catch (err) {\r\n      console.error('❌ Error fetching clients:', err);\r\n      setError('Error al cargar los clientes: ' + (err.message || 'Error desconocido'));\r\n      setClients([]);\r\n    }\r\n  };\r\n\r\n  const handleClientSearch = (searchTerm) => {\r\n    console.log('🔍 handleClientSearch - Término de búsqueda:', searchTerm);\r\n    setClientSearch(searchTerm);\r\n    \r\n    if (!searchTerm.trim()) {\r\n      setFilteredClients([]);\r\n      setShowClientDropdown(false);\r\n      return;\r\n    }\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    console.log('🔍 handleClientSearch - Búsqueda en minúsculas:', searchLower);\r\n    \r\n    const filtered = clients.filter(client => {\r\n      const nameMatch = client.name?.toLowerCase().includes(searchLower);\r\n      const rucMatch = client.ruc?.toLowerCase().includes(searchLower);\r\n      const emailMatch = client.email?.toLowerCase().includes(searchLower);\r\n      const phoneMatch = client.phone?.toLowerCase().includes(searchLower);\r\n      \r\n      // Búsqueda por palabras individuales\r\n      const nameWordsMatch = client.name?.toLowerCase().split(' ').some(word => \r\n        word.includes(searchLower)\r\n      );\r\n      \r\n      const match = nameMatch || rucMatch || emailMatch || phoneMatch || nameWordsMatch;\r\n      \r\n      if (match) {\r\n        console.log('✅ Cliente encontrado:', client.name, '- Match:', { nameMatch, nameWordsMatch, rucMatch, emailMatch, phoneMatch });\r\n      }\r\n      \r\n      return match;\r\n    });\r\n    \r\n    console.log('🔍 handleClientSearch - Resultados encontrados:', filtered.length);\r\n    setFilteredClients(filtered);\r\n    setShowClientDropdown(true);\r\n  };\r\n\r\n  const handleClientSelect = (client) => {\r\n    console.log('🔍 handleClientSelect - Cliente seleccionado:', client.name, 'ID:', client.id);\r\n    setSelectedClient(client);\r\n    setClientSearch(client.name);\r\n    setShowClientDropdown(false);\r\n    \r\n    // Llenar automáticamente los campos del cliente\r\n    setClient(prev => ({\r\n      ...prev,\r\n      company_name: client.name || '',\r\n      ruc: client.ruc || '',\r\n      contact_name: client.contact_name || '',\r\n      contact_phone: client.phone || '',\r\n      contact_email: client.email || '',\r\n      project_location: client.address || ''\r\n    }));\r\n    \r\n    console.log('✅ Campos del cliente llenados automáticamente:', {\r\n      company_name: client.name,\r\n      ruc: client.ruc,\r\n      contact_name: client.contact_name,\r\n      contact_phone: client.phone,\r\n      contact_email: client.email,\r\n      project_location: client.address\r\n    });\r\n  };\r\n\r\n  const handleClientClear = () => {\r\n    console.log('🔍 handleClientClear - Limpiando selección de cliente');\r\n    setSelectedClient(null);\r\n    setClientSearch('');\r\n    setShowClientDropdown(false);\r\n    setClient(emptyClient);\r\n  };\r\n\r\n  // Cargar clientes al montar el componente\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      if (!client.company_name) {\r\n        throw new Error('Debe ingresar al menos el nombre de la empresa');\r\n      }\r\n      \r\n      let projectId = selection.project?.id || selection.project_id;\r\n      let companyId = selection.company?.id;\r\n      \r\n      // Si no hay empresa seleccionada, crear una automáticamente\r\n      if (!companyId) {\r\n        if (!client.ruc) {\r\n          throw new Error('Debe ingresar el RUC de la empresa');\r\n        }\r\n        \r\n        // Obtener o crear empresa automáticamente\r\n        const newCompany = await getOrCreateCompany({\r\n          type: 'empresa',\r\n          ruc: client.ruc,\r\n          name: client.company_name,\r\n          address: client.project_location || '',\r\n          email: client.contact_email || '',\r\n          phone: client.contact_phone || '',\r\n          contact_name: client.contact_name || '',\r\n          city: client.project_location || '',\r\n          sector: 'servicios'\r\n        });\r\n        \r\n        companyId = newCompany.id;\r\n        console.log('✅ Empresa obtenida/creada:', newCompany);\r\n      }\r\n      \r\n      // Si no hay proyecto seleccionado, crear uno automáticamente\r\n      if (!projectId) {\r\n        // Crear proyecto automáticamente\r\n        const newProject = await createProject({\r\n          company_id: companyId,\r\n          name: client.project_name || `Proyecto ${client.company_name}`,\r\n          location: client.project_location || 'Por definir',\r\n          contact_name: client.contact_name,\r\n          contact_phone: client.contact_phone,\r\n          contact_email: client.contact_email,\r\n          status: 'activo',\r\n          project_type: 'cotizacion',\r\n          priority: 'normal'\r\n        });\r\n        \r\n        projectId = newProject.id;\r\n        console.log('✅ Proyecto creado automáticamente:', newProject);\r\n      }\r\n      \r\n      const quoteCode = generateQuoteCode();\r\n      \r\n      const payload = {\r\n        project_id: projectId,\r\n        variant_id: variantId || null,\r\n        client_contact: client.contact_name,\r\n        client_email: client.contact_email,\r\n        client_phone: client.contact_phone,\r\n        issue_date: quote.issue_date || new Date().toISOString().slice(0, 10),\r\n        subtotal,\r\n        igv: igvAmount,\r\n        total,\r\n        status: 'borrador',\r\n        reference: quote.reference,\r\n        reference_type: JSON.stringify(quote.reference_type),\r\n        category_main: quote.category_main, // ✅ NUEVO: Categoría principal\r\n        quote_code: quoteCode, // ✅ NUEVO: Código único\r\n        meta: JSON.stringify({\r\n          customer: client,\r\n          quote: {\r\n            ...quote,\r\n            request_date: quote.request_date || new Date().toISOString().slice(0, 10),\r\n            delivery_days: quote.delivery_days || 4,\r\n            reference: quote.reference,\r\n            category_main: quote.category_main, // ✅ NUEVO: Categoría en meta\r\n            quote_code: quoteCode // ✅ NUEVO: Código en meta\r\n          },\r\n          items: items, // Agregar ítems al meta\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms,\r\n          file_name: suggestedFileName || `Cotización ${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}${String(new Date().getDate()).padStart(2, '0')} LEM-GEOFAL-${client.company_name?.toUpperCase() || 'CLIENTE'}`,\r\n        })\r\n      };\r\n      \r\n      const saved = await createQuote(payload);\r\n      alert(`✅ Cotización creada exitosamente\\n📋 Código: ${quoteCode}\\n🏷️ Categoría: ${quote.category_main === 'laboratorio' ? '🧪 Laboratorio' : '⚙️ Ingeniería'}\\n📊 Ítems guardados: ${items.length} ítems\\n💰 Total: S/ ${quote.total?.toLocaleString() || '0.00'}`);\r\n      setLastSavedId(saved.id);\r\n    } catch (e) {\r\n      console.error('Error:', e);\r\n      setError(e.message || 'Error al crear cotización');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const exportFile = async (type) => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de exportar');\r\n      \r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/${type}`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      \r\n      // Obtener token de autenticación\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No se encontró token de autenticación');\r\n      }\r\n      \r\n      // Realizar la petición con el token\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Obtener el blob del archivo\r\n      const blob = await response.blob();\r\n      \r\n      // Crear URL temporal y descargar\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.download = `cotizacion-${id}.${type === 'excel' ? 'xlsx' : 'pdf'}`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n      \r\n    } catch (e) {\r\n      console.error('Error al exportar:', e);\r\n      alert(`No se pudo exportar: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  const exportDraft = async () => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de generar el borrador');\r\n      \r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/pdf-draft`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      \r\n      // Obtener token de autenticación\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No se encontró token de autenticación');\r\n      }\r\n      \r\n      // Realizar la petición con el token\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Obtener el blob del archivo\r\n      const blob = await response.blob();\r\n      \r\n      // Crear URL temporal y descargar\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.download = `cotizacion-borrador-${id}.pdf`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n      \r\n    } catch (e) {\r\n      console.error('Error al exportar borrador:', e);\r\n      alert(`No se pudo exportar borrador: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModuloBase titulo=\"📋 Cotización Inteligente\" descripcion=\"Formulario unificado para crear cotizaciones de forma rápida e intuitiva\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n      <form onSubmit={onSubmit} className=\"intelligent-quote-form\">\r\n        <div className=\"alert alert-light border mt-3 intelligent-intro\">\r\n          <h5>🚀 Flujo Simplificado</h5>\r\n          <p className=\"mb-0\">Completa los datos del cliente, proyecto y cotización. Usa el botón \"💾 GUARDAR COTIZACIÓN\" para guardar tu trabajo.</p>\r\n        </div>\r\n\r\n        {/* Sección Cliente */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">🏢</span>\r\n            <h4>CLIENTE</h4>\r\n            <span className=\"section-status\">\r\n              {client.company_name ? '✅ Cliente configurado' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            {/* Buscador de Clientes */}\r\n            <div className=\"row g-3 mb-4\">\r\n              <div className=\"col-md-12\">\r\n                <label className=\"form-label\">Buscar Cliente Existente</label>\r\n                <div className=\"position-relative\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\" \r\n                    value={clientSearch}\r\n                    onChange={(e) => handleClientSearch(e.target.value)}\r\n                    onFocus={() => setShowClientDropdown(true)}\r\n                    placeholder=\"Buscar por nombre, RUC, email o teléfono...\"\r\n                  />\r\n                  {selectedClient && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-secondary btn-sm position-absolute end-0 top-50 translate-middle-y me-2\"\r\n                      onClick={handleClientClear}\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {clientSearch && showClientDropdown && filteredClients.length > 0 && (\r\n                  <div className=\"border rounded mt-2\" style={{maxHeight: '200px', overflowY: 'auto'}}>\r\n                    <div className=\"p-2 bg-light border-bottom\">\r\n                      <small className=\"text-muted\">\r\n                        {filteredClients.length} cliente{filteredClients.length !== 1 ? 's' : ''} encontrado{filteredClients.length !== 1 ? 's' : ''}\r\n                      </small>\r\n                    </div>\r\n                    {filteredClients.map((clientItem) => (\r\n                      <div\r\n                        key={clientItem.id}\r\n                        className=\"p-2 border-bottom cursor-pointer hover-bg-light\"\r\n                        onClick={() => handleClientSelect(clientItem)}\r\n                        style={{cursor: 'pointer'}}\r\n                      >\r\n                        <div className=\"fw-bold\">{clientItem.name}</div>\r\n                        <small className=\"text-muted\">\r\n                          RUC: {clientItem.ruc} | Email: {clientItem.email}\r\n                          {clientItem.phone && ` | Tel: ${clientItem.phone}`}\r\n                        </small>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {clientSearch && showClientDropdown && filteredClients.length === 0 && (\r\n                  <div className=\"border rounded mt-2 p-3 text-center\">\r\n                    <small className=\"text-muted\">\r\n                      No se encontraron clientes con \"{clientSearch}\"\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {selectedClient && (\r\n                  <div className=\"mt-2 p-2 bg-light rounded\">\r\n                    <strong>Cliente seleccionado:</strong> {selectedClient.name}\r\n                    <br />\r\n                    <small className=\"text-muted\">\r\n                      RUC: {selectedClient.ruc} | Email: {selectedClient.email}\r\n                      {selectedClient.phone && ` | Tel: ${selectedClient.phone}`}\r\n                    </small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Campos del Cliente */}\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Empresa</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.company_name} \r\n                  onChange={e => setClient({...client, company_name: e.target.value})} \r\n                  required \r\n                  placeholder=\"Nombre de la empresa\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">R.U.C. *</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.ruc} \r\n                  onChange={e => setClient({...client, ruc: e.target.value})} \r\n                  placeholder=\"RUC de la empresa\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Contacto</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.contact_name} \r\n                  onChange={e => setClient({...client, contact_name: e.target.value})} \r\n                  required \r\n                  placeholder=\"Nombre del contacto\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Teléfono</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.contact_phone} \r\n                  onChange={e => setClient({...client, contact_phone: e.target.value})} \r\n                  placeholder=\"Teléfono del contacto\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"form-label\">Correo</label>\r\n                <input \r\n                  type=\"email\" \r\n                  className=\"form-control\" \r\n                  value={client.contact_email} \r\n                  onChange={e => setClient({...client, contact_email: e.target.value})} \r\n                  placeholder=\"Correo del contacto\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sección Proyecto */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">📁</span>\r\n            <h4>PROYECTO</h4>\r\n            <span className=\"section-status\">\r\n              {client.project_name ? '✅ Proyecto configurado' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Nombre del Proyecto</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.project_name} \r\n                  onChange={e => setClient({...client, project_name: e.target.value})} \r\n                  required \r\n                  placeholder=\"Nombre del proyecto\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Ubicación</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.project_location} \r\n                  onChange={e => setClient({...client, project_location: e.target.value})} \r\n                  placeholder=\"Ubicación del proyecto\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sección Cotización */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">📋</span>\r\n            <h4>COTIZACIÓN</h4>\r\n            <span className=\"section-status\">\r\n              {variantId ? '✅ Variante seleccionada' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Fecha de Solicitud</label>\r\n                <input \r\n                  type=\"date\" \r\n                  className=\"form-control\" \r\n                  value={quote.request_date} \r\n                  onChange={e => setQuote({...quote, request_date: e.target.value})} \r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Fecha de Emisión</label>\r\n                <input \r\n                  type=\"date\" \r\n                  className=\"form-control\" \r\n                  value={quote.issue_date} \r\n                  onChange={e => setQuote({...quote, issue_date: e.target.value})} \r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Comercial</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={quote.commercial_name} \r\n                  onChange={e => setQuote({...quote, commercial_name: e.target.value})} \r\n                  placeholder=\"Nombre del comercial\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Teléfono Comercial</label>\r\n                <input \r\n                  type=\"tel\" \r\n                  className=\"form-control\" \r\n                  value={quote.commercial_phone} \r\n                  onChange={e => setQuote({...quote, commercial_phone: e.target.value})} \r\n                  required \r\n                  placeholder=\"Teléfono del comercial\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Variante</label>\r\n                <select \r\n                  className=\"form-select\" \r\n                  value={variantId} \r\n                  onChange={e => setVariantId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Seleccionar variante</option>\r\n                  {(variants || []).map(v => (\r\n                    <option key={v.id} value={v.id}>{v.code} - {v.title}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Forma de Pago</label>\r\n                <select \r\n                  className=\"form-select\" \r\n                  value={quote.payment_terms} \r\n                  onChange={e => setQuote({...quote, payment_terms: e.target.value})}\r\n                >\r\n                  <option value=\"adelantado\">Adelantado</option>\r\n                  <option value=\"50%\">Adelanto 50% y saldo previo al informe</option>\r\n                  <option value=\"credito7\">Crédito 7 días con OS</option>\r\n                  <option value=\"credito15\">Crédito 15 días con OS</option>\r\n                  <option value=\"credito30\">Crédito 30 días con OS</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Días Hábiles</label>\r\n                <input \r\n                  type=\"number\" \r\n                  className=\"form-control\" \r\n                  value={quote.delivery_days} \r\n                  onChange={e => setQuote({...quote, delivery_days: parseInt(e.target.value) || 4})} \r\n                  min=\"1\"\r\n                  max=\"30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-check mt-4\">\r\n                  <input \r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    id=\"igv\" \r\n                    checked={quote.igv} \r\n                    onChange={e => setQuote({...quote, igv: e.target.checked})}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"igv\">\r\n                    Aplicar IGV 18%\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Referencia */}\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label\">Referencia</label>\r\n              <input \r\n                className=\"form-control\" \r\n                value={quote.reference} \r\n                onChange={e => setQuote({...quote, reference: e.target.value})} \r\n                placeholder=\"SEGÚN LO SOLICITADO VÍA CORREO ELECTRÓNICO / LLAMADA TELEFÓNICA\"\r\n              />\r\n            </div>\r\n\r\n            {/* Condiciones específicas */}\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label\">Condiciones Específicas</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows={4}\r\n                placeholder=\"Las condiciones se auto-completan según la variante seleccionada\"\r\n                value={conditionsText}\r\n                onChange={e => setConditionsText(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            {/* Selector de Categoría Principal */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"form-label\">Categoría Principal</label>\r\n              <div className=\"row g-3\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-check\">\r\n                    <input \r\n                      className=\"form-check-input\" \r\n                      type=\"radio\" \r\n                      name=\"categoryMain\" \r\n                      id=\"laboratorio\" \r\n                      value=\"laboratorio\"\r\n                      checked={quote.category_main === 'laboratorio'}\r\n                      onChange={e => setQuote({...quote, category_main: e.target.value})}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"laboratorio\">\r\n                      🧪 Laboratorio\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-check\">\r\n                    <input \r\n                      className=\"form-check-input\" \r\n                      type=\"radio\" \r\n                      name=\"categoryMain\" \r\n                      id=\"ingenieria\" \r\n                      value=\"ingenieria\"\r\n                      checked={quote.category_main === 'ingenieria'}\r\n                      onChange={e => setQuote({...quote, category_main: e.target.value})}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"ingenieria\">\r\n                      ⚙️ Ingeniería\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"alert alert-info mt-2\">\r\n                <small>\r\n                  <strong>💡 Importante:</strong> Selecciona la categoría principal para que el sistema pueda categorizar automáticamente los ítems y alimentar el embudo de ventas.\r\n                </small>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Ítems */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"form-label\">Ítems de la Cotización</label>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped\">\r\n                  <thead className=\"table-dark\">\r\n                    <tr>\r\n                      <th style={{width: '10%'}}>Código</th>\r\n                      <th style={{width: '35%'}}>Descripción</th>\r\n                      <th style={{width: '15%'}}>Norma</th>\r\n                      <th style={{width: '12%'}}>Precio Unit.</th>\r\n                      <th style={{width: '10%'}}>Cantidad</th>\r\n                      <th style={{width: '12%'}}>Parcial</th>\r\n                      <th style={{width: '6%'}}></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items.map((it, idx) => (\r\n                      <tr key={idx}>\r\n                        <td>\r\n                          <input \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.code} \r\n                            onChange={e => onChangeItem(idx, { code: e.target.value })}\r\n                            placeholder=\"Código\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <SubserviceAutocomplete\r\n                            value={it.description}\r\n                            onChange={(value) => onChangeItem(idx, { description: value })}\r\n                            onSelect={(subservice) => {\r\n                              if (subservice) {\r\n                                onChangeItem(idx, {\r\n                                  code: subservice.codigo,\r\n                                  description: subservice.descripcion,\r\n                                  norm: subservice.norma,\r\n                                  unit_price: subservice.precio\r\n                                });\r\n                              }\r\n                            }}\r\n                            placeholder=\"Buscar servicio...\"\r\n                            size=\"sm\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.norm} \r\n                            onChange={e => onChangeItem(idx, { norm: e.target.value })}\r\n                            placeholder=\"Norma\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            type=\"number\" \r\n                            step=\"0.01\" \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.unit_price} \r\n                            onChange={e => onChangeItem(idx, { unit_price: e.target.value })}\r\n                            placeholder=\"0.00\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            type=\"number\" \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.quantity} \r\n                            onChange={e => onChangeItem(idx, { quantity: e.target.value })}\r\n                            min=\"1\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"fw-bold text-success\">S/ {computePartial(it).toFixed(2)}</span>\r\n                        </td>\r\n                        <td>\r\n                          <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-sm btn-outline-danger\" \r\n                            onClick={() => onRemoveItem(idx)} \r\n                            disabled={items.length === 1}\r\n                            title=\"Eliminar ítem\"\r\n                          >\r\n                            🗑️\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onAddItem}>\r\n                  ➕ Agregar ítem\r\n                </button>\r\n                <div className=\"text-end\">\r\n                  <div className=\"h6 mb-1\">Subtotal: <span className=\"text-primary\">S/ {subtotal.toFixed(2)}</span></div>\r\n                  <div className=\"h6 mb-1\">IGV 18%: <span className=\"text-primary\">S/ {igvAmount.toFixed(2)}</span></div>\r\n                  <div className=\"h5 mb-0\">Total: <span className=\"text-success fw-bold\">S/ {total.toFixed(2)}</span></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Botones de acción */}\r\n        <div className=\"intelligent-actions\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-success btn-lg\"\r\n            disabled={saving || !client.company_name || !client.ruc}\r\n          >\r\n            {saving ? '💾 Guardando...' : '💾 GUARDAR COTIZACIÓN'}\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-primary btn-lg\"\r\n            onClick={() => window.print()}\r\n          >\r\n            👁️ Vista Previa\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-warning btn-lg\"\r\n            onClick={exportDraft}\r\n            disabled={!lastSavedId}\r\n          >\r\n            📄 PDF Borrador\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ModuloBase>\r\n  );\r\n}\r\n"],"names":["emptyClient","emptyQuote","emptyItem","computePartial","item","u","q","generateQuoteCode","year","month","day","random","normalizeKey","s","VARIANT_TEXTS","getVariantText","v","t","entry","k","CotizacionInteligente","variants","setVariants","useState","variantId","setVariantId","client","setClient","selection","setSelection","quote","setQuote","items","setItems","saving","setSaving","error","setError","conditionsText","setConditionsText","lastSavedId","setLastSavedId","allProjects","setAllProjects","projectSuggestions","setProjectSuggestions","showProjectSuggestions","setShowProjectSuggestions","suggestedFileName","setSuggestedFileName","clients","setClients","filteredClients","setFilteredClients","clientSearch","setClientSearch","selectedClient","setSelectedClient","showClientDropdown","setShowClientDropdown","useEffect","fallback","projects","listProjects","e","prev","_a","_b","token","payload","x","c","extra","subtotal","useMemo","acc","it","igvAmount","total","onAddItem","onRemoveItem","idx","_","i","onChangeItem","patch","fetchClients","clientsData","listCompanies","clientsList","err","handleClientSearch","searchTerm","searchLower","filtered","nameMatch","rucMatch","emailMatch","phoneMatch","nameWordsMatch","word","match","handleClientSelect","handleClientClear","onSubmit","projectId","companyId","newCompany","getOrCreateCompany","newProject","createProject","quoteCode","_c","saved","createQuote","_d","exportDraft","id","base","path","url","response","blob","downloadUrl","link","ModuloBase","jsxs","jsx","clientItem","SubserviceAutocomplete","value","subservice"],"mappings":"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"}