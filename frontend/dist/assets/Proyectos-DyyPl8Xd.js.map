{"version":3,"file":"Proyectos-DyyPl8Xd.js","sources":["../../src/components/ServiceSelection.jsx","../../src/components/ProjectServiceForm.jsx","../../src/services/companySearch.js","../../src/components/ProjectFormRedesigned.jsx","../../src/pages/Proyectos.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Form, Button, Badge, Spinner, Alert } from 'react-bootstrap';\r\nimport { FiCheck, FiX, FiSearch, FiFilter, FiClock, FiDollarSign } from 'react-icons/fi';\r\nimport { useQuery } from 'react-query';\r\nimport { listServices, listSubservices } from '../services/services';\r\n\r\nexport default function ServiceSelection({ \r\n  selectedServices = [], \r\n  onServicesChange\r\n}) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedEnsayo, setSelectedEnsayo] = useState(null);\r\n  const [selectedSubservices, setSelectedSubservices] = useState([]);\r\n\r\n  // Obtener todos los servicios (sin filtro de tipo)\r\n  const { data: servicesData, isLoading: isLoadingServices } = useQuery(\r\n    ['services'],\r\n    () => listServices({}),\r\n    {\r\n      staleTime: 5 * 60 * 1000, // 5 minutos\r\n      cacheTime: 10 * 60 * 1000, // 10 minutos\r\n    }\r\n  );\r\n\r\n  // Obtener subservicios cuando se selecciona un ensayo\r\n  const { data: subservicesData, isLoading: isLoadingSubservices } = useQuery(\r\n    ['subservices', selectedEnsayo?.id],\r\n    () => selectedEnsayo ? listSubservices({ service_id: selectedEnsayo.id }) : null,\r\n    {\r\n      enabled: !!selectedEnsayo,\r\n      staleTime: 5 * 60 * 1000,\r\n      cacheTime: 10 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  const services = servicesData?.data || servicesData?.rows || [];\r\n  const subservices = subservicesData?.data || subservicesData?.rows || [];\r\n\r\n  // Filtrar servicios por término de búsqueda\r\n  const filteredServices = services.filter(service =>\r\n    service.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    service.description?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Manejar selección de ensayo\r\n  const handleEnsayoSelect = (ensayo) => {\r\n    // Verificar si ya está seleccionado\r\n    const isAlreadySelected = selectedServices.some(service => service.ensayo.id === ensayo.id);\r\n    \r\n    if (isAlreadySelected) {\r\n      // Si ya está seleccionado, no hacer nada\r\n      return;\r\n    }\r\n    \r\n    // Verificar límite máximo (5 servicios)\r\n    if (selectedServices.length >= 5) {\r\n      alert('Máximo 5 servicios pueden ser seleccionados');\r\n      return;\r\n    }\r\n    \r\n    setSelectedEnsayo(ensayo);\r\n    setSelectedSubservices([]);\r\n  };\r\n\r\n  // Manejar selección de subservicios\r\n  const handleSubserviceToggle = (subservice) => {\r\n    const isSelected = selectedSubservices.some(s => s.id === subservice.id);\r\n    if (isSelected) {\r\n      setSelectedSubservices(prev => prev.filter(s => s.id !== subservice.id));\r\n    } else {\r\n      setSelectedSubservices(prev => [...prev, subservice]);\r\n    }\r\n  };\r\n\r\n  // Confirmar selección\r\n  const handleConfirmSelection = () => {\r\n    if (selectedEnsayo && selectedSubservices.length > 0) {\r\n      const newService = {\r\n        ensayo: selectedEnsayo,\r\n        subservices: selectedSubservices,\r\n        total: selectedSubservices.reduce((sum, sub) => sum + (sub.precio || 0), 0)\r\n      };\r\n      \r\n      onServicesChange([...selectedServices, newService]);\r\n      setSelectedEnsayo(null);\r\n      setSelectedSubservices([]);\r\n    }\r\n  };\r\n\r\n  // Eliminar servicio seleccionado\r\n  const handleRemoveService = (index) => {\r\n    const newServices = selectedServices.filter((_, i) => i !== index);\r\n    onServicesChange(newServices);\r\n  };\r\n\r\n  return (\r\n    <div className=\"service-selection\">\r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <h6 className=\"mb-0\">\r\n              <FiFilter className=\"me-2\" />\r\n              Selección de Servicios\r\n            </h6>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <Badge bg=\"info\">\r\n                {selectedServices.length}/5 seleccionados\r\n              </Badge>\r\n              {selectedServices.length > 0 && (\r\n                <Button \r\n                  variant=\"outline-danger\" \r\n                  size=\"sm\"\r\n                  onClick={() => onServicesChange([])}\r\n                >\r\n                  <FiX size={12} className=\"me-1\" />\r\n                  Limpiar\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {/* Búsqueda */}\r\n          <div className=\"mb-3\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Buscar servicios...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {/* Lista de servicios/ensayos */}\r\n          {isLoadingServices ? (\r\n            <div className=\"text-center py-4\">\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n              <p className=\"mt-2 text-muted\">Cargando servicios...</p>\r\n            </div>\r\n          ) : (\r\n            <Row className=\"g-3\">\r\n              {filteredServices.map((service) => {\r\n                const isSelected = selectedServices.some(s => s.ensayo.id === service.id);\r\n                const isCurrentlySelected = selectedEnsayo?.id === service.id;\r\n                \r\n                return (\r\n                  <Col md={6} lg={4} key={service.id}>\r\n                    <Card \r\n                      className={`h-100 cursor-pointer ${\r\n                        isSelected ? 'border-success' : \r\n                        isCurrentlySelected ? 'border-primary' : ''\r\n                      } ${isSelected ? 'bg-light' : ''}`}\r\n                      onClick={() => handleEnsayoSelect(service)}\r\n                    >\r\n                      <Card.Body>\r\n                        <div className=\"d-flex justify-content-between align-items-start mb-2\">\r\n                          <h6 className=\"mb-1\">{service.name}</h6>\r\n                          {isSelected ? (\r\n                            <Badge bg=\"success\">\r\n                              <FiCheck size={14} />\r\n                            </Badge>\r\n                          ) : isCurrentlySelected ? (\r\n                            <Badge bg=\"primary\">\r\n                              <FiCheck size={14} />\r\n                            </Badge>\r\n                          ) : null}\r\n                        </div>\r\n                        <p className=\"text-muted small mb-2\">\r\n                          {service.description || 'Sin descripción'}\r\n                        </p>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                          <small className=\"text-muted\">\r\n                            <FiClock className=\"me-1\" size={12} />\r\n                            {service.norma || 'N/A'}\r\n                          </small>\r\n                          <Badge bg={service.subservices_count > 0 ? 'info' : 'secondary'}>\r\n                            {service.subservices_count || 0} subservicios\r\n                          </Badge>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          )}\r\n\r\n          {/* Subservicios del ensayo seleccionado */}\r\n          {selectedEnsayo && (\r\n            <Card className=\"mt-4 border-primary\">\r\n              <Card.Header>\r\n                <h6 className=\"mb-0\">\r\n                  Subservicios de: {selectedEnsayo.name}\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {isLoadingSubservices ? (\r\n                  <div className=\"text-center py-3\">\r\n                    <Spinner animation=\"border\" size=\"sm\" variant=\"primary\" />\r\n                    <p className=\"mt-2 text-muted small\">Cargando subservicios...</p>\r\n                  </div>\r\n                ) : subservices.length > 0 ? (\r\n                  <Row className=\"g-2\">\r\n                    {subservices.map((subservice) => {\r\n                      const isSelected = selectedSubservices.some(s => s.id === subservice.id);\r\n                      return (\r\n                        <Col md={6} lg={4} key={subservice.id}>\r\n                          <Card \r\n                            className={`h-100 cursor-pointer ${isSelected ? 'border-success' : ''}`}\r\n                            onClick={() => handleSubserviceToggle(subservice)}\r\n                          >\r\n                            <Card.Body className=\"p-3\">\r\n                              <div className=\"d-flex justify-content-between align-items-start mb-2\">\r\n                                <h6 className=\"mb-1 small\">{subservice.codigo}</h6>\r\n                                {isSelected && (\r\n                                  <Badge bg=\"success\">\r\n                                    <FiCheck size={12} />\r\n                                  </Badge>\r\n                                )}\r\n                              </div>\r\n                              <p className=\"text-muted small mb-2\">\r\n                                {subservice.descripcion}\r\n                              </p>\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <small className=\"text-muted\">\r\n                                  {subservice.norma || '-'}\r\n                                </small>\r\n                                <Badge bg={subservice.precio > 0 ? 'success' : 'warning'}>\r\n                                  <FiDollarSign className=\"me-1\" size={10} />\r\n                                  {subservice.precio > 0 ? `S/ ${subservice.precio}` : 'Sujeto a evaluación'}\r\n                                </Badge>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  </Row>\r\n                ) : (\r\n                  <Alert variant=\"info\" className=\"mb-0\">\r\n                    No hay subservicios disponibles para este servicio.\r\n                  </Alert>\r\n                )}\r\n\r\n                {/* Botón de confirmación */}\r\n                {selectedSubservices.length > 0 && (\r\n                  <div className=\"mt-3 text-center\">\r\n                    <Button \r\n                      variant=\"success\" \r\n                      onClick={handleConfirmSelection}\r\n                      disabled={selectedSubservices.length === 0}\r\n                    >\r\n                      <FiCheck className=\"me-1\" />\r\n                      Agregar {selectedSubservices.length} subservicio(s) seleccionado(s)\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Servicios seleccionados */}\r\n      {selectedServices.length > 0 && (\r\n        <Card className=\"border-success\">\r\n          <Card.Header>\r\n            <h6 className=\"mb-0 text-success\">\r\n              <FiCheck className=\"me-2\" />\r\n              Servicios Seleccionados ({selectedServices.length})\r\n            </h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {selectedServices.map((service, index) => (\r\n              <Card key={index} className=\"mb-3\">\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-between align-items-start\">\r\n                    <div>\r\n                      <h6 className=\"mb-1\">{service.ensayo.name}</h6>\r\n                      <p className=\"text-muted small mb-2\">{service.ensayo.description}</p>\r\n                      <div className=\"d-flex flex-wrap gap-1\">\r\n                        {service.subservices.map((sub, subIndex) => (\r\n                          <Badge key={subIndex} bg=\"info\" className=\"me-1\">\r\n                            {sub.codigo}\r\n                          </Badge>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-end\">\r\n                      <h6 className=\"text-success mb-1\">\r\n                        S/ {service.total.toFixed(2)}\r\n                      </h6>\r\n                      <Button \r\n                        variant=\"outline-danger\" \r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveService(index)}\r\n                      >\r\n                        <FiX size={14} />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, Alert } from 'react-bootstrap';\r\nimport { FiSettings, FiHome, FiCheck } from 'react-icons/fi';\r\nimport ServiceSelection from './ServiceSelection';\r\n\r\nexport default function ProjectServiceForm({ \r\n  onServicesChange, \r\n  selectedServices = []\r\n}) {\r\n  const handleServicesChange = (services) => {\r\n    onServicesChange(services);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Header>\r\n        <h6 className=\"mb-0\">\r\n          <FiSettings className=\"me-2\" />\r\n          Configuración de Servicios del Proyecto\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {/* Información sobre la selección */}\r\n        <Alert variant=\"info\" className=\"mb-4\">\r\n          <FiHome className=\"me-2\" />\r\n          <div>\r\n            <strong>Servicios:</strong> Selecciona los servicios que necesitas para este proyecto.\r\n            <br />\r\n            <small className=\"text-muted\">\r\n              Puedes elegir entre diferentes tipos de servicios (Laboratorio, Ingeniería, etc.) \r\n              y sus subservicios correspondientes. Máximo 5 servicios.\r\n            </small>\r\n          </div>\r\n        </Alert>\r\n\r\n        {/* Componente de selección de servicios */}\r\n        <ServiceSelection\r\n          selectedServices={selectedServices}\r\n          onServicesChange={handleServicesChange}\r\n        />\r\n\r\n        {/* Resumen de servicios seleccionados */}\r\n        {selectedServices.length > 0 && (\r\n          <Card className=\"border-success mt-4\">\r\n            <Card.Header>\r\n              <h6 className=\"mb-0 text-success\">\r\n                <FiCheck className=\"me-2\" />\r\n                Resumen de Servicios Seleccionados\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-2\">\r\n                    <strong>Total de Servicios:</strong> {selectedServices.length}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Total de Subservicios:</strong> {selectedServices.reduce((sum, service) => sum + service.subservices.length, 0)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-2\">\r\n                    <strong>Subtotal:</strong> S/ {selectedServices.reduce((sum, service) => sum + service.total, 0).toFixed(2)}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>IGV (18%):</strong> S/ {(selectedServices.reduce((sum, service) => sum + service.total, 0) * 0.18).toFixed(2)}\r\n                  </div>\r\n                  <div className=\"fw-bold text-success\">\r\n                    <strong>Total:</strong> S/ {(selectedServices.reduce((sum, service) => sum + service.total, 0) * 1.18).toFixed(2)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}","import apiFetch from './api';\r\n\r\n// Buscar empresas/personas por tipo y término\r\nexport const searchCompanies = async (type, searchTerm) => {\r\n  try {\r\n    const params = new URLSearchParams({\r\n      type,\r\n      q: searchTerm\r\n    });\r\n    \r\n    const response = await apiFetch(`/companies/search?${params.toString()}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error en búsqueda de empresas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  searchCompanies\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Form, Button, Alert, Badge, ProgressBar } from 'react-bootstrap';\r\nimport { \r\n  FiUser, FiMapPin, FiMail, FiPhone, FiMessageSquare, FiSettings, \r\n  FiCheck, FiX, FiPlus, FiEdit, FiTrash2, FiDollarSign, FiClock,\r\n  FiHome, FiTool, FiBookOpen, FiShield, FiCheckCircle\r\n} from 'react-icons/fi';\r\nimport ProjectServiceForm from './ProjectServiceForm';\r\nimport { searchCompanies } from '../services/companySearch';\r\n\r\nexport default function ProjectFormRedesigned({ \r\n  data = {}, \r\n  onSubmit, \r\n  loading = false,\r\n  onCancel \r\n}) {\r\n  const [formData, setFormData] = useState({\r\n    // Tipo de cliente\r\n    clientType: '', // 'empresa' o 'persona_natural'\r\n    client_id: '',\r\n    client_name: '',\r\n    client_info: {},\r\n    \r\n    // Datos del proyecto\r\n    name: '',\r\n    location: '',\r\n    vendedor_id: '',\r\n    laboratorio_id: '',\r\n    contact_name: '',\r\n    contact_phone: '',\r\n    contact_email: '',\r\n    queries: '',\r\n    priority: 'normal',\r\n    marked: false,\r\n    // Servicios seleccionados\r\n    selectedServices: []\r\n  });\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [showServiceForm, setShowServiceForm] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  // Estados para búsqueda inteligente\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n\r\n  const totalSteps = 4;\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        ...data,\r\n        selectedServices: data.selectedServices || []\r\n      }));\r\n    }\r\n  }, [data]);\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n    \r\n    // Limpiar error del campo\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: null\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleServicesChange = (services) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      selectedServices: services\r\n    }));\r\n  };\r\n\r\n  // Búsqueda inteligente de clientes\r\n  const handleSearch = async (searchTerm) => {\r\n    if (!searchTerm || searchTerm.length < 2) {\r\n      setSearchResults([]);\r\n      setShowSearchResults(false);\r\n      return;\r\n    }\r\n\r\n    if (!formData.clientType) {\r\n      setSearchResults([]);\r\n      setShowSearchResults(false);\r\n      return;\r\n    }\r\n\r\n    setIsSearching(true);\r\n    try {\r\n      const response = await searchCompanies(formData.clientType, searchTerm);\r\n      if (response.success) {\r\n        setSearchResults(response.data || []);\r\n        setShowSearchResults(true);\r\n      } else {\r\n        setSearchResults([]);\r\n        setShowSearchResults(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en búsqueda:', error);\r\n      setSearchResults([]);\r\n      setShowSearchResults(false);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  // Seleccionar cliente\r\n  const handleSelectClient = (client) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      client_id: client.id,\r\n      client_name: client.name,\r\n      client_info: client\r\n    }));\r\n    setSearchTerm(client.name);\r\n    setShowSearchResults(false);\r\n  };\r\n\r\n  // Limpiar selección\r\n  const handleClearClient = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      client_id: '',\r\n      client_name: '',\r\n      client_info: {}\r\n    }));\r\n    setSearchTerm('');\r\n    setSearchResults([]);\r\n    setShowSearchResults(false);\r\n  };\r\n\r\n  const validateStep = (step) => {\r\n    const newErrors = {};\r\n    \r\n    switch (step) {\r\n      case 1:\r\n        if (!formData.clientType) newErrors.clientType = 'Selecciona el tipo de cliente';\r\n        if (!formData.client_id) newErrors.client_id = 'Selecciona un cliente';\r\n        if (!formData.name) newErrors.name = 'Nombre del proyecto es requerido';\r\n        if (!formData.location) newErrors.location = 'Ubicación es requerida';\r\n        break;\r\n      case 2:\r\n        if (!formData.contact_name) newErrors.contact_name = 'Persona de contacto es requerida';\r\n        if (!formData.contact_phone) newErrors.contact_phone = 'Teléfono es requerido';\r\n        break;\r\n      case 3:\r\n        if (formData.selectedServices.length === 0) {\r\n          newErrors.services = 'Debes seleccionar al menos un servicio';\r\n        }\r\n        break;\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (validateStep(currentStep)) {\r\n      setCurrentStep(prev => Math.min(prev + 1, totalSteps));\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep(prev => Math.max(prev - 1, 1));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateStep(currentStep)) {\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n\r\n  const getStepIcon = (step) => {\r\n    switch (step) {\r\n      case 1: return <FiUser />;\r\n      case 2: return <FiMessageSquare />;\r\n      case 3: return <FiSettings />;\r\n      case 4: return <FiCheckCircle />;\r\n      default: return <FiUser />;\r\n    }\r\n  };\r\n\r\n  const getStepTitle = (step) => {\r\n    switch (step) {\r\n      case 1: return 'Información Básica';\r\n      case 2: return 'Contacto';\r\n      case 3: return 'Servicios';\r\n      case 4: return 'Resumen';\r\n      default: return 'Paso';\r\n    }\r\n  };\r\n\r\n  const renderStep1 = () => (\r\n    <div className=\"step-content\">\r\n      <h5 className=\"mb-4\">\r\n        <FiUser className=\"me-2\" />\r\n        Información Básica del Proyecto\r\n      </h5>\r\n      \r\n      <Row className=\"g-3\">\r\n        {/* Selección de tipo de cliente */}\r\n        <Col md={12}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Tipo de Cliente *</Form.Label>\r\n            <div className=\"d-flex gap-3\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"empresa\"\r\n                name=\"clientType\"\r\n                label=\"Empresa\"\r\n                checked={formData.clientType === 'empresa'}\r\n                onChange={() => handleInputChange('clientType', 'empresa')}\r\n                className=\"d-flex align-items-center\"\r\n              />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"persona_natural\"\r\n                name=\"clientType\"\r\n                label=\"Persona Natural\"\r\n                checked={formData.clientType === 'persona_natural'}\r\n                onChange={() => handleInputChange('clientType', 'persona_natural')}\r\n                className=\"d-flex align-items-center\"\r\n              />\r\n            </div>\r\n            {errors.clientType && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.clientType}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n        \r\n        {/* Búsqueda inteligente */}\r\n        {formData.clientType && (\r\n          <Col md={12}>\r\n            <Form.Group>\r\n              <Form.Label className=\"fw-bold\">\r\n                Buscar {formData.clientType === 'empresa' ? 'Empresa' : 'Persona Natural'} *\r\n              </Form.Label>\r\n              <div className=\"position-relative\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    setSearchTerm(value);\r\n                    handleSearch(value);\r\n                  }}\r\n                  placeholder={`Buscar ${formData.clientType === 'empresa' ? 'empresa' : 'persona natural'}...`}\r\n                  isInvalid={!!errors.client_id}\r\n                />\r\n                {isSearching && (\r\n                  <div className=\"position-absolute top-50 end-0 translate-middle-y me-3\">\r\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Buscando...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Resultados de búsqueda */}\r\n                {showSearchResults && searchTerm && (\r\n                  <div className=\"position-absolute w-100 bg-white border rounded shadow-lg\" style={{zIndex: 1000, maxHeight: '300px', overflowY: 'auto'}}>\r\n                    {searchResults.length > 0 ? (\r\n                      searchResults.map((result, index) => (\r\n                        <div \r\n                          key={index}\r\n                          className=\"p-3 border-bottom cursor-pointer hover-bg-light\"\r\n                          onClick={() => handleSelectClient(result)}\r\n                        >\r\n                          <div className=\"fw-bold\">{result.name}</div>\r\n                          <div className=\"text-muted small\">\r\n                            {formData.clientType === 'empresa' ? result.ruc : result.dni} • {result.address}\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <div className=\"p-3 text-muted text-center\">\r\n                        No se encontraron resultados\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {errors.client_id && (\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.client_id}\r\n                </Form.Control.Feedback>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n        )}\r\n        \r\n        {/* Información del cliente seleccionado */}\r\n        {formData.client_id && (\r\n          <Col md={12}>\r\n            <Card className=\"border-success\">\r\n              <Card.Header className=\"bg-success text-white d-flex justify-content-between align-items-center\">\r\n                <h6 className=\"mb-0\">\r\n                  <FiCheckCircle className=\"me-2\" />\r\n                  Cliente Seleccionado\r\n                </h6>\r\n                <Button \r\n                  variant=\"outline-light\" \r\n                  size=\"sm\" \r\n                  onClick={handleClearClient}\r\n                  className=\"d-flex align-items-center\"\r\n                >\r\n                  <FiX className=\"me-1\" />\r\n                  Cambiar\r\n                </Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <strong>Nombre:</strong> {formData.client_name}\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <strong>{formData.clientType === 'empresa' ? 'RUC' : 'DNI'}:</strong> {formData.client_info.ruc || formData.client_info.dni}\r\n                  </div>\r\n                  <div className=\"col-md-12 mt-2\">\r\n                    <strong>Dirección:</strong> {formData.client_info.address}\r\n                  </div>\r\n                  {formData.client_info.phone && (\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <strong>Teléfono:</strong> {formData.client_info.phone}\r\n                    </div>\r\n                  )}\r\n                  {formData.client_info.email && (\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <strong>Email:</strong> {formData.client_info.email}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n        \r\n        {/* Datos del proyecto */}\r\n        <Col md={12}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Nombre del Proyecto *</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => handleInputChange('name', e.target.value)}\r\n              placeholder=\"Ingresa el nombre del proyecto\"\r\n              isInvalid={!!errors.name}\r\n            />\r\n            {errors.name && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.name}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n        \r\n        <Col md={12}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Ubicación *</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={formData.location}\r\n              onChange={(e) => handleInputChange('location', e.target.value)}\r\n              placeholder=\"Ingresa la ubicación del proyecto\"\r\n              isInvalid={!!errors.location}\r\n            />\r\n            {errors.location && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.location}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n\r\n  const renderStep2 = () => (\r\n    <div className=\"step-content\">\r\n      <h5 className=\"mb-4\">\r\n        <FiMessageSquare className=\"me-2\" />\r\n        Información de Contacto\r\n      </h5>\r\n      \r\n      <Row className=\"g-3\">\r\n        <Col md={6}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Persona de Contacto *</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={formData.contact_name}\r\n              onChange={(e) => handleInputChange('contact_name', e.target.value)}\r\n              placeholder=\"Nombre completo\"\r\n              isInvalid={!!errors.contact_name}\r\n            />\r\n            {errors.contact_name && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.contact_name}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n        \r\n        <Col md={6}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Teléfono *</Form.Label>\r\n            <Form.Control\r\n              type=\"tel\"\r\n              value={formData.contact_phone}\r\n              onChange={(e) => handleInputChange('contact_phone', e.target.value)}\r\n              placeholder=\"Número de teléfono\"\r\n              isInvalid={!!errors.contact_phone}\r\n            />\r\n            {errors.contact_phone && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.contact_phone}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n        \r\n        <Col md={12}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={formData.contact_email}\r\n              onChange={(e) => handleInputChange('contact_email', e.target.value)}\r\n              placeholder=\"Email para comunicación\"\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        \r\n        <Col md={12}>\r\n          <Form.Group>\r\n            <Form.Label className=\"fw-bold\">Consultas/Notas</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              value={formData.queries}\r\n              onChange={(e) => handleInputChange('queries', e.target.value)}\r\n              placeholder=\"Consultas, notas o comentarios adicionales\"\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n\r\n  const renderStep3 = () => (\r\n    <div className=\"step-content\">\r\n      <h5 className=\"mb-4\">\r\n        <FiSettings className=\"me-2\" />\r\n        Selección de Servicios\r\n      </h5>\r\n      \r\n      <Alert variant=\"info\" className=\"mb-4\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <FiTool className=\"me-2\" />\r\n          <div>\r\n            <strong>Selecciona los servicios que requiere este proyecto</strong>\r\n            <br />\r\n            <small>Puedes elegir entre servicios de Laboratorio o Ingeniería</small>\r\n          </div>\r\n        </div>\r\n      </Alert>\r\n      \r\n      <div className=\"mb-4\">\r\n        <Button \r\n          variant=\"outline-primary\" \r\n          onClick={() => setShowServiceForm(true)}\r\n          className=\"w-100 py-3\"\r\n          size=\"lg\"\r\n        >\r\n          <FiSettings className=\"me-2\" />\r\n          {formData.selectedServices.length > 0 \r\n            ? `Configurar Servicios (${formData.selectedServices.length} seleccionados)` \r\n            : 'Seleccionar Servicios del Proyecto'\r\n          }\r\n        </Button>\r\n        {errors.services && (\r\n          <Alert variant=\"danger\" className=\"mt-2\">\r\n            {errors.services}\r\n          </Alert>\r\n        )}\r\n      </div>\r\n      \r\n      {formData.selectedServices.length > 0 && (\r\n        <Card className=\"border-success\">\r\n          <Card.Header className=\"bg-success text-white\">\r\n            <h6 className=\"mb-0\">\r\n              <FiCheckCircle className=\"me-2\" />\r\n              Servicios Seleccionados ({formData.selectedServices.length})\r\n            </h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {formData.selectedServices.map((service, index) => (\r\n              <div key={index} className=\"mb-3 p-3 border rounded bg-light\">\r\n                <div className=\"d-flex justify-content-between align-items-start\">\r\n                  <div>\r\n                    <h6 className=\"mb-1\">{service.ensayo.name}</h6>\r\n                    <p className=\"text-muted small mb-2\">{service.ensayo.description}</p>\r\n                    <div className=\"d-flex flex-wrap gap-1\">\r\n                      {service.subservices.map((sub, subIndex) => (\r\n                        <Badge key={subIndex} bg=\"info\" className=\"me-1\">\r\n                          {sub.codigo}\r\n                        </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-end\">\r\n                    <div className=\"fw-bold text-success h5 mb-1\">\r\n                      S/ {service.total.toFixed(2)}\r\n                    </div>\r\n                    <Button \r\n                      variant=\"outline-danger\" \r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        const newServices = formData.selectedServices.filter((_, i) => i !== index);\r\n                        handleServicesChange(newServices);\r\n                      }}\r\n                    >\r\n                      <FiX size={12} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            <div className=\"mt-3 pt-3 border-top\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span>Subtotal:</span>\r\n                    <strong>S/ {formData.selectedServices.reduce((sum, service) => sum + service.total, 0).toFixed(2)}</strong>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span>IGV (18%):</span>\r\n                    <span>S/ {(formData.selectedServices.reduce((sum, service) => sum + service.total, 0) * 0.18).toFixed(2)}</span>\r\n                  </div>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <div className=\"d-flex justify-content-between fw-bold text-success h5\">\r\n                    <span>Total:</span>\r\n                    <span>S/ {(formData.selectedServices.reduce((sum, service) => sum + service.total, 0) * 1.18).toFixed(2)}</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderStep4 = () => (\r\n    <div className=\"step-content\">\r\n      <h5 className=\"mb-4\">\r\n        <FiCheckCircle className=\"me-2\" />\r\n        Resumen del Proyecto\r\n      </h5>\r\n      \r\n      <Row className=\"g-4\">\r\n        <Col md={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">Información Básica</h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"mb-2\">\r\n                <strong>Proyecto:</strong> {formData.name}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <strong>Ubicación:</strong> {formData.location}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <strong>Contacto:</strong> {formData.contact_name}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <strong>Teléfono:</strong> {formData.contact_phone}\r\n              </div>\r\n              {formData.contact_email && (\r\n                <div className=\"mb-2\">\r\n                  <strong>Email:</strong> {formData.contact_email}\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={6}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">Servicios Seleccionados</h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {formData.selectedServices.length > 0 ? (\r\n                <div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Total de Servicios:</strong> {formData.selectedServices.length}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Total de Subservicios:</strong> {formData.selectedServices.reduce((sum, service) => sum + service.subservices.length, 0)}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Subtotal:</strong> S/ {formData.selectedServices.reduce((sum, service) => sum + service.total, 0).toFixed(2)}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>IGV (18%):</strong> S/ {(formData.selectedServices.reduce((sum, service) => sum + service.total, 0) * 0.18).toFixed(2)}\r\n                  </div>\r\n                  <div className=\"fw-bold text-success h5\">\r\n                    <strong>Total:</strong> S/ {(formData.selectedServices.reduce((sum, service) => sum + service.total, 0) * 1.18).toFixed(2)}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-muted\">\r\n                  <FiX className=\"me-1\" />\r\n                  No hay servicios seleccionados\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      \r\n      {formData.queries && (\r\n        <Card className=\"mt-4\">\r\n          <Card.Header>\r\n            <h6 className=\"mb-0\">Consultas/Notas</h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <p className=\"mb-0\">{formData.queries}</p>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"project-form-redesigned\">\r\n      {/* Progress Bar */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n          <h6 className=\"mb-0\">Progreso del Formulario</h6>\r\n          <span className=\"text-muted\">{currentStep} de {totalSteps}</span>\r\n        </div>\r\n        <ProgressBar \r\n          now={(currentStep / totalSteps) * 100} \r\n          variant=\"primary\"\r\n          style={{ height: '8px' }}\r\n        />\r\n      </div>\r\n      \r\n      {/* Step Navigation */}\r\n      <div className=\"mb-4\">\r\n        <Row className=\"g-2\">\r\n          {Array.from({ length: totalSteps }, (_, index) => {\r\n            const step = index + 1;\r\n            const isActive = step === currentStep;\r\n            const isCompleted = step < currentStep;\r\n            \r\n            return (\r\n              <Col key={step} md={3}>\r\n                <div \r\n                  className={`step-indicator text-center p-3 rounded ${isActive ? 'bg-primary text-white' : isCompleted ? 'bg-success text-white' : 'bg-light'}`}\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => setCurrentStep(step)}\r\n                >\r\n                  <div className=\"mb-2\">\r\n                    {getStepIcon(step)}\r\n                  </div>\r\n                  <div className=\"small fw-bold\">\r\n                    {getStepTitle(step)}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n      \r\n      {/* Step Content */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          {currentStep === 1 && renderStep1()}\r\n          {currentStep === 2 && renderStep2()}\r\n          {currentStep === 3 && renderStep3()}\r\n          {currentStep === 4 && renderStep4()}\r\n        </Card.Body>\r\n      </Card>\r\n      \r\n      {/* Navigation Buttons */}\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Button \r\n          variant=\"outline-secondary\" \r\n          onClick={handlePrevious}\r\n          disabled={currentStep === 1}\r\n        >\r\n          <FiX className=\"me-1\" />\r\n          Anterior\r\n        </Button>\r\n        \r\n        <div>\r\n          {currentStep < totalSteps ? (\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={handleNext}\r\n              className=\"me-2\"\r\n            >\r\n              Siguiente\r\n              <FiPlus className=\"ms-1\" />\r\n            </Button>\r\n          ) : (\r\n            <Button \r\n              variant=\"success\" \r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n              className=\"me-2\"\r\n            >\r\n              {loading ? 'Creando...' : 'Crear Proyecto'}\r\n              <FiCheckCircle className=\"ms-1\" />\r\n            </Button>\r\n          )}\r\n          \r\n          <Button \r\n            variant=\"outline-danger\" \r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal de Servicios */}\r\n      {showServiceForm && (\r\n        <div className=\"modal-backdrop\" style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(0,0,0,0.5)',\r\n          zIndex: 1050,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}>\r\n          <div className=\"modal-content bg-white rounded shadow-lg\" style={{\r\n            width: '90%',\r\n            maxWidth: '1200px',\r\n            maxHeight: '90vh',\r\n            overflow: 'auto'\r\n          }}>\r\n            <div className=\"modal-header p-4 border-bottom\">\r\n              <h5 className=\"mb-0\">Seleccionar Servicios del Proyecto</h5>\r\n              <Button \r\n                variant=\"outline-secondary\" \r\n                size=\"sm\"\r\n                onClick={() => setShowServiceForm(false)}\r\n              >\r\n                <FiX />\r\n              </Button>\r\n            </div>\r\n            <div className=\"modal-body p-4\">\r\n              <ProjectServiceForm\r\n                selectedServices={formData.selectedServices}\r\n                onServicesChange={handleServicesChange}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer p-4 border-top\">\r\n              <Button \r\n                variant=\"success\" \r\n                onClick={() => setShowServiceForm(false)}\r\n              >\r\n                <FiCheck className=\"me-1\" />\r\n                Confirmar Selección\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Button, Badge, Row, Col, Card, Container, Tabs, Tab, Toast, ToastContainer } from 'react-bootstrap';\r\nimport { FiPlus, FiEdit, FiTrash2, FiHome, FiMapPin, FiCalendar, FiUser, FiCheckCircle, FiClock, FiX, FiRefreshCw, FiFolder, FiMessageCircle, FiCheck, FiSettings, FiEye, FiUsers, FiDownload, FiAlertTriangle } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport ModalForm from '../components/common/ModalForm';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport { listProjects, createProject, updateProject, deleteProject, getProjectStats, updateProjectStatus, updateProjectCategories, updateProjectQueries, updateProjectMark } from '../services/projects';\r\n// import { listCategories, listSubcategories } from '../services/categories'; // Eliminado - sistema antiguo\r\nimport { listProjectAttachments, uploadAttachment, deleteAttachment, downloadFile } from '../services/attachments';\r\nimport ProjectServiceForm from '../components/ProjectServiceForm';\r\nimport ProjectFormRedesigned from '../components/ProjectFormRedesigned';\r\n\r\nconst emptyForm = { \r\n  company_id: '', \r\n  name: '', \r\n  location: '', \r\n  vendedor_id: '', \r\n  laboratorio_id: '', \r\n  requiere_laboratorio: false, \r\n  requiere_ingenieria: false, \r\n  requiere_consultoria: false,\r\n  requiere_capacitacion: false,\r\n  requiere_auditoria: false,\r\n  contact_name: '', \r\n  contact_phone: '', \r\n  contact_email: '',\r\n  queries: '',\r\n  priority: 'normal',\r\n  marked: false\r\n  // category_id, subcategory_id, category_name, subcategory_name eliminados - sistema antiguo\r\n};\r\n\r\nexport default function Proyectos() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingProject, setEditingProject] = useState(null);\r\n  const [deletingProject, setDeletingProject] = useState(null);\r\n  const [showCategoriesModal, setShowCategoriesModal] = useState(false);\r\n  const [showQueriesModal, setShowQueriesModal] = useState(false);\r\n  const [showStatusModal, setShowStatusModal] = useState(false);\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('view');\r\n  const [editingData, setEditingData] = useState({});\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const [toastVariant, setToastVariant] = useState('success');\r\n  \r\n  // Estados para categorías eliminados - reemplazados por sistema de servicios\r\n  \r\n  // Estados para adjuntos\r\n  const [attachments, setAttachments] = useState([]);\r\n  const [uploadingFile, setUploadingFile] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  \r\n  // Estados para servicios\r\n  const [selectedServices, setSelectedServices] = useState([]);\r\n  const [showServiceForm, setShowServiceForm] = useState(false);\r\n  \r\n  // Estados para formulario rediseñado\r\n  const [useNewForm, setUseNewForm] = useState(true);\r\n  const [showNewForm, setShowNewForm] = useState(false);\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [selectedProjectType, setSelectedProjectType] = useState('');\r\n  const [selectedPriority, setSelectedPriority] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Obtener cliente pre-seleccionado desde la navegación\r\n  const selectedClient = location.state?.selectedClient;\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['projects', currentPage, searchTerm, selectedStatus, selectedCompany, selectedProjectType, selectedPriority],\r\n    () => listProjects({ \r\n      page: currentPage, \r\n      limit: 20, \r\n      search: searchTerm, \r\n      status: selectedStatus, \r\n      company_id: selectedCompany,\r\n      project_type: selectedProjectType,\r\n      priority: selectedPriority\r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: false, // No refrescar automáticamente\r\n      refetchOnMount: false, // No refrescar al montar\r\n      staleTime: 30000, // 30 segundos - considerar datos frescos\r\n      cacheTime: 300000, // 5 minutos - cachear datos\r\n      retry: 2, // Reintentar máximo 2 veces\r\n      retryDelay: 1000, // Esperar 1 segundo entre reintentos\r\n    }\r\n  );\r\n\r\n  // Estadísticas separadas\r\n  const { data: statsData, isLoading: statsLoading } = useQuery(\r\n    ['projectStats'],\r\n    getProjectStats,\r\n    {\r\n      refetchOnWindowFocus: false, // No refrescar automáticamente\r\n      refetchOnMount: false, // No refrescar al montar\r\n      staleTime: 60000, // 1 minuto - considerar datos frescos\r\n      cacheTime: 300000, // 5 minutos - cachear datos\r\n      retry: 1, // Reintentar máximo 1 vez\r\n      onSuccess: (data) => {\r\n        console.log('📊 Frontend - Estadísticas recibidas:', data);\r\n        console.log('📊 Frontend - alta_prioridad:', data?.alta_prioridad);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Código de carga de categorías eliminado - sistema antiguo removido\r\n\r\n  // Código de categorías eliminado - sistema antiguo removido\r\n\r\n  // Cargar adjuntos cuando se abra el modal de gestión\r\n  useEffect(() => {\r\n    const loadAttachments = async () => {\r\n      if (selectedProject?.id) {\r\n        try {\r\n          const attachmentsData = await listProjectAttachments(selectedProject.id);\r\n          setAttachments(attachmentsData);\r\n        } catch (error) {\r\n          console.error('Error al cargar adjuntos:', error);\r\n        }\r\n      }\r\n    };\r\n    loadAttachments();\r\n  }, [selectedProject?.id, showViewModal]);\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    queryClient.invalidateQueries('projects');\r\n    queryClient.invalidateQueries('projectStats');\r\n    setShowModal(false);\r\n    setEditingProject(null);\r\n    setDeletingProject(null);\r\n  };\r\n\r\n  const showNotification = (message, variant = 'success') => {\r\n    setToastMessage(message);\r\n    setToastVariant(variant);\r\n    setShowToast(true);\r\n    \r\n    // Auto-close después de 5 segundos\r\n    setTimeout(() => {\r\n      setShowToast(false);\r\n    }, 5000);\r\n  };\r\n\r\n  // Función para manejar búsqueda\r\n  const handleSearch = (searchValue) => {\r\n    console.log('🔍 handleSearch - Búsqueda:', searchValue);\r\n    setSearchTerm(searchValue);\r\n    setCurrentPage(1); // Resetear a la primera página\r\n    setIsSearching(true);\r\n    setTimeout(() => setIsSearching(false), 1000);\r\n  };\r\n\r\n  // Función para manejar filtros\r\n  const handleFilter = (filters) => {\r\n    console.log('🔍 handleFilter - Filtros:', filters);\r\n    setSelectedStatus(filters.status || '');\r\n    setSelectedCompany(filters.company_id || '');\r\n    setSelectedProjectType(filters.project_type || '');\r\n    setSelectedPriority(filters.priority || '');\r\n    setCurrentPage(1); // Resetear a la primera página\r\n  };\r\n\r\n  // Funciones para manejar adjuntos\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile || !selectedProject?.id) {\r\n      showNotification('❌ Por favor selecciona un archivo', 'danger');\r\n      return;\r\n    }\r\n\r\n    setUploadingFile(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      formData.append('description', `Archivo subido: ${selectedFile.name}`);\r\n\r\n      await uploadAttachment(selectedProject.id, formData);\r\n      \r\n      // Recargar adjuntos\r\n      const attachmentsData = await listProjectAttachments(selectedProject.id);\r\n      setAttachments(attachmentsData);\r\n      \r\n      setSelectedFile(null);\r\n      setUploadingFile(false);\r\n      showNotification('✅ Archivo subido correctamente', 'success');\r\n    } catch (error) {\r\n      console.error('Error al subir archivo:', error);\r\n      setUploadingFile(false);\r\n      showNotification('❌ Error al subir archivo', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleFileDownload = async (attachment) => {\r\n    try {\r\n      await downloadFile(attachment);\r\n      showNotification('✅ Archivo descargado correctamente', 'success');\r\n    } catch (error) {\r\n      console.error('Error al descargar archivo:', error);\r\n      showNotification('❌ Error al descargar archivo', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleFileDelete = async (attachmentId) => {\r\n    if (window.confirm('¿Estás seguro de que quieres eliminar este archivo?')) {\r\n      try {\r\n        await deleteAttachment(attachmentId);\r\n        \r\n        // Recargar adjuntos\r\n        const attachmentsData = await listProjectAttachments(selectedProject.id);\r\n        setAttachments(attachmentsData);\r\n        \r\n        showNotification('✅ Archivo eliminado correctamente', 'success');\r\n      } catch (error) {\r\n        console.error('Error al eliminar archivo:', error);\r\n        showNotification('❌ Error al eliminar archivo', 'danger');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Opciones de filtros específicas para proyectos\r\n  const projectFilterOptions = [\r\n    {\r\n      title: 'Por Estado',\r\n      options: [\r\n        { label: 'Pendientes', filter: { status: 'pendiente' } },\r\n        { label: 'Activos', filter: { status: 'activo' } },\r\n        { label: 'Completados', filter: { status: 'completado' } },\r\n        { label: 'Cancelados', filter: { status: 'cancelado' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Por Prioridad',\r\n      options: [\r\n        { label: '🔴 Urgente', filter: { priority: 'urgent' } },\r\n        { label: '🟠 Alta', filter: { priority: 'high' } },\r\n        { label: '🔵 Activo', filter: { priority: 'active' } },\r\n        { label: '🟢 Normal', filter: { priority: 'normal' } },\r\n        { label: '🔵 Baja', filter: { priority: 'low' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Por Tipo de Proyecto',\r\n      options: [\r\n        { label: 'Análisis de Suelos', filter: { project_type: 'Análisis de Suelos' } },\r\n        { label: 'Estudio Geotécnico', filter: { project_type: 'Estudio Geotécnico' } },\r\n        { label: 'Evaluación Ambiental', filter: { project_type: 'Evaluación Ambiental' } },\r\n        { label: 'Control de Calidad', filter: { project_type: 'Control de Calidad' } },\r\n        { label: 'Análisis de Agua', filter: { project_type: 'Análisis de Agua' } },\r\n        { label: 'Estudio de Impacto', filter: { project_type: 'Estudio de Impacto' } },\r\n        { label: 'Análisis Químico', filter: { project_type: 'Análisis Químico' } },\r\n        { label: 'Pruebas de Laboratorio', filter: { project_type: 'Pruebas de Laboratorio' } },\r\n        { label: 'Inspección Técnica', filter: { project_type: 'Inspección Técnica' } },\r\n        { label: 'Certificación de Materiales', filter: { project_type: 'Certificación de Materiales' } }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const createMutation = useMutation(createProject, {\r\n    onSuccess: () => handleMutationSuccess('Proyecto creado exitosamente'),\r\n    onError: (error) => console.error('Error creating project:', error)\r\n  });\r\n\r\n  const updateMutation = useMutation(\r\n    ({ id, data }) => updateProject(id, data),\r\n    {\r\n      onSuccess: (updatedProject) => {\r\n        console.log('✅ updateMutation - Success:', updatedProject);\r\n        // Actualizar el proyecto seleccionado con los nuevos datos\r\n        setSelectedProject(updatedProject);\r\n        setEditingData(updatedProject);\r\n        showNotification('✅ Proyecto actualizado exitosamente!', 'success');\r\n        queryClient.invalidateQueries('projects');\r\n      },\r\n      onError: (error) => {\r\n        console.error('❌ updateMutation - Error:', error);\r\n        showNotification('❌ Error al actualizar proyecto', 'danger');\r\n      }\r\n    }\r\n  );\r\n\r\n  const deleteMutation = useMutation(deleteProject, {\r\n    onSuccess: () => handleMutationSuccess('Proyecto eliminado exitosamente'),\r\n    onError: (error) => console.error('Error deleting project:', error)\r\n  });\r\n\r\n  const updateStatusMutation = useMutation(\r\n    ({ id, ...data }) => updateProjectStatus(id, data),\r\n    {\r\n      onSuccess: (updatedProject) => {\r\n        setSelectedProject(updatedProject);\r\n        setEditingData(updatedProject);\r\n        handleMutationSuccess('Estado del proyecto actualizado exitosamente');\r\n      },\r\n      onError: (error) => console.error('Error updating project status:', error)\r\n    }\r\n  );\r\n\r\n  const updateCategoriesMutation = useMutation(\r\n    ({ id, ...data }) => updateProjectCategories(id, data),\r\n    {\r\n      onSuccess: (updatedProject) => {\r\n        console.log('✅ updateCategoriesMutation - Success:', updatedProject);\r\n        // Actualizar el proyecto seleccionado con los nuevos datos\r\n        setSelectedProject(updatedProject);\r\n        setEditingData(updatedProject);\r\n        showNotification('✅ Categorías guardadas correctamente!', 'success');\r\n        queryClient.invalidateQueries('projects');\r\n      },\r\n      onError: (error) => {\r\n        console.error('❌ updateCategoriesMutation - Error:', error);\r\n        showNotification('❌ Error al guardar categorías', 'danger');\r\n      }\r\n    }\r\n  );\r\n\r\n  const updateQueriesMutation = useMutation(\r\n    ({ id, ...data }) => updateProjectQueries(id, data),\r\n    {\r\n      onSuccess: (updatedProject) => {\r\n        setSelectedProject(updatedProject);\r\n        setEditingData(updatedProject);\r\n        handleMutationSuccess('Consultas del proyecto actualizadas exitosamente');\r\n      },\r\n      onError: (error) => console.error('Error updating project queries:', error)\r\n    }\r\n  );\r\n\r\n  const updateMarkMutation = useMutation(\r\n    ({ id, ...data }) => updateProjectMark(id, data),\r\n    {\r\n      onSuccess: (updatedProject) => {\r\n        setSelectedProject(updatedProject);\r\n        setEditingData(updatedProject);\r\n        handleMutationSuccess('Proyecto marcado/desmarcado exitosamente');\r\n      },\r\n      onError: (error) => console.error('Error updating project mark:', error)\r\n    }\r\n  );\r\n\r\n  const handleCreate = () => {\r\n    // Si hay un cliente pre-seleccionado, pre-llenar el formulario\r\n    const formData = selectedClient ? {\r\n      ...emptyForm,\r\n      company_id: selectedClient.id,\r\n      name: `${selectedClient.sector || 'Proyecto'} - ${selectedClient.name}`,\r\n      location: selectedClient.city || '',\r\n      contact_name: selectedClient.contact_name || '',\r\n      contact_phone: selectedClient.phone || '',\r\n      contact_email: selectedClient.email || ''\r\n    } : emptyForm;\r\n    \r\n    setEditingProject(formData);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (project) => {\r\n    setEditingProject(project);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (project) => {\r\n    if (window.confirm(`¿Estás seguro de que quieres eliminar el proyecto \"${project.name}\"?`)) {\r\n      deleteMutation.mutate(project.id);\r\n    }\r\n  };\r\n\r\n  const handleViewCategories = (project) => {\r\n    setSelectedProject(project);\r\n    setShowCategoriesModal(true);\r\n  };\r\n\r\n  const handleViewQueries = (project) => {\r\n    setSelectedProject(project);\r\n    setShowQueriesModal(true);\r\n  };\r\n\r\n  const handleToggleMark = async (project) => {\r\n    try {\r\n      // Aquí implementarías la lógica para marcar/desmarcar\r\n      console.log('Marcar/desmarcar proyecto:', project);\r\n      // Por ahora solo mostramos un mensaje\r\n      alert(`Proyecto ${project.marked ? 'desmarcado' : 'marcado'}: ${project.name}`);\r\n    } catch (error) {\r\n      console.error('Error al marcar proyecto:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = (project) => {\r\n    setSelectedProject(project);\r\n    setShowStatusModal(true);\r\n  };\r\n\r\n  const handleViewProject = (project) => {\r\n    console.log('🔍 handleViewProject - Project recibido:', project);\r\n    console.log('🔍 handleViewProject - Project.id:', project?.id);\r\n    console.log('🔍 handleViewProject - Type of project.id:', typeof project?.id);\r\n    \r\n    setSelectedProject(project);\r\n    \r\n    // Inicializar editingData con todos los campos del proyecto\r\n    const initialEditingData = {\r\n      ...project,\r\n      // Asegurar que los campos booleanos tengan valores por defecto\r\n      requiere_laboratorio: project.requiere_laboratorio || false,\r\n      requiere_ingenieria: project.requiere_ingenieria || false,\r\n      requiere_consultoria: project.requiere_consultoria || false,\r\n      requiere_capacitacion: project.requiere_capacitacion || false,\r\n      requiere_auditoria: project.requiere_auditoria || false,\r\n      marked: project.marked || false,\r\n      priority: project.priority || 'normal',\r\n      queries: project.queries || '',\r\n      contact_name: project.contact_name || '',\r\n      contact_phone: project.contact_phone || '',\r\n      contact_email: project.contact_email || '',\r\n      category_id: project.category_id || '',\r\n      subcategory_id: project.subcategory_id || '',\r\n      category_name: project.category_name || '',\r\n      subcategory_name: project.subcategory_name || ''\r\n    };\r\n    \r\n    console.log('🔍 handleViewProject - editingData inicializado:', initialEditingData);\r\n    setEditingData(initialEditingData);\r\n    setActiveTab('view');\r\n    setShowViewModal(true);\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (editingProject.id) {\r\n      await updateMutation.mutateAsync({ id: editingProject.id, ...formData });\r\n    } else {\r\n      await createMutation.mutateAsync(formData);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      'activo': { bg: 'success', text: 'Activo' },\r\n      'pendiente': { bg: 'warning', text: 'Pendiente' },\r\n      'completado': { bg: 'primary', text: 'Completado' },\r\n      'cancelado': { bg: 'danger', text: 'Cancelado' }\r\n    };\r\n    \r\n    const config = statusConfig[status] || { bg: 'secondary', text: status };\r\n    return <Badge bg={config.bg} className=\"status-badge\">{config.text}</Badge>;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'ID',\r\n      accessor: 'id',\r\n      width: '80px'\r\n    },\r\n    {\r\n      header: 'Proyecto',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name}</div>\r\n          {row.location && (\r\n            <small className=\"text-muted\">\r\n              <FiMapPin size={12} className=\"me-1\" />\r\n              {row.location}\r\n            </small>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Tipo de Proyecto',\r\n      accessor: 'project_type',\r\n      render: (value, row) => {\r\n        const projectType = row.project_type || 'General';\r\n        let typeColor = 'secondary';\r\n        \r\n        // Asignar colores según el tipo de proyecto\r\n        switch (projectType) {\r\n          case 'Análisis de Suelos':\r\n            typeColor = 'success';\r\n            break;\r\n          case 'Estudio Geotécnico':\r\n            typeColor = 'primary';\r\n            break;\r\n          case 'Evaluación Ambiental':\r\n            typeColor = 'info';\r\n            break;\r\n          case 'Control de Calidad':\r\n            typeColor = 'warning';\r\n            break;\r\n          case 'Análisis de Agua':\r\n            typeColor = 'info';\r\n            break;\r\n          case 'Estudio de Impacto':\r\n            typeColor = 'danger';\r\n            break;\r\n          case 'Análisis Químico':\r\n            typeColor = 'primary';\r\n            break;\r\n          case 'Pruebas de Laboratorio':\r\n            typeColor = 'success';\r\n            break;\r\n          case 'Inspección Técnica':\r\n            typeColor = 'warning';\r\n            break;\r\n          case 'Certificación de Materiales':\r\n            typeColor = 'info';\r\n            break;\r\n          default:\r\n            typeColor = 'secondary';\r\n        }\r\n        \r\n        return (\r\n          <Badge bg={typeColor} className=\"px-2 py-1\">\r\n            {projectType}\r\n          </Badge>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Categoría',\r\n      accessor: 'category_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          {row.category_name && (\r\n            <Badge bg=\"primary\" className=\"px-2 py-1 mb-1 d-block\">\r\n              {row.category_name}\r\n            </Badge>\r\n          )}\r\n          {row.subcategory_name && (\r\n            <Badge bg=\"secondary\" className=\"px-2 py-1 d-block\">\r\n              {row.subcategory_name}\r\n            </Badge>\r\n          )}\r\n          {!row.category_name && (\r\n            <span className=\"text-muted\">Sin categoría</span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Empresa',\r\n      accessor: 'company_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.company_name || 'Sin empresa'}</div>\r\n          {row.company_ruc && (\r\n            <small className=\"text-muted\">RUC: {row.company_ruc}</small>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Estado',\r\n      accessor: 'status',\r\n      render: (value) => getStatusBadge(value || 'activo')\r\n    },\r\n    {\r\n      header: 'Servicios Requeridos',\r\n      accessor: 'services',\r\n      render: (value, row) => (\r\n        <div className=\"d-flex flex-wrap gap-1\">\r\n          {row.requiere_laboratorio && (\r\n            <Badge bg=\"info\" className=\"px-2 py-1\">\r\n              <FiHome size={12} className=\"me-1\" />\r\n              Laboratorio\r\n            </Badge>\r\n          )}\r\n          {row.requiere_ingenieria && (\r\n            <Badge bg=\"primary\" className=\"px-2 py-1\">\r\n              <FiUser size={12} className=\"me-1\" />\r\n              Ingeniería\r\n            </Badge>\r\n          )}\r\n          {!row.requiere_laboratorio && !row.requiere_ingenieria && (\r\n            <Badge bg=\"secondary\" className=\"px-2 py-1\">\r\n              Sin servicios\r\n            </Badge>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Prioridad',\r\n      accessor: 'priority',\r\n      render: (value, row) => {\r\n        const getPriorityDisplay = (priority) => {\r\n          switch (priority) {\r\n            case 'urgent':\r\n              return { emoji: '🔴', text: 'Urgente', color: 'text-danger', bgColor: 'bg-danger' };\r\n            case 'high':\r\n              return { emoji: '🟠', text: 'Alta', color: 'text-warning', bgColor: 'bg-warning' };\r\n            case 'active':\r\n              return { emoji: '🔵', text: 'Activo', color: 'text-info', bgColor: 'bg-info' };\r\n            case 'low':\r\n              return { emoji: '🔵', text: 'Baja', color: 'text-primary', bgColor: 'bg-primary' };\r\n            case 'normal':\r\n            default:\r\n              return { emoji: '🟢', text: 'Normal', color: 'text-success', bgColor: 'bg-success' };\r\n          }\r\n        };\r\n\r\n        const priorityInfo = getPriorityDisplay(row.priority);\r\n        \r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <span className=\"me-2\" style={{ fontSize: '1.2em' }}>\r\n              {priorityInfo.emoji}\r\n            </span>\r\n            <span className={`small ${priorityInfo.color} fw-medium`}>\r\n              {priorityInfo.text}\r\n            </span>\r\n            {/* Indicador para proyectos de alta prioridad que requieren atención del laboratorio */}\r\n            {(row.priority === 'urgent' || row.priority === 'high') && row.requiere_laboratorio && (\r\n              <span className=\"ms-2\" title=\"Requiere atención prioritaria del laboratorio\">\r\n                <FiAlertTriangle className=\"text-warning\" size={14} />\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Contacto',\r\n      accessor: 'contacto',\r\n      render: (value, row) => (\r\n        <div className=\"small\">\r\n          {row.contact_name && (\r\n            <div><strong>{row.contact_name}</strong></div>\r\n          )}\r\n          {row.contact_phone && (\r\n            <div className=\"text-muted\">{row.contact_phone}</div>\r\n          )}\r\n          {row.contact_email && (\r\n            <div className=\"text-muted\">{row.contact_email}</div>\r\n          )}\r\n          {!row.contact_name && !row.contact_phone && !row.contact_email && (\r\n            <span className=\"text-muted\">Sin contacto</span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Asignado a',\r\n      accessor: 'vendedor_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          {row.vendedor_name && (\r\n            <div className=\"d-flex align-items-center\">\r\n              <FiUser size={14} className=\"me-1 text-muted\" />\r\n              <span>{row.vendedor_name}</span>\r\n            </div>\r\n          )}\r\n          {row.laboratorio_name && (\r\n            <div className=\"d-flex align-items-center mt-1\">\r\n              <FiHome size={14} className=\"me-1 text-muted\" />\r\n              <span className=\"small text-muted\">{row.laboratorio_name}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Fecha Creación',\r\n      accessor: 'created_at',\r\n      type: 'date'\r\n    }\r\n  ];\r\n\r\n  const formFields = [\r\n    {\r\n      name: 'company_id',\r\n      label: 'Empresa/Cliente',\r\n      type: 'select',\r\n      required: true,\r\n      options: data?.companies?.map(company => ({\r\n        value: company.id,\r\n        label: `${company.name} (${company.ruc || company.dni || 'Sin RUC/DNI'})`\r\n      })) || [],\r\n      description: 'Selecciona un cliente existente o crea uno nuevo desde el módulo de clientes'\r\n    },\r\n    {\r\n      name: 'name',\r\n      label: 'Nombre del Proyecto',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el nombre del proyecto'\r\n    },\r\n    {\r\n      name: 'location',\r\n      label: 'Ubicación del Proyecto',\r\n      type: 'text',\r\n      placeholder: 'Ingresa la ubicación del proyecto',\r\n      required: true\r\n    },\r\n    // Categorías antiguas eliminadas - reemplazadas por sistema de servicios\r\n    {\r\n      name: 'contact_name',\r\n      label: 'Persona de Contacto',\r\n      type: 'text',\r\n      placeholder: 'Nombre de la persona con quien negociar',\r\n      description: 'Persona responsable del proyecto en el cliente'\r\n    },\r\n    {\r\n      name: 'contact_phone',\r\n      label: 'Teléfono de Contacto',\r\n      type: 'text',\r\n      placeholder: 'Teléfono para comunicación directa',\r\n      description: 'Número para llamadas urgentes o seguimiento'\r\n    },\r\n    {\r\n      name: 'contact_email',\r\n      label: 'Email de Contacto',\r\n      type: 'email',\r\n      placeholder: 'Email para comunicación',\r\n      description: 'Email para envío de reportes y documentos'\r\n    },\r\n    {\r\n      name: 'requiere_laboratorio',\r\n      label: 'Requiere Laboratorio',\r\n      type: 'checkbox',\r\n      description: 'Marcar si el proyecto necesita servicios de laboratorio'\r\n    },\r\n    {\r\n      name: 'requiere_ingenieria',\r\n      label: 'Requiere Ingeniería',\r\n      type: 'checkbox',\r\n      description: 'Marcar si el proyecto necesita servicios de ingeniería'\r\n    },\r\n    {\r\n      name: 'requiere_consultoria',\r\n      label: 'Requiere Consultoría',\r\n      type: 'checkbox',\r\n      description: 'Marcar si el proyecto necesita servicios de consultoría'\r\n    },\r\n    {\r\n      name: 'requiere_capacitacion',\r\n      label: 'Requiere Capacitación',\r\n      type: 'checkbox',\r\n      description: 'Marcar si el proyecto necesita servicios de capacitación'\r\n    },\r\n    {\r\n      name: 'requiere_auditoria',\r\n      label: 'Requiere Auditoría',\r\n      type: 'checkbox',\r\n      description: 'Marcar si el proyecto necesita servicios de auditoría'\r\n    },\r\n    {\r\n      name: 'queries',\r\n      label: 'Consultas del Cliente',\r\n      type: 'textarea',\r\n      placeholder: 'Ingresa las consultas o dudas del cliente...',\r\n      description: 'Preguntas o dudas específicas del cliente sobre el proyecto'\r\n    },\r\n    {\r\n      name: 'services',\r\n      label: 'Servicios del Proyecto',\r\n      type: 'custom',\r\n      component: (\r\n        <div>\r\n          <div className=\"mb-3\">\r\n            <Button \r\n              variant=\"outline-primary\" \r\n              onClick={() => setShowServiceForm(true)}\r\n              className=\"w-100\"\r\n            >\r\n              <FiSettings className=\"me-2\" />\r\n              {selectedServices.length > 0 \r\n                ? `Configurar Servicios (${selectedServices.length} seleccionados)` \r\n                : 'Seleccionar Servicios'\r\n              }\r\n            </Button>\r\n          </div>\r\n          {selectedServices.length > 0 && (\r\n            <div className=\"border rounded p-3 bg-light\">\r\n              <h6 className=\"mb-2\">Servicios Seleccionados:</h6>\r\n              {selectedServices.map((service, index) => (\r\n                <div key={index} className=\"mb-2 p-2 border rounded bg-white\">\r\n                  <div className=\"d-flex justify-content-between align-items-start\">\r\n                    <div>\r\n                      <strong>{service.ensayo.name}</strong>\r\n                      <div className=\"small text-muted\">\r\n                        {service.subservices.map(sub => sub.codigo).join(', ')}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-end\">\r\n                      <div className=\"fw-bold text-success\">\r\n                        S/ {service.total.toFixed(2)}\r\n                      </div>\r\n                      <Button \r\n                        variant=\"outline-danger\" \r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          const newServices = selectedServices.filter((_, i) => i !== index);\r\n                          setSelectedServices(newServices);\r\n                        }}\r\n                      >\r\n                        <FiX size={12} />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div className=\"mt-2 pt-2 border-top\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <strong>Subtotal:</strong>\r\n                  <strong>S/ {selectedServices.reduce((sum, service) => sum + service.total, 0).toFixed(2)}</strong>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <span>IGV (18%):</span>\r\n                  <span>S/ {(selectedServices.reduce((sum, service) => sum + service.total, 0) * 0.18).toFixed(2)}</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between fw-bold text-success\">\r\n                  <span>Total:</span>\r\n                  <span>S/ {(selectedServices.reduce((sum, service) => sum + service.total, 0) * 1.18).toFixed(2)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: 'priority',\r\n      label: 'Prioridad del Proyecto',\r\n      type: 'select',\r\n      options: [\r\n        { value: 'low', label: 'Baja' },\r\n        { value: 'normal', label: 'Normal' },\r\n        { value: 'high', label: 'Alta' },\r\n        { value: 'urgent', label: 'Urgente' }\r\n      ],\r\n      description: 'Nivel de prioridad para la ejecución del proyecto'\r\n    },\r\n    {\r\n      name: 'vendedor_id',\r\n      label: 'Vendedor Asignado',\r\n      type: 'select',\r\n      options: data?.users?.filter(user => \r\n        ['vendedor_comercial', 'jefa_comercial'].includes(user.role)\r\n      ).map(user => ({\r\n        value: user.id,\r\n        label: `${user.name} ${user.apellido}`\r\n      })) || []\r\n    },\r\n    {\r\n      name: 'laboratorio_id',\r\n      label: 'Responsable de Laboratorio',\r\n      type: 'select',\r\n      options: data?.users?.filter(user => \r\n        ['jefe_laboratorio', 'usuario_laboratorio', 'laboratorio'].includes(user.role)\r\n      ).map(user => ({\r\n        value: user.id,\r\n        label: `${user.name} ${user.apellido}`\r\n      })) || []\r\n    },\r\n    // Campos duplicados eliminados - ya existen arriba en el formulario\r\n  ];\r\n\r\n  // Calcular estadísticas\r\n  const stats = useMemo(() => {\r\n    if (statsData) {\r\n      console.log('📊 Stats - Usando estadísticas reales del backend:', statsData);\r\n      return {\r\n        total: statsData.total || 0,\r\n        activos: statsData.activos || 0,\r\n        completados: statsData.completados || 0,\r\n        pendientes: statsData.pendientes || 0,\r\n        cancelados: statsData.cancelados || 0,\r\n        alta_prioridad: statsData.alta_prioridad || 0\r\n      };\r\n    }\r\n    // Fallback: calcular desde los datos de la página actual\r\n    const projects = data?.data || [];\r\n    console.log('📊 Stats - Fallback: calculando desde página actual:', projects);\r\n    return {\r\n      total: projects.length,\r\n      activos: projects.filter(p => p.status === 'activo').length,\r\n      completados: projects.filter(p => p.status === 'completado').length,\r\n      pendientes: projects.filter(p => p.status === 'pendiente').length,\r\n      cancelados: projects.filter(p => p.status === 'cancelado').length,\r\n      alta_prioridad: projects.filter(p => p.priority === 'urgent' || p.priority === 'high').length\r\n    };\r\n  }, [statsData, data]);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"py-4\">\r\n        <div className=\"fade-in\">\r\n          <PageHeader\r\n            title=\"Gestión de Proyectos\"\r\n            subtitle={selectedClient ? `Crear proyecto para: ${selectedClient.name}` : \"Crear, editar y gestionar proyectos del sistema\"}\r\n            icon={FiHome}\r\n            actions={\r\n              <div className=\"d-flex gap-2\">\r\n                {selectedClient && (\r\n                  <Badge bg=\"info\" className=\"px-3 py-2 d-flex align-items-center\">\r\n                    <FiUser className=\"me-1\" />\r\n                    Cliente: {selectedClient.name}\r\n                  </Badge>\r\n                )}\r\n                <Button variant=\"primary\" onClick={() => setShowNewForm(true)}>\r\n                  <FiPlus className=\"me-2\" />\r\n                  {selectedClient ? 'Crear Proyecto' : 'Nuevo Proyecto'}\r\n                </Button>\r\n              </div>\r\n            }\r\n          />\r\n\r\n          {/* Estadísticas */}\r\n          <Row className=\"g-4 mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Proyectos\"\r\n              value={stats.total}\r\n              icon={FiHome}\r\n              color=\"primary\"\r\n              subtitle=\"Proyectos registrados\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Proyectos Activos\"\r\n              value={stats.activos}\r\n              icon={FiCheckCircle}\r\n              color=\"success\"\r\n              subtitle=\"En desarrollo\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Alta Prioridad\"\r\n              value={stats.alta_prioridad || 0}\r\n              icon={FiAlertTriangle}\r\n              color=\"danger\"\r\n              subtitle=\"🔴 Urgente + 🟠 Alta\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Pendientes\"\r\n              value={stats.pendientes}\r\n              icon={FiClock}\r\n              color=\"warning\"\r\n              subtitle=\"Por iniciar\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Tabla de proyectos */}\r\n        <Card className=\"shadow-sm border-0\">\r\n          <Card.Header className=\"bg-white border-bottom\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiHome className=\"me-2 text-primary\" />\r\n                Lista de Proyectos\r\n              </h5>\r\n              <div className=\"d-flex align-items-center gap-2\">\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  onClick={() => refetch()}\r\n                  className=\"d-flex align-items-center\"\r\n                  title=\"Actualizar datos\"\r\n                >\r\n                  <FiRefreshCw className={`${isLoading ? 'spinning' : ''}`} />\r\n                </Button>\r\n              <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\r\n                {stats.total} proyectos\r\n              </Badge>\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              data={data?.data || []}\r\n              columns={columns}\r\n              loading={isLoading || isSearching}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              actions={[\r\n                { label: 'Gestionar', icon: FiEye, onClick: handleViewProject, variant: 'outline-primary' },\r\n                { label: 'Eliminar', icon: FiTrash2, onClick: handleDelete, variant: 'outline-danger' }\r\n              ]}\r\n              emptyMessage=\"No hay proyectos registrados\"\r\n              // Props para paginación del backend\r\n              totalItems={data?.total || 0}\r\n              itemsPerPage={20}\r\n              currentPage={currentPage}\r\n              onPageChange={setCurrentPage}\r\n              onSearch={handleSearch}\r\n              onFilter={handleFilter}\r\n              // Filtros específicos para proyectos\r\n              filterOptions={projectFilterOptions}\r\n              // Función para estilos de fila\r\n              getRowClassName={(project) => {\r\n                if (project.status === 'cancelado') {\r\n                  return 'table-secondary opacity-50 text-muted';\r\n                }\r\n                return '';\r\n              }}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      <ModalForm\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        title={editingProject?.id ? 'Editar Proyecto' : 'Nuevo Proyecto'}\r\n        data={editingProject || emptyForm}\r\n        fields={formFields}\r\n        onSubmit={handleSubmit}\r\n        loading={createMutation.isLoading || updateMutation.isLoading}\r\n        submitText={editingProject?.id ? 'Actualizar' : 'Crear'}\r\n      />\r\n\r\n      {/* Modal Unificado para Gestionar Proyecto */}\r\n      <ModalForm\r\n        show={showViewModal}\r\n        onHide={() => setShowViewModal(false)}\r\n        title={`Gestionar Proyecto - ${selectedProject?.name || ''}`}\r\n        data={editingData}\r\n        fields={[\r\n          {\r\n            name: 'project_management',\r\n            label: 'Gestión del Proyecto',\r\n            type: 'custom',\r\n            render: (project) => (\r\n              <Tabs\r\n                activeKey={activeTab}\r\n                onSelect={(k) => setActiveTab(k)}\r\n                className=\"mb-3\"\r\n              >\r\n                {/* Tab Ver */}\r\n                <Tab eventKey=\"view\" title={\r\n                  <span>\r\n                    <FiEye className=\"me-1\" />\r\n                    Ver\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"border rounded p-3 h-100\">\r\n                        <h6 className=\"text-primary mb-3\">\r\n                          <FiHome className=\"me-2\" />\r\n                          Datos Generales\r\n                        </h6>\r\n                        <div className=\"mb-2\">\r\n                          <strong>ID:</strong> {project.id}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Nombre:</strong> {project.name}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Ubicación:</strong> {project.location}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Tipo:</strong> \r\n                          <Badge bg=\"info\" className=\"ms-2\">{project.project_type}</Badge>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Estado:</strong> \r\n                          <Badge bg=\"primary\" className=\"ms-2\">{project.status}</Badge>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"border rounded p-3 h-100\">\r\n                        <h6 className=\"text-success mb-3\">\r\n                          <FiUser className=\"me-2\" />\r\n                          Información de Contacto\r\n                        </h6>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Empresa:</strong> {project.company_name}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>RUC:</strong> {project.company_ruc}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Contacto:</strong> {project.contact_name || 'Sin contacto'}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Teléfono:</strong> {project.contact_phone || 'Sin teléfono'}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Email:</strong> {project.contact_email || 'Sin email'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"border rounded p-3 h-100\">\r\n                        <h6 className=\"text-warning mb-3\">\r\n                          <FiSettings className=\"me-2\" />\r\n                          Servicios Requeridos\r\n                        </h6>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Laboratorio:</strong> \r\n                          {project.requiere_laboratorio ? (\r\n                            <Badge bg=\"info\" className=\"ms-2\">Requerido</Badge>\r\n                          ) : (\r\n                            <Badge bg=\"secondary\" className=\"ms-2\">No requerido</Badge>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Ingeniería:</strong> \r\n                          {project.requiere_ingenieria ? (\r\n                            <Badge bg=\"success\" className=\"ms-2\">Requerido</Badge>\r\n                          ) : (\r\n                            <Badge bg=\"secondary\" className=\"ms-2\">No requerido</Badge>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Estado Lab:</strong> \r\n                          <Badge bg=\"info\" className=\"ms-2\">{project.laboratorio_status}</Badge>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Estado Ing:</strong> \r\n                          <Badge bg=\"success\" className=\"ms-2\">{project.ingenieria_status}</Badge>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"border rounded p-3 h-100\">\r\n                        <h6 className=\"text-info mb-3\">\r\n                          <FiUsers className=\"me-2\" />\r\n                          Asignaciones\r\n                        </h6>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Vendedor:</strong> {project.vendedor_name || 'Sin asignar'}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Laboratorio:</strong> {project.laboratorio_name || 'Sin asignar'}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Fecha Creación:</strong> {new Date(project.created_at).toLocaleDateString()}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <strong>Última Actualización:</strong> {new Date(project.updated_at).toLocaleDateString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {project.status_notes && (\r\n                      <div className=\"col-12\">\r\n                        <div className=\"border rounded p-3\">\r\n                          <h6 className=\"text-muted mb-3\">\r\n                            <FiMessageCircle className=\"me-2\" />\r\n                            Notas del Estado\r\n                          </h6>\r\n                          <p className=\"mb-0\">{project.status_notes}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Editar */}\r\n                <Tab eventKey=\"edit\" title={\r\n                  <span>\r\n                    <FiEdit className=\"me-1\" />\r\n                    Editar\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Nombre del Proyecto</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={editingData.name || ''} \r\n                          onChange={(e) => setEditingData({...editingData, name: e.target.value})}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Ubicación</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={editingData.location || ''} \r\n                          onChange={(e) => setEditingData({...editingData, location: e.target.value})}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Persona de Contacto</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={editingData.contact_name || ''} \r\n                          onChange={(e) => setEditingData({...editingData, contact_name: e.target.value})}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Teléfono de Contacto</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          className=\"form-control\" \r\n                          value={editingData.contact_phone || ''} \r\n                          onChange={(e) => setEditingData({...editingData, contact_phone: e.target.value})}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Email de Contacto</label>\r\n                        <input \r\n                          type=\"email\" \r\n                          className=\"form-control\" \r\n                          value={editingData.contact_email || ''} \r\n                          onChange={(e) => setEditingData({...editingData, contact_email: e.target.value})}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <Button \r\n                        variant=\"primary\" \r\n                        onClick={() => {\r\n                          const projectId = selectedProject?.id;\r\n                          \r\n                          if (!projectId) {\r\n                            console.error('No se encontró el ID del proyecto');\r\n                            showNotification('❌ Error: No se encontró el ID del proyecto', 'danger');\r\n                            return;\r\n                          }\r\n                          \r\n                          // Asegurar que projectId sea un número\r\n                          const numericId = typeof projectId === 'object' ? projectId.id : projectId;\r\n                          \r\n                          // Llamar a la mutación con manejo de respuesta\r\n                          updateMutation.mutate({ \r\n                            id: numericId, \r\n                            data: editingData\r\n                          }, {\r\n                            onSuccess: (data) => {\r\n                              showNotification('✅ Proyecto actualizado exitosamente!', 'success');\r\n                            },\r\n                            onError: (error) => {\r\n                              console.error('❌ Guardar Cambios - Error:', error);\r\n                              showNotification('❌ Error al actualizar proyecto', 'danger');\r\n                            }\r\n                          });\r\n                        }}\r\n                        disabled={updateMutation.isLoading}\r\n                      >\r\n                        {updateMutation.isLoading ? 'Guardando...' : 'Guardar Cambios'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Estado */}\r\n                <Tab eventKey=\"status\" title={\r\n                  <span>\r\n                    <FiSettings className=\"me-1\" />\r\n                    Estado\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Estado del Proyecto</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={editingData.status || ''} \r\n                          onChange={(e) => setEditingData({...editingData, status: e.target.value})}\r\n                        >\r\n                          <option value=\"pendiente\">Pendiente</option>\r\n                          <option value=\"activo\">Activo</option>\r\n                          <option value=\"en_proceso\">En Proceso</option>\r\n                          <option value=\"completado\">Completado</option>\r\n                          <option value=\"pausado\">Pausado</option>\r\n                          <option value=\"cancelado\">Cancelado</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Estado del Laboratorio</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={editingData.laboratorio_status || ''} \r\n                          onChange={(e) => setEditingData({...editingData, laboratorio_status: e.target.value})}\r\n                        >\r\n                          <option value=\"no_requerido\">No Requerido</option>\r\n                          <option value=\"pendiente\">Pendiente</option>\r\n                          <option value=\"en_proceso\">En Proceso</option>\r\n                          <option value=\"completado\">Completado</option>\r\n                          <option value=\"pausado\">Pausado</option>\r\n                          <option value=\"cancelado\">Cancelado</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Estado de Ingeniería</label>\r\n                        <select \r\n                          className=\"form-select\" \r\n                          value={editingData.ingenieria_status || ''} \r\n                          onChange={(e) => setEditingData({...editingData, ingenieria_status: e.target.value})}\r\n                        >\r\n                          <option value=\"no_requerido\">No Requerido</option>\r\n                          <option value=\"pendiente\">Pendiente</option>\r\n                          <option value=\"en_proceso\">En Proceso</option>\r\n                          <option value=\"completado\">Completado</option>\r\n                          <option value=\"pausado\">Pausado</option>\r\n                          <option value=\"cancelado\">Cancelado</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Notas del Estado</label>\r\n                        <textarea \r\n                          className=\"form-control\" \r\n                          rows=\"3\"\r\n                          value={editingData.status_notes || ''} \r\n                          onChange={(e) => setEditingData({...editingData, status_notes: e.target.value})}\r\n                          placeholder=\"Agrega comentarios sobre el cambio de estado...\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <Button \r\n                        variant=\"success\" \r\n                        onClick={() => {\r\n                          const projectId = selectedProject?.id;\r\n                          if (!projectId) {\r\n                            console.error('No se encontró el ID del proyecto');\r\n                            showNotification('❌ Error: No se encontró el ID del proyecto', 'danger');\r\n                            return;\r\n                          }\r\n                          \r\n                          updateStatusMutation.mutate({ id: projectId, ...editingData }, {\r\n                            onSuccess: (data) => {\r\n                              console.log('✅ Actualizar Estado - Éxito:', data);\r\n                              showNotification('✅ Estado actualizado correctamente!', 'success');\r\n                            },\r\n                            onError: (error) => {\r\n                              console.error('❌ Actualizar Estado - Error:', error);\r\n                              showNotification('❌ Error al actualizar estado', 'danger');\r\n                            }\r\n                          });\r\n                        }}\r\n                        disabled={updateStatusMutation.isLoading}\r\n                      >\r\n                        {updateStatusMutation.isLoading ? 'Actualizando...' : 'Actualizar Estado'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Categorías */}\r\n                <Tab eventKey=\"categories\" title={\r\n                  <span>\r\n                    <FiFolder className=\"me-1\" />\r\n                    Categorías\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-12\">\r\n                      <h6 className=\"mb-3\">Categorías del Proyecto</h6>\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"cat_laboratorio\"\r\n                          checked={editingData.requiere_laboratorio || false}\r\n                          onChange={(e) => {\r\n                            console.log('🔍 requiere_laboratorio onChange:', e.target.checked);\r\n                            setEditingData({...editingData, requiere_laboratorio: e.target.checked});\r\n                          }}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"cat_laboratorio\">\r\n                          Laboratorio\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"cat_ingenieria\"\r\n                          checked={editingData.requiere_ingenieria || false}\r\n                          onChange={(e) => setEditingData({...editingData, requiere_ingenieria: e.target.checked})}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"cat_ingenieria\">\r\n                          Ingeniería\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"cat_consultoria\"\r\n                          checked={editingData.requiere_consultoria || false}\r\n                          onChange={(e) => setEditingData({...editingData, requiere_consultoria: e.target.checked})}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"cat_consultoria\">\r\n                          Consultoría\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"cat_capacitacion\"\r\n                          checked={editingData.requiere_capacitacion || false}\r\n                          onChange={(e) => setEditingData({...editingData, requiere_capacitacion: e.target.checked})}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"cat_capacitacion\">\r\n                          Capacitación\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"cat_auditoria\"\r\n                          checked={editingData.requiere_auditoria || false}\r\n                          onChange={(e) => setEditingData({...editingData, requiere_auditoria: e.target.checked})}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"cat_auditoria\">\r\n                          Auditoría\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <Button \r\n                        variant=\"info\" \r\n                        onClick={() => {\r\n                          const projectId = selectedProject?.id;\r\n                          if (!projectId) {\r\n                            console.error('No se encontró el ID del proyecto');\r\n                            showNotification('❌ Error: No se encontró el ID del proyecto', 'danger');\r\n                            return;\r\n                          }\r\n                          \r\n                          updateCategoriesMutation.mutate({ \r\n                            id: projectId, \r\n                            requiere_laboratorio: editingData.requiere_laboratorio || false,\r\n                            requiere_ingenieria: editingData.requiere_ingenieria || false,\r\n                            requiere_consultoria: editingData.requiere_consultoria || false,\r\n                            requiere_capacitacion: editingData.requiere_capacitacion || false,\r\n                            requiere_auditoria: editingData.requiere_auditoria || false\r\n                          }, {\r\n                            onSuccess: (data) => {\r\n                              console.log('✅ Guardar Categorías - Éxito:', data);\r\n                              showNotification('✅ Categorías guardadas correctamente!', 'success');\r\n                            },\r\n                            onError: (error) => {\r\n                              console.error('❌ Guardar Categorías - Error:', error);\r\n                              showNotification('❌ Error al guardar categorías', 'danger');\r\n                            }\r\n                          });\r\n                        }}\r\n                        disabled={updateCategoriesMutation.isLoading}\r\n                      >\r\n                        {updateCategoriesMutation.isLoading ? 'Guardando...' : 'Guardar Categorías'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Consultas */}\r\n                <Tab eventKey=\"queries\" title={\r\n                  <span>\r\n                    <FiMessageCircle className=\"me-1\" />\r\n                    Consultas\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Consultas y Dudas del Cliente</label>\r\n                        <textarea \r\n                          className=\"form-control\" \r\n                          rows=\"8\"\r\n                          value={editingData.queries || ''} \r\n                          onChange={(e) => setEditingData({...editingData, queries: e.target.value})}\r\n                          placeholder=\"Ingresa las consultas o dudas del cliente...\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <Button \r\n                        variant=\"warning\"\r\n                        onClick={() => {\r\n                          const projectId = selectedProject?.id;\r\n                          if (!projectId) {\r\n                            console.error('No se encontró el ID del proyecto');\r\n                            showNotification('❌ Error: No se encontró el ID del proyecto', 'danger');\r\n                            return;\r\n                          }\r\n                          \r\n                          updateQueriesMutation.mutate({ \r\n                            id: projectId, \r\n                            queries: editingData.queries || ''\r\n                          }, {\r\n                            onSuccess: (data) => {\r\n                              console.log('✅ Guardar Consultas - Éxito:', data);\r\n                              showNotification('✅ Consultas guardadas correctamente!', 'success');\r\n                            },\r\n                            onError: (error) => {\r\n                              console.error('❌ Guardar Consultas - Error:', error);\r\n                              showNotification('❌ Error al guardar consultas', 'danger');\r\n                            }\r\n                          });\r\n                        }}\r\n                        disabled={updateQueriesMutation.isLoading}\r\n                      >\r\n                        {updateQueriesMutation.isLoading ? 'Guardando...' : 'Guardar Consultas'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Marcar */}\r\n                <Tab eventKey=\"mark\" title={\r\n                  <span>\r\n                    <FiCheck className=\"me-1\" />\r\n                    Marcar\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"text-center\">\r\n                        <h6 className=\"mb-3\">Marcar Proyecto</h6>\r\n                        <p className=\"text-muted mb-4\">\r\n                          Marca este proyecto para seguimiento especial o prioridad alta.\r\n                        </p>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Prioridad</label>\r\n                          <select \r\n                            className=\"form-select\" \r\n                            value={editingData.priority || 'normal'} \r\n                            onChange={(e) => setEditingData({...editingData, priority: e.target.value})}\r\n                          >\r\n                            <option value=\"low\">Baja</option>\r\n                            <option value=\"normal\">Normal</option>\r\n                            <option value=\"active\">Activo</option>\r\n                            <option value=\"high\">Alta</option>\r\n                            <option value=\"urgent\">Urgente</option>\r\n                          </select>\r\n                        </div>\r\n                        <Button \r\n                          variant=\"success\" \r\n                          size=\"lg\"\r\n                          onClick={() => {\r\n                            const projectId = selectedProject?.id;\r\n                            if (!projectId) {\r\n                              console.error('No se encontró el ID del proyecto');\r\n                              showNotification('❌ Error: No se encontró el ID del proyecto', 'danger');\r\n                              return;\r\n                            }\r\n                            \r\n                            updateMarkMutation.mutate({ \r\n                              id: projectId, \r\n                              marked: !editingData.marked,\r\n                              priority: editingData.priority || 'normal'\r\n                            }, {\r\n                              onSuccess: (data) => {\r\n                                console.log('✅ Marcar Proyecto - Éxito:', data);\r\n                                const action = editingData.marked ? 'desmarcado' : 'marcado';\r\n                                showNotification(`✅ Proyecto ${action} correctamente!`, 'success');\r\n                              },\r\n                              onError: (error) => {\r\n                                console.error('❌ Marcar Proyecto - Error:', error);\r\n                                showNotification('❌ Error al marcar proyecto', 'danger');\r\n                              }\r\n                            });\r\n                          }}\r\n                          disabled={updateMarkMutation.isLoading}\r\n                        >\r\n                          <FiCheck className=\"me-2\" />\r\n                          {updateMarkMutation.isLoading ? 'Procesando...' : (editingData.marked ? 'Desmarcar Proyecto' : 'Marcar Proyecto')}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                {/* Tab Adjuntos */}\r\n                <Tab eventKey=\"attachments\" title={\r\n                  <span>\r\n                    <FiFolder className=\"me-1\" />\r\n                    Adjuntos\r\n                  </span>\r\n                }>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-12\">\r\n                      <h6 className=\"mb-3\">Gestión de Archivos</h6>\r\n                      \r\n                      {/* Subir archivo */}\r\n                      <div className=\"card mb-4\">\r\n                        <div className=\"card-header\">\r\n                          <h6 className=\"mb-0\">Subir Nuevo Archivo</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Seleccionar Archivo</label>\r\n                            <input \r\n                              type=\"file\" \r\n                              className=\"form-control\" \r\n                              onChange={handleFileSelect}\r\n                              accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif,.txt\"\r\n                            />\r\n                            <div className=\"form-text\">\r\n                              Formatos permitidos: PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX, JPG, JPEG, PNG, GIF, TXT (máx. 10MB)\r\n                            </div>\r\n                          </div>\r\n                          {selectedFile && (\r\n                            <div className=\"mb-3\">\r\n                              <div className=\"alert alert-info\">\r\n                                <strong>Archivo seleccionado:</strong> {selectedFile.name} \r\n                                <br />\r\n                                <small>Tamaño: {(selectedFile.size / 1024 / 1024).toFixed(2)} MB</small>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <Button \r\n                            variant=\"primary\" \r\n                            onClick={handleFileUpload}\r\n                            disabled={!selectedFile || uploadingFile}\r\n                          >\r\n                            {uploadingFile ? 'Subiendo...' : 'Subir Archivo'}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Lista de archivos */}\r\n                      <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                          <h6 className=\"mb-0\">Archivos Adjuntos ({attachments.length})</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          {attachments.length === 0 ? (\r\n                            <div className=\"text-center text-muted py-4\">\r\n                              <FiFolder size={48} className=\"mb-3\" />\r\n                              <p>No hay archivos adjuntos</p>\r\n                              <small>Sube archivos como cotizaciones, documentos técnicos, etc.</small>\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th>Archivo</th>\r\n                                    <th>Tamaño</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Subido por</th>\r\n                                    <th>Acciones</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {attachments.map((attachment) => (\r\n                                    <tr key={attachment.id}>\r\n                                      <td>\r\n                                        <div>\r\n                                          <strong>{attachment.original_name}</strong>\r\n                                          {attachment.description && (\r\n                                            <>\r\n                                              <br/>\r\n                                              <small className=\"text-muted\">{attachment.description}</small>\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td>\r\n                                        {attachment.file_size ? \r\n                                          `${(attachment.file_size / 1024 / 1024).toFixed(2)} MB` : \r\n                                          'N/A'\r\n                                        }\r\n                                      </td>\r\n                                      <td>\r\n                                        {new Date(attachment.created_at).toLocaleDateString()}\r\n                                      </td>\r\n                                      <td>\r\n                                        {attachment.uploaded_by_name || 'Usuario'}\r\n                                      </td>\r\n                                      <td>\r\n                                        <div className=\"btn-group btn-group-sm\">\r\n                                          <Button \r\n                                            variant=\"outline-primary\" \r\n                                            size=\"sm\"\r\n                                            onClick={() => handleFileDownload(attachment)}\r\n                                            title=\"Descargar\"\r\n                                          >\r\n                                            <FiDownload size={14} />\r\n                                          </Button>\r\n                                          <Button \r\n                                            variant=\"outline-danger\" \r\n                                            size=\"sm\"\r\n                                            onClick={() => handleFileDelete(attachment.id)}\r\n                                            title=\"Eliminar\"\r\n                                          >\r\n                                            <FiTrash2 size={14} />\r\n                                          </Button>\r\n                                        </div>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n            )\r\n          }\r\n        ]}\r\n        onSubmit={() => setShowViewModal(false)}\r\n        submitText=\"Cerrar\"\r\n        size=\"xl\"\r\n      />\r\n      \r\n      </div>\r\n    </Container>\r\n    \r\n    {/* Toast de notificaciones - SOLUCIÓN ALTERNATIVA */}\r\n    {showToast && (\r\n      <div \r\n        style={{\r\n          position: 'fixed',\r\n          top: '20px',\r\n          right: '20px',\r\n          zIndex: 99999,\r\n          backgroundColor: toastVariant === 'success' ? '#28a745' : '#dc3545',\r\n          color: 'white',\r\n          padding: '15px 20px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\r\n          minWidth: '300px',\r\n          border: 'none'\r\n        }}\r\n        onClick={() => setShowToast(false)}\r\n      >\r\n        <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>\r\n          {toastVariant === 'success' ? '✅ Éxito' : '❌ Error'}\r\n        </div>\r\n        <div>{toastMessage}</div>\r\n      </div>\r\n    )}\r\n\r\n      {/* Modal para selección de servicios */}\r\n      <ModalForm\r\n        show={showServiceForm}\r\n        onHide={() => setShowServiceForm(false)}\r\n        title=\"Seleccionar Servicios del Proyecto\"\r\n        size=\"xl\"\r\n        data={{}}\r\n        fields={[]}\r\n        onSubmit={() => setShowServiceForm(false)}\r\n        loading={false}\r\n        submitText=\"Cerrar\"\r\n        customBody={\r\n          <ProjectServiceForm\r\n            selectedServices={selectedServices}\r\n            onServicesChange={setSelectedServices}\r\n            serviceType=\"laboratorio\"\r\n          />\r\n        }\r\n      />\r\n\r\n      {/* Nuevo Formulario Rediseñado */}\r\n      {showNewForm && (\r\n        <div className=\"modal-backdrop\" style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(0,0,0,0.5)',\r\n          zIndex: 1050,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}>\r\n          <div className=\"modal-content bg-white rounded shadow-lg\" style={{\r\n            width: '90%',\r\n            maxWidth: '1200px',\r\n            maxHeight: '90vh',\r\n            overflow: 'auto'\r\n          }}>\r\n            <div className=\"modal-header p-4 border-bottom d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">Crear Nuevo Proyecto</h5>\r\n              <Button \r\n                variant=\"outline-secondary\" \r\n                size=\"sm\"\r\n                onClick={() => setShowNewForm(false)}\r\n              >\r\n                <FiX />\r\n              </Button>\r\n            </div>\r\n            <div className=\"modal-body p-4\">\r\n              <ProjectFormRedesigned\r\n                data={selectedClient ? { company_id: selectedClient.id } : {}}\r\n                onSubmit={(formData) => {\r\n                  console.log('Datos del formulario:', formData);\r\n                  // Aquí se procesaría la creación del proyecto\r\n                  setShowNewForm(false);\r\n                }}\r\n                onCancel={() => setShowNewForm(false)}\r\n                loading={createMutation.isLoading}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};"],"names":["ServiceSelection","selectedServices","onServicesChange","searchTerm","setSearchTerm","useState","selectedEnsayo","setSelectedEnsayo","selectedSubservices","setSelectedSubservices","servicesData","isLoadingServices","useQuery","listServices","subservicesData","isLoadingSubservices","listSubservices","services","subservices","filteredServices","_a","service","_b","handleEnsayoSelect","ensayo","handleSubserviceToggle","subservice","isSelected","s","prev","handleConfirmSelection","newService","sum","sub","handleRemoveService","index","newServices","_","i","jsxs","Card","jsx","FiFilter","Badge","Button","FiX","Form","e","Spinner","Row","isCurrentlySelected","Col","FiCheck","FiClock","FiDollarSign","Alert","subIndex","ProjectServiceForm","handleServicesChange","FiSettings","FiHome","searchCompanies","type","params","apiFetch","error","ProjectFormRedesigned","data","onSubmit","loading","onCancel","formData","setFormData","currentStep","setCurrentStep","showServiceForm","setShowServiceForm","errors","setErrors","searchResults","setSearchResults","isSearching","setIsSearching","showSearchResults","setShowSearchResults","totalSteps","useEffect","handleInputChange","field","value","handleSearch","response","handleSelectClient","client","handleClearClient","validateStep","step","newErrors","handleNext","handlePrevious","handleSubmit","getStepIcon","FiUser","FiMessageSquare","FiCheckCircle","getStepTitle","renderStep1","result","renderStep2","renderStep3","FiTool","renderStep4","ProgressBar","isActive","isCompleted","FiPlus","emptyForm","Proyectos","showModal","setShowModal","editingProject","setEditingProject","deletingProject","setDeletingProject","showCategoriesModal","setShowCategoriesModal","showQueriesModal","setShowQueriesModal","showStatusModal","setShowStatusModal","showViewModal","setShowViewModal","selectedProject","setSelectedProject","activeTab","setActiveTab","editingData","setEditingData","showToast","setShowToast","toastMessage","setToastMessage","toastVariant","setToastVariant","attachments","setAttachments","uploadingFile","setUploadingFile","selectedFile","setSelectedFile","setSelectedServices","useNewForm","setUseNewForm","showNewForm","setShowNewForm","currentPage","setCurrentPage","selectedStatus","setSelectedStatus","selectedCompany","setSelectedCompany","selectedProjectType","setSelectedProjectType","selectedPriority","setSelectedPriority","useNavigate","selectedClient","useLocation","queryClient","useQueryClient","isLoading","refetch","listProjects","statsData","statsLoading","getProjectStats","attachmentsData","listProjectAttachments","handleMutationSuccess","message","showNotification","variant","searchValue","handleFilter","filters","handleFileSelect","event","file","handleFileUpload","uploadAttachment","handleFileDownload","attachment","downloadFile","handleFileDelete","attachmentId","deleteAttachment","projectFilterOptions","createMutation","useMutation","createProject","updateMutation","id","updateProject","updatedProject","deleteMutation","deleteProject","updateStatusMutation","updateProjectStatus","updateCategoriesMutation","updateProjectCategories","updateQueriesMutation","updateProjectQueries","updateMarkMutation","updateProjectMark","handleEdit","project","handleDelete","handleViewProject","initialEditingData","getStatusBadge","status","config","columns","row","FiMapPin","projectType","typeColor","priorityInfo","priority","FiAlertTriangle","formFields","company","_c","user","_d","stats","useMemo","projects","p","Fragment","Container","PageHeader","StatsCard","FiRefreshCw","DataTable","FiEye","FiTrash2","ModalForm","Tabs","k","Tab","FiUsers","FiMessageCircle","FiEdit","projectId","numericId","FiFolder","action","FiDownload"],"mappings":"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"}