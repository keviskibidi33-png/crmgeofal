{"version":3,"file":"subservices-H1tK5RuN.js","sources":["../../src/services/subservices.js"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\n// Buscar subservicios para autocompletado\r\nexport const searchSubservices = async (query, limit = 10) => {\r\n  if (!query || query.length < 2) {\r\n    return { data: [] };\r\n  }\r\n\r\n  try {\r\n    const response = await apiFetch(`/api/subservices/search?q=${encodeURIComponent(query)}&limit=${limit}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error buscando subservicios:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener subservicio por código\r\nexport const getSubserviceByCode = async (codigo) => {\r\n  try {\r\n    const response = await apiFetch(`/api/subservices/by-code/${encodeURIComponent(codigo)}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error obteniendo subservicio por código:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener sugerencias por categoría\r\nexport const getSuggestionsByCategory = async (category = 'all', limit = 5) => {\r\n  try {\r\n    const response = await apiFetch(`/api/subservices/suggestions?category=${encodeURIComponent(category)}&limit=${limit}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error obteniendo sugerencias:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener todos los subservicios (para uso en formularios)\r\nexport const getAllSubservices = async (params = {}) => {\r\n  try {\r\n    const queryParams = new URLSearchParams();\r\n    if (params.search) queryParams.append('search', params.search);\r\n    if (params.service_id) queryParams.append('service_id', params.service_id);\r\n    if (params.page) queryParams.append('page', params.page);\r\n    if (params.limit) queryParams.append('limit', params.limit);\r\n    \r\n    const response = await apiFetch(`/api/subservices?${queryParams.toString()}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error obteniendo subservicios:', error);\r\n    throw error;\r\n  }\r\n};"],"names":["searchSubservices","query","limit","apiFetch","error","getAllSubservices","params","queryParams"],"mappings":"wCAGY,MAACA,EAAoB,MAAOC,EAAOC,EAAQ,KAAO,CAC5D,GAAI,CAACD,GAASA,EAAM,OAAS,EAC3B,MAAO,CAAE,KAAM,CAAA,GAGjB,GAAI,CAEF,OADiB,MAAME,EAAS,6BAA6B,mBAAmBF,CAAK,CAAC,UAAUC,CAAK,EAAE,CAEzG,OAASE,EAAO,CACd,cAAQ,MAAM,+BAAgCA,CAAK,EAC7CA,CACR,CACF,EAyBaC,EAAoB,MAAOC,EAAS,KAAO,CACtD,GAAI,CACF,MAAMC,EAAc,IAAI,gBACxB,OAAID,EAAO,QAAQC,EAAY,OAAO,SAAUD,EAAO,MAAM,EACzDA,EAAO,YAAYC,EAAY,OAAO,aAAcD,EAAO,UAAU,EACrEA,EAAO,MAAMC,EAAY,OAAO,OAAQD,EAAO,IAAI,EACnDA,EAAO,OAAOC,EAAY,OAAO,QAASD,EAAO,KAAK,EAEzC,MAAMH,EAAS,oBAAoBI,EAAY,SAAQ,CAAE,EAAE,CAE9E,OAASH,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACR,CACF"}