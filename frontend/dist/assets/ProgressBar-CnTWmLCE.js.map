{"version":3,"file":"ProgressBar-CnTWmLCE.js","sources":["../../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["ROUND_PRECISION","getPercentage","now","min","max","percentage","renderProgressBar","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","ref","_jsx","classNames","ProgressBar","React.forwardRef","isChild","rest","useBootstrapPrefix","children","wrapperProps","map","child","cloneElement"],"mappings":"iHAQA,MAAMA,EAAkB,IA8BxB,SAASC,EAAcC,EAAKC,EAAKC,EAAK,CACpC,MAAMC,GAAcH,EAAMC,IAAQC,EAAMD,GAAO,IAC/C,OAAO,KAAK,MAAME,EAAaL,CAAe,EAAIA,CACpD,CACA,SAASM,EAAkB,CACzB,IAAAH,EACA,IAAAD,EACA,IAAAE,EACA,MAAAG,EACA,eAAAC,EACA,QAAAC,EACA,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CACL,EAAGC,EAAK,CACN,OAAoBC,EAAAA,IAAK,MAAO,CAC9B,IAAKD,EACL,GAAGD,EACH,KAAM,cACN,UAAWG,EAAWP,EAAW,GAAGG,CAAQ,OAAQ,CAClD,CAAC,MAAMD,CAAO,EAAE,EAAGA,EACnB,CAAC,GAAGC,CAAQ,eAAe,EAAGJ,EAC9B,CAAC,GAAGI,CAAQ,cAAc,EAAGJ,GAAYD,CAC/C,CAAK,EACD,MAAO,CACL,MAAO,GAAGR,EAAcC,EAAKC,EAAKC,CAAG,CAAC,IACtC,GAAGQ,CACT,EACI,gBAAiBV,EACjB,gBAAiBC,EACjB,gBAAiBC,EACjB,SAAUI,EAA8BS,EAAAA,IAAK,OAAQ,CACnD,UAAW,kBACX,SAAUV,CAChB,CAAK,EAAIA,CACT,CAAG,CACH,CACK,MAACY,EAA2BC,EAAAA,WAAiB,CAAC,CACjD,QAAAC,EAAU,GACV,GAAGC,CACL,EAAGN,IAAQ,CACT,MAAMD,EAAQ,CACZ,IAAK,EACL,IAAK,IACL,SAAU,GACV,eAAgB,GAChB,QAAS,GACT,GAAGO,CACP,EAEE,GADAP,EAAM,SAAWQ,EAAmBR,EAAM,SAAU,UAAU,EAC1DM,EACF,OAAOf,EAAkBS,EAAOC,CAAG,EAErC,KAAM,CACJ,IAAAb,EACA,IAAAD,EACA,IAAAE,EACA,MAAAG,EACA,eAAAC,EACA,QAAAC,EACA,SAAAC,EACA,SAAAI,EACA,QAAAD,EACA,UAAAF,EACA,SAAAa,EACA,GAAGC,CACP,EAAMV,EACJ,OAAoBE,EAAAA,IAAK,MAAO,CAC9B,IAAKD,EACL,GAAGS,EACH,UAAWP,EAAWP,EAAWG,CAAQ,EACzC,SAAUU,EAAWE,EAAIF,EAAUG,GAAsBC,EAAAA,aAAaD,EAAO,CAC3E,QAAS,EACf,CAAK,CAAC,EAAIrB,EAAkB,CACtB,IAAAH,EACA,IAAAD,EACA,IAAAE,EACA,MAAAG,EACA,eAAAC,EACA,QAAAC,EACA,SAAAC,EACA,SAAAI,EACA,QAAAD,CACN,EAAOG,CAAG,CACV,CAAG,CACH,CAAC,EACDG,EAAY,YAAc","x_google_ignoreList":[0]}