{"version":3,"file":"Reportes-B7wVDosT.js","sources":["../../src/services/reports.js","../../src/components/reports/ReportComponents.jsx","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js","../../src/components/reports/DashboardCharts.jsx","../../src/components/reports/GoalConfigModal.jsx","../../src/pages/Reportes.jsx"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\n// Obtener estadísticas generales del sistema\r\nexport const getSystemStats = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  \r\n  const url = `/api/reports/stats${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener ventas por vendedor\r\nexport const getVentasPorVendedor = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  if (params.vendedor_id) queryParams.append('vendedor_id', params.vendedor_id);\r\n  if (params.page) queryParams.append('page', params.page);\r\n  if (params.limit) queryParams.append('limit', params.limit);\r\n  if (params.sort_by) queryParams.append('sort_by', params.sort_by);\r\n  \r\n  const url = `/api/reports/ventas-por-vendedor${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener proyectos por estado\r\nexport const getProyectosPorEstado = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  \r\n  const url = `/api/reports/proyectos-por-estado${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener cotizaciones por período\r\nexport const getCotizacionesPorPeriodo = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  if (params.vendedor_id) queryParams.append('vendedor_id', params.vendedor_id);\r\n  \r\n  const url = `/api/reports/cotizaciones${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener clientes activos\r\nexport const getClientesActivos = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  \r\n  const url = `/api/reports/clientes-activos${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener lista de vendedores para filtros\r\nexport const getVendedores = async () => {\r\n  return apiFetch('/api/reports/vendedores');\r\n};\r\n\r\n// Obtener dashboard top 10 vendedores\r\nexport const getDashboardTop10 = async (params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  if (params.sort_by) queryParams.append('sort_by', params.sort_by);\r\n  if (params.vendedor_id) queryParams.append('vendedor_id', params.vendedor_id);\r\n  \r\n  const url = `/api/reports/dashboard-top10${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Obtener meta mensual\r\nexport const getMonthlyGoal = async (year, month) => {\r\n  const url = `/api/reports/monthly-goal?year=${year}&month=${month}`;\r\n  return apiFetch(url);\r\n};\r\n\r\n// Establecer meta mensual\r\nexport const setMonthlyGoal = async (goalData) => {\r\n  return apiFetch('/api/reports/monthly-goal', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(goalData)\r\n  });\r\n};\r\n\r\n// Exportar reporte a Excel\r\nexport const exportReport = async (reportType, params = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  if (params.start_date) queryParams.append('start_date', params.start_date);\r\n  if (params.end_date) queryParams.append('end_date', params.end_date);\r\n  if (params.vendedor_id) queryParams.append('vendedor_id', params.vendedor_id);\r\n  \r\n  const url = `/api/reports/export/${reportType}${queryParams.toString() ? `?${queryParams.toString()}` : ''}`;\r\n  \r\n  // Para descargas de archivos, necesitamos manejar la respuesta de manera diferente\r\n  const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000'}${url}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    },\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Error al exportar el reporte');\r\n  }\r\n  \r\n  const blob = await response.blob();\r\n  const downloadUrl = window.URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = downloadUrl;\r\n  link.download = `reporte_${reportType}_${new Date().toISOString().slice(0, 10)}.xlsx`;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(downloadUrl);\r\n};","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { Badge, Alert, Button } from 'react-bootstrap';\r\nimport { FiAlertTriangle, FiCheckCircle, FiClock, FiX, FiEye } from 'react-icons/fi';\r\nimport DataTable from '../common/DataTable';\r\nimport { \r\n  getVentasPorVendedor, \r\n  getProyectosPorEstado, \r\n  getCotizacionesPorPeriodo, \r\n  getClientesActivos \r\n} from '../../services/reports';\r\n\r\nexport const VentasPorVendedorReport = ({ dateRange, selectedVendedor, sortBy }) => {\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const itemsPerPage = 20;\r\n\r\n  // Función para obtener el último día del mes\r\n  const getLastDayOfMonth = (yearMonth) => {\r\n    const [year, month] = yearMonth.split('-');\r\n    const lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();\r\n    return `${yearMonth}-${lastDay.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const { data, isLoading, error } = useQuery(\r\n    ['ventasPorVendedor', dateRange, selectedVendedor, currentPage, sortBy],\r\n    () => getVentasPorVendedor({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end),\r\n      vendedor_id: selectedVendedor || undefined,\r\n      page: currentPage,\r\n      limit: itemsPerPage,\r\n      sort_by: sortBy\r\n    }),\r\n    { staleTime: 30000 }\r\n  );\r\n\r\n  // Resetear página cuando cambien los filtros\r\n  React.useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [dateRange, selectedVendedor, sortBy]);\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Vendedor',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name}</div>\r\n          <small className=\"text-muted\">{row.email} - {row.role}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Período',\r\n      accessor: 'period',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.month}/{row.year}</div>\r\n          <small className=\"text-muted\">Mes/Año</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Total Proyectos',\r\n      accessor: 'total_projects',\r\n      render: (value) => (\r\n        <Badge bg=\"primary\" className=\"status-badge\">\r\n          {value} proyectos\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Total Ventas',\r\n      accessor: 'total_sales',\r\n      render: (value) => (\r\n        <div className=\"fw-bold text-success\">\r\n          S/ {Number(value).toLocaleString('es-PE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Cotizaciones',\r\n      accessor: 'total_quotes',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value} total</div>\r\n          <small className=\"text-muted\">{row.approved_quotes} aprobadas</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Tasa Aprobación',\r\n      accessor: 'approval_rate',\r\n      render: (value) => (\r\n        <Badge bg={value >= 50 ? 'success' : value >= 30 ? 'warning' : 'danger'}>\r\n          {value}%\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Acciones',\r\n      accessor: 'actions',\r\n      render: (value, row) => (\r\n        <Button variant=\"outline-primary\" size=\"sm\">\r\n          <FiEye className=\"me-1\" />\r\n          Ver Detalle\r\n        </Button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <FiAlertTriangle className=\"me-2\" />\r\n        Error al cargar el reporte: {error.message}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      data={data?.data || []}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      emptyMessage=\"No hay datos de ventas disponibles para los vendedores en el período seleccionado\"\r\n      totalItems={data?.pagination?.totalRecords || 0}\r\n      itemsPerPage={data?.pagination?.itemsPerPage || 20}\r\n      currentPage={data?.pagination?.currentPage || 1}\r\n      onPageChange={(page) => {\r\n        setCurrentPage(page);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ProyectosPorEstadoReport = ({ dateRange }) => {\r\n  // Función para obtener el último día del mes\r\n  const getLastDayOfMonth = (yearMonth) => {\r\n    const [year, month] = yearMonth.split('-');\r\n    const lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();\r\n    return `${yearMonth}-${lastDay.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const { data, isLoading, error } = useQuery(\r\n    ['proyectosPorEstado', dateRange],\r\n    () => getProyectosPorEstado({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end)\r\n    }),\r\n    { staleTime: 30000 }\r\n  );\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      'activo': { bg: 'success', text: 'Activo', icon: FiCheckCircle },\r\n      'pendiente': { bg: 'warning', text: 'Pendiente', icon: FiClock },\r\n      'completado': { bg: 'info', text: 'Completado', icon: FiCheckCircle },\r\n      'cancelado': { bg: 'danger', text: 'Cancelado', icon: FiX }\r\n    };\r\n    \r\n    const config = statusConfig[status] || { bg: 'secondary', text: status, icon: FiCheckCircle };\r\n    const Icon = config.icon;\r\n    \r\n    return (\r\n      <Badge bg={config.bg} className=\"status-badge d-flex align-items-center\">\r\n        <Icon size={12} className=\"me-1\" />\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Estado',\r\n      accessor: 'estado',\r\n      render: (value) => getStatusBadge(value)\r\n    },\r\n    {\r\n      header: 'Cantidad',\r\n      accessor: 'cantidad',\r\n      render: (value) => (\r\n        <div className=\"fw-bold text-primary\">{value}</div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Porcentaje',\r\n      accessor: 'porcentaje',\r\n      render: (value) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"progress flex-grow-1 me-2\" style={{ height: '8px' }}>\r\n            <div \r\n              className=\"progress-bar bg-primary\" \r\n              style={{ width: `${value}%` }}\r\n            ></div>\r\n          </div>\r\n          <span className=\"fw-medium\">{value}%</span>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <FiAlertTriangle className=\"me-2\" />\r\n        Error al cargar el reporte: {error.message}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      data={data?.data || []}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      emptyMessage=\"No hay datos de proyectos disponibles\"\r\n      totalItems={data?.data?.length || 0}\r\n      itemsPerPage={20}\r\n      currentPage={1}\r\n      onPageChange={(page) => {\r\n        console.log('Cambio de página:', page);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CotizacionesReport = ({ dateRange, selectedVendedor }) => {\r\n  // Función para obtener el último día del mes\r\n  const getLastDayOfMonth = (yearMonth) => {\r\n    const [year, month] = yearMonth.split('-');\r\n    const lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();\r\n    return `${yearMonth}-${lastDay.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const { data, isLoading, error } = useQuery(\r\n    ['cotizacionesPorPeriodo', dateRange, selectedVendedor],\r\n    () => getCotizacionesPorPeriodo({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end),\r\n      vendedor_id: selectedVendedor || undefined\r\n    }),\r\n    { staleTime: 30000 }\r\n  );\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      'enviada': { bg: 'info', text: 'Enviada' },\r\n      'aprobada': { bg: 'success', text: 'Aprobada' },\r\n      'rechazada': { bg: 'danger', text: 'Rechazada' },\r\n      'pendiente': { bg: 'warning', text: 'Pendiente' }\r\n    };\r\n    \r\n    const config = statusConfig[status] || { bg: 'secondary', text: status };\r\n    \r\n    return (\r\n      <Badge bg={config.bg} className=\"status-badge\">\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Número',\r\n      accessor: 'quote_number',\r\n      render: (value) => (\r\n        <div className=\"fw-medium\">{value}</div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Cliente',\r\n      accessor: 'company_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value}</div>\r\n          <small className=\"text-muted\">{row.project_name}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Vendedor',\r\n      accessor: 'vendedor_name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value}</div>\r\n          <small className=\"text-muted\">{row.vendedor_email}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Total',\r\n      accessor: 'total',\r\n      render: (value) => (\r\n        <div className=\"fw-bold text-success\">\r\n          S/ {Number(value).toLocaleString('es-PE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Estado',\r\n      accessor: 'status',\r\n      render: (value) => getStatusBadge(value)\r\n    },\r\n    {\r\n      header: 'Fecha',\r\n      accessor: 'created_at',\r\n      render: (value) => (\r\n        <div>\r\n          {new Date(value).toLocaleDateString('es-PE')}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <FiAlertTriangle className=\"me-2\" />\r\n        Error al cargar el reporte: {error.message}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      data={data?.data || []}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      emptyMessage=\"No hay cotizaciones disponibles\"\r\n      totalItems={data?.data?.length || 0}\r\n      itemsPerPage={20}\r\n      currentPage={1}\r\n      onPageChange={(page) => {\r\n        console.log('Cambio de página:', page);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ClientesReport = ({ dateRange }) => {\r\n  // Función para obtener el último día del mes\r\n  const getLastDayOfMonth = (yearMonth) => {\r\n    const [year, month] = yearMonth.split('-');\r\n    const lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();\r\n    return `${yearMonth}-${lastDay.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const { data, isLoading, error } = useQuery(\r\n    ['clientesActivos', dateRange],\r\n    () => getClientesActivos({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end)\r\n    }),\r\n    { staleTime: 30000 }\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Cliente',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value}</div>\r\n          <small className=\"text-muted\">{row.email}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Ubicación',\r\n      accessor: 'city',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div>{value}</div>\r\n          <small className=\"text-muted\">{row.sector}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Proyectos',\r\n      accessor: 'total_projects',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{value} total</div>\r\n          <small className=\"text-muted\">{row.active_projects} activos</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Cotizaciones',\r\n      accessor: 'total_quotes',\r\n      render: (value) => (\r\n        <Badge bg=\"info\" className=\"status-badge\">\r\n          {value} cotizaciones\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Valor Total',\r\n      accessor: 'total_value',\r\n      render: (value) => (\r\n        <div className=\"fw-bold text-success\">\r\n          S/ {Number(value).toLocaleString('es-PE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <FiAlertTriangle className=\"me-2\" />\r\n        Error al cargar el reporte: {error.message}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      data={data?.data || []}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      emptyMessage=\"No hay clientes activos disponibles\"\r\n      totalItems={data?.data?.length || 0}\r\n      itemsPerPage={20}\r\n      currentPage={1}\r\n      onPageChange={(page) => {\r\n        console.log('Cambio de página:', page);\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from 'chart.js';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\n// Registrar componentes de Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\nexport const SalesBarChart = ({ data, sortBy, goalData }) => {\r\n  console.log('SalesBarChart recibió:', { data, sortBy, goalData });\r\n  const chartRef = useRef(null);\r\n  \r\n  // Cleanup del gráfico cuando el componente se desmonta\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-4 text-muted\">\r\n        No hay datos disponibles para mostrar\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calcular la meta para mostrar en el gráfico\r\n  const goalValue = goalData?.goal_quantity || 0;\r\n  \r\n  const chartData = {\r\n    labels: data.slice(0, 10).map(vendedor => vendedor.name),\r\n    datasets: [\r\n      {\r\n        label: sortBy === 'total_sales' ? 'Ventas' :\r\n               sortBy === 'total_projects' ? 'Proyectos' :\r\n               sortBy === 'total_quotes' ? 'Cotizaciones' :\r\n               'Tasa de Aprobación',\r\n        data: data.slice(0, 10).map(vendedor => {\r\n          switch (sortBy) {\r\n            case 'total_sales':\r\n              return vendedor.total_sales || 0;\r\n            case 'total_projects':\r\n              return vendedor.total_projects || 0;\r\n            case 'total_quotes':\r\n              return vendedor.total_quotes || 0;\r\n            case 'approval_rate':\r\n              return vendedor.approval_rate || 0;\r\n            default:\r\n              return vendedor.total_quotes || 0;\r\n          }\r\n        }),\r\n        backgroundColor: 'rgba(33, 150, 243, 0.8)',\r\n        borderColor: '#2196F3',\r\n        borderWidth: 1,\r\n        type: 'bar',\r\n        order: 2,\r\n        barThickness: 20,\r\n        categoryPercentage: 0.8,\r\n        barPercentage: 0.9\r\n      },\r\n      // Meta como línea de referencia\r\n      ...(goalValue > 0 ? [{\r\n        label: 'Meta',\r\n        data: new Array(Math.min(data.length, 10)).fill(goalValue),\r\n        backgroundColor: 'rgba(255, 87, 34, 0.1)',\r\n        borderColor: '#FF5722',\r\n        borderWidth: 2,\r\n        type: 'line',\r\n        order: 1,\r\n        pointRadius: 0,\r\n        pointHoverRadius: 0,\r\n        fill: false,\r\n        tension: 0\r\n      }] : [])\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          boxWidth: 12,\r\n          font: {\r\n            size: 11\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Top 10 Vendedores - ${sortBy === 'total_sales' ? 'Ventas' :\r\n               sortBy === 'total_projects' ? 'Proyectos' :\r\n               sortBy === 'total_quotes' ? 'Cotizaciones' :\r\n               'Tasa de Aprobación'}${goalData?.goal_quantity ? ` (Meta: ${goalData.goal_quantity})` : ''}`,\r\n        font: {\r\n          size: 14,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          font: {\r\n            size: 10\r\n          },\r\n          callback: function(value) {\r\n            if (sortBy === 'total_sales') {\r\n              return 'S/ ' + value.toLocaleString('es-PE');\r\n            }\r\n            return value;\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          font: {\r\n            size: 9\r\n          },\r\n          maxRotation: 45,\r\n          minRotation: 45\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100\">\r\n      <Bar ref={chartRef} data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SalesDistributionChart = ({ stats }) => {\r\n  const chartRef = useRef(null);\r\n  \r\n  // Cleanup del gráfico cuando el componente se desmonta\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  if (!stats) {\r\n    return (\r\n      <div className=\"text-center py-4 text-muted\">\r\n        No hay datos de distribución disponibles\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const chartData = {\r\n    labels: ['Top 3 Vendedores', 'Resto del Equipo'],\r\n    datasets: [\r\n      {\r\n        data: [stats.top3Sales, stats.restSales],\r\n        backgroundColor: [\r\n          '#FFD700', // Oro para top 3\r\n          '#2196F3'  // Azul para resto\r\n        ],\r\n        borderColor: [\r\n          '#FFD700',\r\n          '#2196F3'\r\n        ],\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom',\r\n        labels: {\r\n          boxWidth: 10,\r\n          font: {\r\n            size: 10\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Distribución de Ventas',\r\n        font: {\r\n          size: 12,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            const label = context.label || '';\r\n            const value = context.parsed;\r\n            return `${label}: S/ ${value.toLocaleString('es-PE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100\">\r\n      <Doughnut ref={chartRef} data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GoalProgressChart = ({ currentSales, goalQuantity }) => {\r\n  console.log('GoalProgressChart recibió:', { currentSales, goalQuantity });\r\n  const chartRef = useRef(null);\r\n  const progressPercentage = goalQuantity > 0 ? Math.min((currentSales / goalQuantity) * 100, 100) : 0;\r\n  \r\n  // Cleanup del gráfico cuando el componente se desmonta\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  const chartData = {\r\n    labels: ['Progreso', 'Restante'],\r\n    datasets: [\r\n      {\r\n        data: [progressPercentage, 100 - progressPercentage],\r\n        backgroundColor: [\r\n          progressPercentage >= 100 ? '#4CAF50' : '#2196F3', // Verde si meta alcanzada, azul si no\r\n          '#E0E0E0' // Gris para lo restante\r\n        ],\r\n        borderColor: [\r\n          progressPercentage >= 100 ? '#4CAF50' : '#2196F3',\r\n          '#E0E0E0'\r\n        ],\r\n        borderWidth: 2,\r\n        cutout: '70%', // Para hacer un gráfico de dona\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false, // Ocultar leyenda para gráfico de progreso\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Progreso hacia la Meta',\r\n        font: {\r\n          size: 12,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            if (context.label === 'Progreso') {\r\n              return `Progreso: ${progressPercentage.toFixed(1)}%`;\r\n            }\r\n            return `Restante: ${(100 - progressPercentage).toFixed(1)}%`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"position-relative h-100\">\r\n      <Doughnut ref={chartRef} data={chartData} options={options} />\r\n      <div className=\"position-absolute top-50 start-50 translate-middle text-center\">\r\n        <div className=\"fw-bold fs-5\" style={{ color: progressPercentage >= 100 ? '#4CAF50' : '#2196F3' }}>\r\n          {progressPercentage.toFixed(1)}%\r\n        </div>\r\n        <small className=\"text-muted\" style={{ fontSize: '0.75rem' }}>Meta Alcanzada</small>\r\n        <div className=\"mt-1\">\r\n          <small className=\"text-muted\" style={{ fontSize: '0.7rem' }}>\r\n            {currentSales} / {goalQuantity} ventas\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Row, Col } from 'react-bootstrap';\r\nimport { FiTarget, FiSave, FiX } from 'react-icons/fi';\r\n\r\nconst GoalConfigModal = ({ show, onHide, currentGoal, onSave, year, month, isLoading }) => {\r\n  const [goalAmount, setGoalAmount] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [selectedYear, setSelectedYear] = useState(year);\r\n  const [selectedMonth, setSelectedMonth] = useState(month);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      setSelectedYear(year);\r\n      setSelectedMonth(month);\r\n      if (currentGoal && currentGoal.has_goal) {\r\n        setGoalAmount(currentGoal.goal_quantity?.toString() || '');\r\n      } else {\r\n        setGoalAmount('');\r\n      }\r\n      setError('');\r\n    }\r\n  }, [currentGoal, show, year, month]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!goalAmount || parseInt(goalAmount) <= 0) {\r\n      setError('La cantidad de ventas debe ser mayor a 0');\r\n      return;\r\n    }\r\n\r\n    onSave({\r\n      year: parseInt(selectedYear),\r\n      month: parseInt(selectedMonth),\r\n      goal_quantity: parseInt(goalAmount)\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setGoalAmount('');\r\n    setError('');\r\n    onHide();\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"sm\" centered>\r\n      <Modal.Header closeButton className=\"py-2\">\r\n        <Modal.Title className=\"fs-6\">\r\n          <FiTarget className=\"me-1\" />\r\n          Meta Mensual\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n              <Modal.Body className=\"py-3\">\r\n                <div className=\"mb-3\">\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"mb-1\">Año</Form.Label>\r\n                        <Form.Select\r\n                          value={selectedYear}\r\n                          onChange={(e) => setSelectedYear(e.target.value)}\r\n                          size=\"sm\"\r\n                        >\r\n                          <option value=\"2024\">2024</option>\r\n                          <option value=\"2025\">2025</option>\r\n                          <option value=\"2026\">2026</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"mb-1\">Mes</Form.Label>\r\n                        <Form.Select\r\n                          value={selectedMonth}\r\n                          onChange={(e) => setSelectedMonth(e.target.value)}\r\n                          size=\"sm\"\r\n                        >\r\n                          <option value=\"1\">Enero</option>\r\n                          <option value=\"2\">Febrero</option>\r\n                          <option value=\"3\">Marzo</option>\r\n                          <option value=\"4\">Abril</option>\r\n                          <option value=\"5\">Mayo</option>\r\n                          <option value=\"6\">Junio</option>\r\n                          <option value=\"7\">Julio</option>\r\n                          <option value=\"8\">Agosto</option>\r\n                          <option value=\"9\">Septiembre</option>\r\n                          <option value=\"10\">Octubre</option>\r\n                          <option value=\"11\">Noviembre</option>\r\n                          <option value=\"12\">Diciembre</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-2\">\r\n            <Form.Label className=\"mb-1\">Cantidad de Ventas</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={goalAmount}\r\n              onChange={(e) => setGoalAmount(e.target.value)}\r\n              placeholder=\"Ej: 10\"\r\n              required\r\n              size=\"sm\"\r\n            />\r\n            <Form.Text className=\"text-muted small\">\r\n              Número de ventas objetivo para el mes\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          {error && (\r\n            <Alert variant=\"danger\" className=\"py-2 px-2 mb-2\">\r\n              <small>{error}</small>\r\n            </Alert>\r\n          )}\r\n\r\n          <div className=\"d-flex justify-content-end gap-2 mt-3\">\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleClose}>\r\n              <FiX className=\"me-1\" />\r\n              Cancelar\r\n            </Button>\r\n            <Button \r\n              variant=\"primary\" \r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              size=\"sm\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Spinner size=\"sm\" className=\"me-1\" />\r\n                  Guardando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FiSave className=\"me-1\" />\r\n                  Guardar\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GoalConfigModal;\r\n","import React, { useState } from 'react';\r\nimport { useQuery, useQueryClient } from 'react-query';\r\nimport { Row, Col, Card, Button, Form, InputGroup, Spinner, Badge } from 'react-bootstrap';\r\nimport { \r\n  FiBarChart2, FiDownload, FiCalendar, FiUsers, FiDollarSign, \r\n  FiFileText, FiFilter, FiRefreshCw, FiHome, FiTrendingUp, FiPieChart\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport { \r\n  getSystemStats, \r\n  getVendedores,\r\n  getDashboardTop10,\r\n  getMonthlyGoal,\r\n  setMonthlyGoal,\r\n  exportReport \r\n} from '../services/reports';\r\nimport { \r\n  VentasPorVendedorReport, \r\n  ProyectosPorEstadoReport, \r\n  CotizacionesReport, \r\n  ClientesReport \r\n} from '../components/reports/ReportComponents';\r\nimport { SalesBarChart, SalesDistributionChart, GoalProgressChart } from '../components/reports/DashboardCharts';\r\nimport GoalConfigModal from '../components/reports/GoalConfigModal';\r\n\r\nexport default function Reportes() {\r\n  const queryClient = useQueryClient();\r\n  const [activeReport, setActiveReport] = useState('ventas');\r\n  const [dateRange, setDateRange] = useState({\r\n    start: new Date().toISOString().slice(0, 7), // YYYY-MM\r\n    end: new Date().toISOString().slice(0, 7)\r\n  });\r\n  const [selectedVendedor, setSelectedVendedor] = useState('');\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [showDashboard, setShowDashboard] = useState(false);\r\n  const [sortBy, setSortBy] = useState('total_quotes'); // total_sales, total_projects, total_quotes, approval_rate\r\n  const [showGoalModal, setShowGoalModal] = useState(false);\r\n  const [isSavingGoal, setIsSavingGoal] = useState(false);\r\n\r\n  // Función para obtener el último día del mes\r\n  const getLastDayOfMonth = (yearMonth) => {\r\n    const [year, month] = yearMonth.split('-');\r\n    const lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();\r\n    return `${yearMonth}-${lastDay.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Consultas de datos reales\r\n  const { data: statsData, isLoading: statsLoading, refetch: refetchStats } = useQuery(\r\n    ['systemStats', dateRange],\r\n    () => getSystemStats({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end)\r\n    }),\r\n    { staleTime: 30000 }\r\n  );\r\n\r\n  const { data: vendedoresData } = useQuery('vendedores', getVendedores, { staleTime: 300000 });\r\n\r\n  // Consulta para el dashboard top 10\r\n  const { data: dashboardData, isLoading: dashboardLoading } = useQuery(\r\n    ['dashboardTop10', dateRange, sortBy, selectedVendedor],\r\n    () => getDashboardTop10({\r\n      start_date: `${dateRange.start}-01`,\r\n      end_date: getLastDayOfMonth(dateRange.end),\r\n      sort_by: sortBy,\r\n      vendedor_id: selectedVendedor || undefined\r\n    }),\r\n    { \r\n      staleTime: 30000,\r\n      enabled: showDashboard \r\n    }\r\n  );\r\n\r\n  // Estado para el período de la meta\r\n  const [goalPeriod, setGoalPeriod] = useState({\r\n    year: new Date().getFullYear(),\r\n    month: new Date().getMonth() + 1\r\n  });\r\n\r\n  // Consulta para la meta mensual\r\n  const { data: goalData, isLoading: goalLoading } = useQuery(\r\n    ['monthlyGoal', goalPeriod.year, goalPeriod.month],\r\n    () => getMonthlyGoal(goalPeriod.year, goalPeriod.month),\r\n    { \r\n      staleTime: 30000,\r\n      enabled: showDashboard \r\n    }\r\n  );\r\n\r\n  // Función para actualizar todos los datos\r\n  const handleRefresh = () => {\r\n    refetchStats();\r\n  };\r\n\r\n  // Función para exportar reporte\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      await exportReport(activeReport, {\r\n        start_date: `${dateRange.start}-01`,\r\n        end_date: getLastDayOfMonth(dateRange.end),\r\n        vendedor_id: selectedVendedor || undefined\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al exportar:', error);\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  // Función para guardar meta mensual\r\n  const handleSaveGoal = async (goalData) => {\r\n    setIsSavingGoal(true);\r\n    try {\r\n      await setMonthlyGoal({\r\n        year: goalData.year,\r\n        month: goalData.month,\r\n        goal_quantity: parseInt(goalData.goal_quantity)\r\n      });\r\n      \r\n      // Actualizar el período de la meta para refrescar los datos\r\n      setGoalPeriod({\r\n        year: goalData.year,\r\n        month: goalData.month\r\n      });\r\n      \r\n      // Invalidar las queries para refrescar los datos\r\n      queryClient.invalidateQueries(['monthlyGoal']);\r\n      queryClient.invalidateQueries(['dashboardTop10']);\r\n      \r\n      console.log('Meta guardada:', {\r\n        year: goalData.year,\r\n        month: goalData.month,\r\n        goal_quantity: goalData.goal_quantity\r\n      });\r\n      \r\n      setShowGoalModal(false);\r\n    } catch (error) {\r\n      console.error('Error al guardar meta:', error);\r\n      alert('Error al guardar la meta. Intente nuevamente.');\r\n    } finally {\r\n      setIsSavingGoal(false);\r\n    }\r\n  };\r\n\r\n  const reportTypes = [\r\n    {\r\n      id: 'ventas',\r\n      title: 'Ventas por Vendedor',\r\n      description: 'Análisis de ventas y proyectos por vendedor',\r\n      icon: FiUsers,\r\n      color: 'primary'\r\n    },\r\n    {\r\n      id: 'proyectos',\r\n      title: 'Proyectos por Estado',\r\n      description: 'Distribución de proyectos según su estado',\r\n      icon: FiHome,\r\n      color: 'info'\r\n    },\r\n    {\r\n      id: 'cotizaciones',\r\n      title: 'Cotizaciones',\r\n      description: 'Reporte de cotizaciones generadas',\r\n      icon: FiFileText,\r\n      color: 'success'\r\n    },\r\n    {\r\n      id: 'clientes',\r\n      title: 'Clientes',\r\n      description: 'Análisis de clientes y empresas',\r\n      icon: FiUsers,\r\n      color: 'warning'\r\n    }\r\n  ];\r\n\r\n  const renderReport = () => {\r\n    switch (activeReport) {\r\n      case 'ventas':\r\n        return <VentasPorVendedorReport dateRange={dateRange} selectedVendedor={selectedVendedor} sortBy={sortBy} />;\r\n      case 'proyectos':\r\n        return <ProyectosPorEstadoReport dateRange={dateRange} />;\r\n      case 'cotizaciones':\r\n        return <CotizacionesReport dateRange={dateRange} selectedVendedor={selectedVendedor} />;\r\n      case 'clientes':\r\n        return <ClientesReport dateRange={dateRange} />;\r\n      default:\r\n        return <VentasPorVendedorReport dateRange={dateRange} selectedVendedor={selectedVendedor} sortBy={sortBy} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fade-in\">\r\n      <PageHeader\r\n        title=\"Reportes y Análisis\"\r\n        subtitle=\"Visualiza estadísticas y genera reportes del sistema\"\r\n        icon={FiBarChart2}\r\n        actions={\r\n          <div className=\"d-flex gap-2\">\r\n            <Button variant=\"primary\" onClick={handleRefresh}>\r\n              <FiRefreshCw className=\"me-2\" />\r\n              Actualizar\r\n            </Button>\r\n            <Button \r\n              variant=\"outline-success\" \r\n              onClick={handleExport}\r\n              disabled={isExporting}\r\n            >\r\n              {isExporting ? (\r\n                <>\r\n                  <Spinner size=\"sm\" className=\"me-2\" />\r\n                  Exportando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FiDownload className=\"me-2\" />\r\n                  Exportar\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Filtros de análisis */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <Row className=\"align-items-center\">\r\n            <Col md={2}>\r\n              <Form.Label>Período</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Text><FiCalendar /></InputGroup.Text>\r\n                <Form.Control\r\n                  type=\"month\"\r\n                  value={dateRange.start}\r\n                  onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Label>Hasta</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Text><FiCalendar /></InputGroup.Text>\r\n                <Form.Control\r\n                  type=\"month\"\r\n                  value={dateRange.end}\r\n                  onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Label>Ordenar por</Form.Label>\r\n              <Form.Select\r\n                value={sortBy}\r\n                onChange={(e) => setSortBy(e.target.value)}\r\n              >\r\n                <option value=\"total_quotes\">Cotizaciones</option>\r\n                <option value=\"total_sales\">Total Ventas</option>\r\n                <option value=\"total_projects\">Total Proyectos</option>\r\n                <option value=\"approval_rate\">Tasa Aprobación</option>\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Label>Vendedor</Form.Label>\r\n              <Form.Select\r\n                value={selectedVendedor}\r\n                onChange={(e) => setSelectedVendedor(e.target.value)}\r\n              >\r\n                <option value=\"\">Todos los vendedores</option>\r\n                {Array.isArray(vendedoresData?.data) && vendedoresData.data.map((vendedor) => (\r\n                  <option key={vendedor.id} value={vendedor.id}>\r\n                    {vendedor.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={4} className=\"d-flex align-items-end gap-2\">\r\n              <Button variant=\"outline-secondary\">\r\n                <FiFilter className=\"me-2\" />\r\n                Aplicar Filtros\r\n              </Button>\r\n              <Button \r\n                variant=\"primary\" \r\n                onClick={() => setShowDashboard(!showDashboard)}\r\n              >\r\n                <FiPieChart className=\"me-2\" />\r\n                Dashboard Top 10\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Estadísticas generales */}\r\n      <Row className=\"g-4 mb-4\">\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Total Proyectos\"\r\n            value={statsLoading ? <Spinner size=\"sm\" /> : (statsData?.data?.total_projects || 0)}\r\n            icon={FiHome}\r\n            trend=\"up\"\r\n            trendValue={`${statsData?.data?.active_projects || 0} activos`}\r\n            variant=\"primary\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Cotizaciones Enviadas\"\r\n            value={statsLoading ? <Spinner size=\"sm\" /> : (statsData?.data?.total_quotes || 0)}\r\n            icon={FiFileText}\r\n            trend=\"up\"\r\n            trendValue={`${statsData?.data?.approved_quotes || 0} aprobadas`}\r\n            variant=\"success\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Clientes Activos\"\r\n            value={statsLoading ? <Spinner size=\"sm\" /> : (statsData?.data?.total_clients || 0)}\r\n            icon={FiUsers}\r\n            trend=\"up\"\r\n            trendValue={`${statsData?.data?.active_clients || 0} con proyectos`}\r\n            variant=\"info\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Ventas del Mes\"\r\n            value={statsLoading ? <Spinner size=\"sm\" /> : `S/ ${Number(statsData?.data?.monthly_sales || 0).toLocaleString('es-PE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\r\n            icon={FiDollarSign}\r\n            trend=\"up\"\r\n            trendValue={`S/ ${Number(statsData?.data?.total_quotes_value || 0).toLocaleString('es-PE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} total`}\r\n            variant=\"warning\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Dashboard Top 10 Vendedores */}\r\n      {showDashboard && (\r\n        <Card className=\"mb-4\">\r\n          <Card.Header>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiTrendingUp className=\"me-2\" />\r\n                Dashboard - Top 10 Vendedores\r\n              </h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <Button \r\n                  variant=\"outline-primary\" \r\n                  size=\"sm\"\r\n                  onClick={() => setShowGoalModal(true)}\r\n                >\r\n                  <FiCalendar className=\"me-1\" />\r\n                  Configurar Meta\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"py-3\">\r\n            {dashboardLoading ? (\r\n              <div className=\"text-center py-4\">\r\n                <Spinner animation=\"border\" />\r\n                <div className=\"mt-2\">Cargando datos del dashboard...</div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {/* Primera fila: Gráfico de barras */}\r\n                <div className=\"mb-3\" style={{ height: '280px' }}>\r\n                  <SalesBarChart \r\n                    data={dashboardData?.data || []} \r\n                    sortBy={sortBy}\r\n                    goalData={goalData?.data}\r\n                  />\r\n                </div>\r\n                \r\n                {/* Segunda fila: Gráficos circulares y estadísticas */}\r\n                <Row className=\"g-3\">\r\n                  <Col md={4}>\r\n                    <div style={{ height: '200px' }}>\r\n                      <GoalProgressChart \r\n                        currentSales={dashboardData?.stats?.totalQuotes || 0}\r\n                        goalQuantity={goalData?.data?.goal_quantity || 0}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <div style={{ height: '200px' }}>\r\n                      <SalesDistributionChart \r\n                        stats={dashboardData?.stats}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <div className=\"d-flex flex-column justify-content-center h-100\">\r\n                      <div className=\"text-center mb-3\">\r\n                        <div className=\"fw-bold fs-3 text-primary\">\r\n                          {dashboardData?.stats?.totalQuotes || 0}\r\n                        </div>\r\n                        <small className=\"text-muted\">Total Ventas</small>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <div className=\"fw-bold fs-3 text-success\">\r\n                          {dashboardData?.stats?.avgApprovalRate ? \r\n                            `${dashboardData.stats.avgApprovalRate.toFixed(1)}%` : \r\n                            '0%'\r\n                          }\r\n                        </div>\r\n                        <small className=\"text-muted\">Tasa Promedio</small>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Selector de reportes */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <h5 className=\"mb-3\">Seleccionar Tipo de Reporte</h5>\r\n          <Row className=\"g-3\">\r\n            {reportTypes.map((report) => {\r\n              const Icon = report.icon;\r\n              return (\r\n                <Col md={6} lg={3} key={report.id}>\r\n                  <Card \r\n                    className={`h-100 cursor-pointer ${activeReport === report.id ? 'border-primary' : ''}`}\r\n                    onClick={() => setActiveReport(report.id)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <Card.Body className=\"text-center\">\r\n                      <Icon size={32} className={`text-${report.color} mb-2`} />\r\n                      <h6 className=\"fw-medium\">{report.title}</h6>\r\n                      <small className=\"text-muted\">{report.description}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Contenido del reporte */}\r\n      <Card>\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">\r\n            {reportTypes.find(r => r.id === activeReport)?.title}\r\n          </h5>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {renderReport()}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n            {/* Modal para configurar meta */}\r\n            <GoalConfigModal\r\n              show={showGoalModal}\r\n              onHide={() => setShowGoalModal(false)}\r\n              currentGoal={goalData?.data}\r\n              onSave={handleSaveGoal}\r\n              year={goalPeriod.year}\r\n              month={goalPeriod.month}\r\n              isLoading={isSavingGoal}\r\n            />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getSystemStats","params","queryParams","url","apiFetch","getVentasPorVendedor","getProyectosPorEstado","getCotizacionesPorPeriodo","getClientesActivos","getVendedores","getDashboardTop10","getMonthlyGoal","year","month","setMonthlyGoal","goalData","exportReport","reportType","response","define_process_env_default","blob","downloadUrl","link","VentasPorVendedorReport","dateRange","selectedVendedor","sortBy","currentPage","setCurrentPage","React","itemsPerPage","getLastDayOfMonth","yearMonth","lastDay","data","isLoading","error","useQuery","columns","value","row","jsx","jsxs","Badge","Button","FiEye","Alert","FiAlertTriangle","DataTable","_a","_b","_c","page","ProyectosPorEstadoReport","getStatusBadge","status","config","FiCheckCircle","FiClock","FiX","Icon","CotizacionesReport","ClientesReport","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","meta","xScale","yScale","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","Animations","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iScale","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","indexScaleId","firstScaleAxisId","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","axisCount","axisID","axisNumber","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","distanceToDefinedLo","distanceToDefinedHi","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipSelf","borderWidth","borderJoinStyle","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderRadius","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","defaultDatasetIdKey","reforwardRef","ref","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","forwardRef","createTypedChart","registerables","Bar","Doughnut","ChartJS","SalesBarChart","goalValue","chartData","vendedor","SalesDistributionChart","stats","GoalProgressChart","currentSales","goalQuantity","progressPercentage","GoalConfigModal","show","onHide","currentGoal","onSave","goalAmount","setGoalAmount","useState","setError","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","handleSubmit","handleClose","Modal","FiTarget","Row","Col","Form","Fragment","Spinner","FiSave","Reportes","queryClient","useQueryClient","activeReport","setActiveReport","setDateRange","setSelectedVendedor","isExporting","setIsExporting","showDashboard","setShowDashboard","setSortBy","showGoalModal","setShowGoalModal","isSavingGoal","setIsSavingGoal","statsData","statsLoading","refetchStats","vendedoresData","dashboardData","dashboardLoading","goalPeriod","setGoalPeriod","goalLoading","handleRefresh","handleExport","handleSaveGoal","reportTypes","FiUsers","FiHome","FiFileText","renderReport","PageHeader","FiBarChart2","FiRefreshCw","FiDownload","Card","InputGroup","FiCalendar","FiFilter","FiPieChart","StatsCard","_d","_e","_f","_g","FiDollarSign","_h","FiTrendingUp","_i","_j","_k","_l","report","_m"],"mappings":"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","x_google_ignoreList":[2,3,4,5]}