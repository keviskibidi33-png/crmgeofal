{"version":3,"file":"Usuarios-CgV70enT.js","sources":["../../src/pages/Usuarios.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Button, Badge, Row, Col, Card, Container } from 'react-bootstrap';\nimport { FiPlus, FiEdit, FiTrash2, FiLock, FiUser, FiUsers, FiShield, FiSettings } from 'react-icons/fi';\nimport PageHeader from '../components/common/PageHeader';\nimport DataTable from '../components/common/DataTable';\nimport ModalForm from '../components/common/ModalForm';\nimport StatsCard from '../components/common/StatsCard';\nimport { listUsers, createUser, updateUser, deleteUser, resetPassword } from '../services/users';\n\nconst emptyForm = { name: '', apellido: '', email: '', role: 'vendedor_comercial', area: 'Comercial', password: '' };\n\nconst ROLES = [\n  { value: 'admin', label: 'Administrador' },\n  { value: 'jefa_comercial', label: 'Jefa Comercial' },\n  { value: 'vendedor_comercial', label: 'Vendedor Comercial' },\n  { value: 'jefe_laboratorio', label: 'Jefe Laboratorio' },\n  { value: 'usuario_laboratorio', label: 'Usuario Laboratorio' },\n  { value: 'laboratorio', label: 'Laboratorio' },\n  { value: 'soporte', label: 'Soporte' },\n  { value: 'gerencia', label: 'Gerencia' },\n];\n\nconst AREAS = [\n  { value: 'Comercial', label: 'Comercial' },\n  { value: 'Laboratorio', label: 'Laboratorio' },\n  { value: 'Sistemas', label: 'Sistemas' },\n  { value: 'Gerencia', label: 'Gerencia' },\n  { value: 'Soporte', label: 'Soporte' },\n];\n\nexport default function Usuarios() {\n  const [showModal, setShowModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [deletingUser, setDeletingUser] = useState(null);\n  const [resettingUser, setResettingUser] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n\n  const queryClient = useQueryClient();\n\n  const { data, isLoading } = useQuery(\n    ['users'],\n    () => listUsers(),\n    { keepPreviousData: true }\n  );\n\n  const handleMutationSuccess = (message) => {\n    queryClient.invalidateQueries('users');\n    setShowModal(false);\n    setEditingUser(null);\n    setDeletingUser(null);\n    setResettingUser(null);\n    setNewPassword('');\n  };\n\n  const createMutation = useMutation(createUser, {\n    onSuccess: () => handleMutationSuccess('Usuario creado exitosamente'),\n    onError: (error) => console.error('Error creating user:', error)\n  });\n\n  const updateMutation = useMutation(updateUser, {\n    onSuccess: () => handleMutationSuccess('Usuario actualizado exitosamente'),\n    onError: (error) => console.error('Error updating user:', error)\n  });\n\n  const deleteMutation = useMutation(deleteUser, {\n    onSuccess: () => handleMutationSuccess('Usuario eliminado exitosamente'),\n    onError: (error) => console.error('Error deleting user:', error)\n  });\n\n  const resetPasswordMutation = useMutation(resetPassword, {\n    onSuccess: () => handleMutationSuccess('Contraseña restablecida exitosamente'),\n    onError: (error) => console.error('Error resetting password:', error)\n  });\n\n  const handleCreate = () => {\n    setEditingUser(emptyForm);\n    setShowModal(true);\n  };\n\n  const handleEdit = (user) => {\n    setEditingUser(user);\n    setShowModal(true);\n  };\n\n  const handleDelete = (user) => {\n    if (window.confirm(`¿Estás seguro de que quieres eliminar al usuario ${user.name}?`)) {\n      deleteMutation.mutate(user.id);\n    }\n  };\n\n  const handleResetPassword = (user) => {\n    setResettingUser(user);\n    setNewPassword('');\n  };\n\n  const handleSubmit = async (formData) => {\n    if (editingUser.id) {\n      await updateMutation.mutateAsync({ id: editingUser.id, ...formData });\n    } else {\n      await createMutation.mutateAsync(formData);\n    }\n  };\n\n  const handlePasswordReset = async () => {\n    if (newPassword && resettingUser) {\n      await resetPasswordMutation.mutateAsync({ \n        id: resettingUser.id, \n        password: newPassword \n      });\n    }\n  };\n\n  const getRoleBadgeColor = (role) => {\n    const colors = {\n      admin: 'danger',\n      jefa_comercial: 'warning',\n      vendedor_comercial: 'primary',\n      jefe_laboratorio: 'info',\n      usuario_laboratorio: 'secondary',\n      laboratorio: 'secondary',\n      soporte: 'success',\n      gerencia: 'dark'\n    };\n    return colors[role] || 'secondary';\n  };\n\n  const getRoleLabel = (role) => {\n    const roleObj = ROLES.find(r => r.value === role);\n    return roleObj ? roleObj.label : role;\n  };\n\n  const columns = [\n    {\n      header: 'ID',\n      accessor: 'id',\n      width: '80px'\n    },\n    {\n      header: 'Nombre',\n      accessor: 'name',\n      render: (value, row) => (\n        <div>\n          <div className=\"fw-medium\">{row.name} {row.apellido}</div>\n          <small className=\"text-muted\">{row.email}</small>\n        </div>\n      )\n    },\n    {\n      header: 'Rol',\n      accessor: 'role',\n      render: (value) => (\n        <Badge bg={getRoleBadgeColor(value)} className=\"status-badge\">\n          {getRoleLabel(value)}\n        </Badge>\n      )\n    },\n    {\n      header: 'Área',\n      accessor: 'area',\n      render: (value) => (\n        <Badge bg=\"light\" text=\"dark\" className=\"status-badge\">\n          {value}\n        </Badge>\n      )\n    },\n    {\n      header: 'Fecha Creación',\n      accessor: 'created_at',\n      type: 'date'\n    }\n  ];\n\n  const formFields = [\n    {\n      name: 'name',\n      label: 'Nombre',\n      type: 'text',\n      required: true,\n      placeholder: 'Ingresa el nombre'\n    },\n    {\n      name: 'apellido',\n      label: 'Apellido',\n      type: 'text',\n      required: true,\n      placeholder: 'Ingresa el apellido'\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true,\n      placeholder: 'usuario@ejemplo.com'\n    },\n    {\n      name: 'role',\n      label: 'Rol',\n      type: 'select',\n      required: true,\n      options: ROLES\n    },\n    {\n      name: 'area',\n      label: 'Área',\n      type: 'select',\n      required: true,\n      options: AREAS\n    },\n    {\n      name: 'password',\n      label: 'Contraseña',\n      type: 'password',\n      required: !editingUser?.id,\n      placeholder: 'Mínimo 6 caracteres',\n      help: editingUser?.id ? 'Dejar vacío para mantener la contraseña actual' : 'Mínimo 6 caracteres'\n    }\n  ];\n\n  const actions = [\n    {\n      label: 'Editar',\n      icon: FiEdit,\n      onClick: handleEdit,\n      variant: 'outline-primary'\n    },\n    {\n      label: 'Eliminar',\n      icon: FiTrash2,\n      onClick: handleDelete,\n      variant: 'outline-danger'\n    }\n  ];\n\n  // Calcular estadísticas\n  const stats = useMemo(() => {\n    const users = data?.users || [];\n    return {\n      total: users.length,\n      admins: users.filter(u => u.role === 'admin').length,\n      vendedores: users.filter(u => u.role === 'vendedor_comercial').length,\n      laboratorio: users.filter(u => ['jefe_laboratorio', 'usuario_laboratorio', 'laboratorio'].includes(u.role)).length,\n      activos: users.filter(u => u.active !== false).length\n    };\n  }, [data]);\n\n  return (\n    <Container fluid className=\"py-4\">\n      <div className=\"fade-in\">\n        <PageHeader\n          title=\"Gestión de Usuarios\"\n          subtitle=\"Crear, editar, eliminar y gestionar usuarios del sistema\"\n          icon={FiUsers}\n          actions={\n            <Button variant=\"primary\" onClick={handleCreate}>\n              <FiPlus className=\"me-2\" />\n              Nuevo Usuario\n            </Button>\n          }\n        />\n\n        {/* Estadísticas */}\n        <Row className=\"g-4 mb-4\">\n          <Col md={6} lg={3}>\n            <StatsCard\n              title=\"Total Usuarios\"\n              value={stats.total}\n              icon={FiUsers}\n              color=\"primary\"\n              subtitle=\"Usuarios registrados\"\n            />\n          </Col>\n          <Col md={6} lg={3}>\n            <StatsCard\n              title=\"Administradores\"\n              value={stats.admins}\n              icon={FiShield}\n              color=\"danger\"\n              subtitle=\"Usuarios con privilegios\"\n            />\n          </Col>\n          <Col md={6} lg={3}>\n            <StatsCard\n              title=\"Vendedores\"\n              value={stats.vendedores}\n              icon={FiUser}\n              color=\"success\"\n              subtitle=\"Equipo comercial\"\n            />\n          </Col>\n          <Col md={6} lg={3}>\n            <StatsCard\n              title=\"Laboratorio\"\n              value={stats.laboratorio}\n              icon={FiSettings}\n              color=\"info\"\n              subtitle=\"Personal técnico\"\n            />\n          </Col>\n        </Row>\n\n        {/* Tabla de usuarios */}\n        <Card className=\"shadow-sm border-0\">\n          <Card.Header className=\"bg-white border-bottom\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h5 className=\"mb-0\">\n                <FiUsers className=\"me-2 text-primary\" />\n                Lista de Usuarios\n              </h5>\n              <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\n                {stats.total} usuarios\n              </Badge>\n            </div>\n          </Card.Header>\n          <Card.Body className=\"p-0\">\n            <DataTable\n              data={data?.users || []}\n              columns={columns}\n              loading={isLoading}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n              emptyMessage=\"No hay usuarios registrados\"\n              actions={[\n                {\n                  label: 'Restablecer Contraseña',\n                  icon: FiLock,\n                  onClick: handleResetPassword,\n                  variant: 'outline-warning'\n                }\n              ]}\n            />\n          </Card.Body>\n        </Card>\n\n      <ModalForm\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        title={editingUser?.id ? 'Editar Usuario' : 'Nuevo Usuario'}\n        data={editingUser || emptyForm}\n        fields={formFields}\n        onSubmit={handleSubmit}\n        loading={createMutation.isLoading || updateMutation.isLoading}\n        submitText={editingUser?.id ? 'Actualizar' : 'Crear'}\n      />\n\n      {/* Modal para restablecer contraseña */}\n      {resettingUser && (\n        <ModalForm\n          show={!!resettingUser}\n          onHide={() => setResettingUser(null)}\n          title=\"Restablecer Contraseña\"\n          data={{ password: newPassword }}\n          fields={[\n            {\n              name: 'password',\n              label: 'Nueva Contraseña',\n              type: 'password',\n              required: true,\n              placeholder: 'Mínimo 6 caracteres'\n            }\n          ]}\n          onSubmit={handlePasswordReset}\n          loading={resetPasswordMutation.isLoading}\n          submitText=\"Restablecer\"\n        />\n      )}\n      </div>\n    </Container>\n  );\n};"],"names":["emptyForm","ROLES","AREAS","Usuarios","showModal","setShowModal","useState","editingUser","setEditingUser","deletingUser","setDeletingUser","resettingUser","setResettingUser","newPassword","setNewPassword","queryClient","useQueryClient","data","isLoading","useQuery","listUsers","handleMutationSuccess","message","createMutation","useMutation","createUser","error","updateMutation","updateUser","deleteMutation","deleteUser","resetPasswordMutation","resetPassword","handleCreate","handleEdit","user","handleDelete","handleResetPassword","handleSubmit","formData","handlePasswordReset","getRoleBadgeColor","role","getRoleLabel","roleObj","r","columns","value","row","jsxs","jsx","Badge","formFields","stats","useMemo","users","u","Container","PageHeader","FiUsers","Button","FiPlus","Row","Col","StatsCard","FiShield","FiUser","FiSettings","Card","DataTable","FiLock","ModalForm"],"mappings":"8hBAUA,MAAMA,EAAY,CAAE,KAAM,GAAI,SAAU,GAAI,MAAO,GAAI,KAAM,qBAAsB,KAAM,YAAa,SAAU,EAAA,EAE1GC,EAAQ,CACZ,CAAE,MAAO,QAAS,MAAO,eAAA,EACzB,CAAE,MAAO,iBAAkB,MAAO,gBAAA,EAClC,CAAE,MAAO,qBAAsB,MAAO,oBAAA,EACtC,CAAE,MAAO,mBAAoB,MAAO,kBAAA,EACpC,CAAE,MAAO,sBAAuB,MAAO,qBAAA,EACvC,CAAE,MAAO,cAAe,MAAO,aAAA,EAC/B,CAAE,MAAO,UAAW,MAAO,SAAA,EAC3B,CAAE,MAAO,WAAY,MAAO,UAAA,CAC9B,EAEMC,GAAQ,CACZ,CAAE,MAAO,YAAa,MAAO,WAAA,EAC7B,CAAE,MAAO,cAAe,MAAO,aAAA,EAC/B,CAAE,MAAO,WAAY,MAAO,UAAA,EAC5B,CAAE,MAAO,WAAY,MAAO,UAAA,EAC5B,CAAE,MAAO,UAAW,MAAO,SAAA,CAC7B,EAEA,SAAwBC,IAAW,CACjC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,IAAI,EAC7C,CAACG,GAAcC,CAAe,EAAIJ,EAAAA,SAAS,IAAI,EAC/C,CAACK,EAAeC,CAAgB,EAAIN,EAAAA,SAAS,IAAI,EACjD,CAACO,EAAaC,CAAc,EAAIR,EAAAA,SAAS,EAAE,EAE3CS,EAAcC,EAAA,EAEd,CAAE,KAAAC,EAAM,UAAAC,CAAA,EAAcC,EAC1B,CAAC,OAAO,EACR,IAAMC,GAAA,EACN,CAAE,iBAAkB,EAAA,CAAK,EAGrBC,EAAyBC,GAAY,CACzCP,EAAY,kBAAkB,OAAO,EACrCV,EAAa,EAAK,EAClBG,EAAe,IAAI,EACnBE,EAAgB,IAAI,EACpBE,EAAiB,IAAI,EACrBE,EAAe,EAAE,CACnB,EAEMS,EAAiBC,EAAYC,GAAY,CAC7C,UAAW,IAAMJ,EAAmD,EACpE,QAAUK,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAChE,EAEKC,EAAiBH,EAAYI,GAAY,CAC7C,UAAW,IAAMP,EAAwD,EACzE,QAAUK,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAChE,EAEKG,EAAiBL,EAAYM,GAAY,CAC7C,UAAW,IAAMT,EAAsD,EACvE,QAAUK,GAAU,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAChE,EAEKK,EAAwBP,EAAYQ,GAAe,CACvD,UAAW,IAAMX,EAA4D,EAC7E,QAAUK,GAAU,QAAQ,MAAM,4BAA6BA,CAAK,CAAA,CACrE,EAEKO,EAAe,IAAM,CACzBzB,EAAeR,CAAS,EACxBK,EAAa,EAAI,CACnB,EAEM6B,EAAcC,GAAS,CAC3B3B,EAAe2B,CAAI,EACnB9B,EAAa,EAAI,CACnB,EAEM+B,EAAgBD,GAAS,CACzB,OAAO,QAAQ,oDAAoDA,EAAK,IAAI,GAAG,GACjFN,EAAe,OAAOM,EAAK,EAAE,CAEjC,EAEME,EAAuBF,GAAS,CACpCvB,EAAiBuB,CAAI,EACrBrB,EAAe,EAAE,CACnB,EAEMwB,EAAe,MAAOC,GAAa,CACnChC,EAAY,GACd,MAAMoB,EAAe,YAAY,CAAE,GAAIpB,EAAY,GAAI,GAAGgC,EAAU,EAEpE,MAAMhB,EAAe,YAAYgB,CAAQ,CAE7C,EAEMC,EAAsB,SAAY,CAClC3B,GAAeF,GACjB,MAAMoB,EAAsB,YAAY,CACtC,GAAIpB,EAAc,GAClB,SAAUE,CAAA,CACX,CAEL,EAEM4B,EAAqBC,IACV,CACb,MAAO,SACP,eAAgB,UAChB,mBAAoB,UACpB,iBAAkB,OAClB,oBAAqB,YACrB,YAAa,YACb,QAAS,UACT,SAAU,MAAA,GAEEA,CAAI,GAAK,YAGnBC,EAAgBD,GAAS,CAC7B,MAAME,EAAU3C,EAAM,KAAK4C,GAAKA,EAAE,QAAUH,CAAI,EAChD,OAAOE,EAAUA,EAAQ,MAAQF,CACnC,EAEMI,EAAU,CACd,CACE,OAAQ,KACR,SAAU,KACV,MAAO,MAAA,EAET,CACE,OAAQ,SACR,SAAU,OACV,OAAQ,CAACC,EAAOC,WACb,MAAA,CACC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,YAAa,SAAA,CAAAD,EAAI,KAAK,IAAEA,EAAI,QAAA,EAAS,EACpDE,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAc,WAAI,KAAA,CAAM,CAAA,CAAA,CAC3C,CAAA,EAGJ,CACE,OAAQ,MACR,SAAU,OACV,OAASH,GACPG,EAAAA,IAACC,EAAA,CAAM,GAAIV,EAAkBM,CAAK,EAAG,UAAU,eAC5C,SAAAJ,EAAaI,CAAK,CAAA,CACrB,CAAA,EAGJ,CACE,OAAQ,OACR,SAAU,OACV,OAASA,GACPG,MAACC,EAAA,CAAM,GAAG,QAAQ,KAAK,OAAO,UAAU,eACrC,SAAAJ,CAAA,CACH,CAAA,EAGJ,CACE,OAAQ,iBACR,SAAU,aACV,KAAM,MAAA,CACR,EAGIK,EAAa,CACjB,CACE,KAAM,OACN,MAAO,SACP,KAAM,OACN,SAAU,GACV,YAAa,mBAAA,EAEf,CACE,KAAM,WACN,MAAO,WACP,KAAM,OACN,SAAU,GACV,YAAa,qBAAA,EAEf,CACE,KAAM,QACN,MAAO,QACP,KAAM,QACN,SAAU,GACV,YAAa,qBAAA,EAEf,CACE,KAAM,OACN,MAAO,MACP,KAAM,SACN,SAAU,GACV,QAASnD,CAAA,EAEX,CACE,KAAM,OACN,MAAO,OACP,KAAM,SACN,SAAU,GACV,QAASC,EAAA,EAEX,CACE,KAAM,WACN,MAAO,aACP,KAAM,WACN,SAAU,EAACK,GAAA,MAAAA,EAAa,IACxB,YAAa,sBACb,KAAMA,GAAA,MAAAA,EAAa,GAAK,iDAAmD,qBAAA,CAC7E,EAmBI8C,EAAQC,EAAAA,QAAQ,IAAM,CAC1B,MAAMC,GAAQtC,GAAA,YAAAA,EAAM,QAAS,CAAA,EAC7B,MAAO,CACL,MAAOsC,EAAM,OACb,OAAQA,EAAM,UAAYC,EAAE,OAAS,OAAO,EAAE,OAC9C,WAAYD,EAAM,UAAYC,EAAE,OAAS,oBAAoB,EAAE,OAC/D,YAAaD,EAAM,OAAOC,GAAK,CAAC,mBAAoB,sBAAuB,aAAa,EAAE,SAASA,EAAE,IAAI,CAAC,EAAE,OAC5G,QAASD,EAAM,UAAYC,EAAE,SAAW,EAAK,EAAE,MAAA,CAEnD,EAAG,CAACvC,CAAI,CAAC,EAET,OACEiC,EAAAA,IAACO,GAAU,MAAK,GAAC,UAAU,OACzB,SAAAR,EAAAA,KAAC,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CACC,MAAM,sBACN,SAAS,2DACT,KAAMC,EACN,QACEV,EAAAA,KAACW,EAAA,CAAO,QAAQ,UAAU,QAAS3B,EACjC,SAAA,CAAAiB,EAAAA,IAACW,EAAA,CAAO,UAAU,MAAA,CAAO,EAAE,eAAA,CAAA,CAE7B,CAAA,CAAA,EAKJZ,EAAAA,KAACa,EAAA,CAAI,UAAU,WACb,SAAA,CAAAZ,EAAAA,IAACa,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAb,EAAAA,IAACc,EAAA,CACC,MAAM,iBACN,MAAOX,EAAM,MACb,KAAMM,EACN,MAAM,UACN,SAAS,sBAAA,CAAA,EAEb,EACAT,EAAAA,IAACa,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAb,EAAAA,IAACc,EAAA,CACC,MAAM,kBACN,MAAOX,EAAM,OACb,KAAMY,EACN,MAAM,SACN,SAAS,0BAAA,CAAA,EAEb,EACAf,EAAAA,IAACa,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAb,EAAAA,IAACc,EAAA,CACC,MAAM,aACN,MAAOX,EAAM,WACb,KAAMa,EACN,MAAM,UACN,SAAS,kBAAA,CAAA,EAEb,EACAhB,EAAAA,IAACa,EAAA,CAAI,GAAI,EAAG,GAAI,EACd,SAAAb,EAAAA,IAACc,EAAA,CACC,MAAM,cACN,MAAOX,EAAM,YACb,KAAMc,EACN,MAAM,OACN,SAAS,kBAAA,CAAA,CACX,CACF,CAAA,EACF,EAGAlB,EAAAA,KAACmB,EAAA,CAAK,UAAU,qBACd,SAAA,CAAAlB,EAAAA,IAACkB,EAAK,OAAL,CAAY,UAAU,yBACrB,SAAAnB,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,OACZ,SAAA,CAAAC,EAAAA,IAACS,EAAA,CAAQ,UAAU,mBAAA,CAAoB,EAAE,mBAAA,EAE3C,SACCR,EAAA,CAAM,GAAG,QAAQ,KAAK,OAAO,UAAU,YACrC,SAAA,CAAAE,EAAM,MAAM,WAAA,CAAA,CACf,CAAA,CAAA,CACF,CAAA,CACF,EACAH,EAAAA,IAACkB,EAAK,KAAL,CAAU,UAAU,MACnB,SAAAlB,EAAAA,IAACmB,EAAA,CACC,MAAMpD,GAAA,YAAAA,EAAM,QAAS,CAAA,EACrB,QAAA6B,EACA,QAAS5B,EACT,OAAQgB,EACR,SAAUE,EACV,aAAa,8BACb,QAAS,CACP,CACE,MAAO,yBACP,KAAMkC,EACN,QAASjC,EACT,QAAS,iBAAA,CACX,CACF,CAAA,CACF,CACF,CAAA,EACF,EAEFa,EAAAA,IAACqB,EAAA,CACC,KAAMnE,EACN,OAAQ,IAAMC,EAAa,EAAK,EAChC,MAAOE,GAAA,MAAAA,EAAa,GAAK,iBAAmB,gBAC5C,KAAMA,GAAeP,EACrB,OAAQoD,EACR,SAAUd,EACV,QAASf,EAAe,WAAaI,EAAe,UACpD,WAAYpB,GAAA,MAAAA,EAAa,GAAK,aAAe,OAAA,CAAA,EAI9CI,GACCuC,EAAAA,IAACqB,EAAA,CACC,KAAM,CAAC,CAAC5D,EACR,OAAQ,IAAMC,EAAiB,IAAI,EACnC,MAAM,yBACN,KAAM,CAAE,SAAUC,CAAA,EAClB,OAAQ,CACN,CACE,KAAM,WACN,MAAO,mBACP,KAAM,WACN,SAAU,GACV,YAAa,qBAAA,CACf,EAEF,SAAU2B,EACV,QAAST,EAAsB,UAC/B,WAAW,aAAA,CAAA,CACb,CAAA,CAEF,CAAA,CACF,CAEJ"}