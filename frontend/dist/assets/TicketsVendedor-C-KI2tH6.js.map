{"version":3,"file":"TicketsVendedor-C-KI2tH6.js","sources":["../../src/components/TicketChatVendedor.jsx","../../src/components/TicketHistoryVendedor.jsx","../../src/pages/TicketsVendedor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FiMessageSquare, FiSend, FiUser, FiClock, FiCheck, FiWifi, FiWifiOff } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { createComment, getCommentsByTicket } from '../services/ticketComments';\r\nimport './TicketChatVendedor.css';\r\n\r\nconst TicketChatVendedor = ({ ticketId }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [syncStatus, setSyncStatus] = useState('idle'); // idle, syncing, success, error\r\n  const messagesEndRef = useRef(null);\r\n  const { user } = useAuth();\r\n\r\n  // Detectar estado de conexi√≥n\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/health', { \r\n          method: 'HEAD',\r\n          timeout: 3000 \r\n        });\r\n        setIsOnline(response.ok);\r\n      } catch (error) {\r\n        setIsOnline(false);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n    const interval = setInterval(checkConnection, 10000); // Verificar cada 10 segundos\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Sistema de conversaci√≥n id√©ntico al m√≥dulo de proyectos (queries_history)\r\n  useEffect(() => {\r\n    loadComments();\r\n    \r\n    // Polling para actualizar comentarios cada 5 segundos\r\n    const interval = setInterval(() => {\r\n      if (isOnline) {\r\n        loadComments();\r\n      }\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [ticketId, isOnline]);\r\n\r\n  const loadComments = async () => {\r\n    try {\r\n      // Cargar desde backend √∫nicamente (como proyectos)\r\n      const backendComments = await getCommentsByTicket(ticketId);\r\n      console.log('üîç Comentarios del backend:', backendComments);\r\n      \r\n      if (backendComments && backendComments.length > 0) {\r\n        // Convertir al formato queries_history (id√©ntico a proyectos)\r\n        const queriesHistory = backendComments.map(comment => ({\r\n          message: comment.comment,\r\n          user_name: comment.user_name || 'Usuario',\r\n          created_at: comment.created_at\r\n        }));\r\n        setComments(queriesHistory);\r\n        console.log('‚úÖ Comentarios cargados desde backend:', queriesHistory);\r\n      } else {\r\n        // Si no hay comentarios, mostrar array vac√≠o (como proyectos)\r\n        setComments([]);\r\n        console.log('üìù No hay comentarios en el backend');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Error cargando comentarios del backend:', error);\r\n      // En caso de error, mostrar array vac√≠o\r\n      setComments([]);\r\n    }\r\n  };\r\n\r\n\r\n  // Scroll autom√°tico al final\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [comments]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() && !isLoading) {\r\n      setIsLoading(true);\r\n      setSyncStatus('syncing');\r\n      \r\n      const messageText = newComment.trim();\r\n      setNewComment(''); // Limpiar inmediatamente\r\n\r\n      try {\r\n        // Enviar al backend primero\r\n        const response = await createComment({\r\n          ticket_id: ticketId,\r\n          comment: messageText\r\n        });\r\n        \r\n        console.log('‚úÖ Mensaje enviado al backend:', response);\r\n        \r\n        // Recargar comentarios desde el backend para sincronizar\r\n        await loadComments();\r\n        \r\n        setSyncStatus('success');\r\n        console.log('‚úÖ Mensaje sincronizado correctamente');\r\n        \r\n      } catch (error) {\r\n        console.error('‚ùå Error enviando mensaje al backend:', error);\r\n        setSyncStatus('error');\r\n        // No mostrar modal, solo cambiar el estado visual\r\n      }\r\n\r\n      setIsLoading(false);\r\n      // Resetear estado despu√©s de 3 segundos\r\n      setTimeout(() => setSyncStatus('idle'), 3000);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('es-ES', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const isSystemComment = (comment) => comment.user_name === 'Sistema';\r\n\r\n  // Funci√≥n para obtener color consistente por usuario\r\n  const getUserColor = (userName) => {\r\n    const colors = ['#3b82f6', '#ef4444']; // Azul y Rojo\r\n    const hash = userName.split('').reduce((a, b) => {\r\n      a = ((a << 5) - a) + b.charCodeAt(0);\r\n      return a & a;\r\n    }, 0);\r\n    return colors[Math.abs(hash) % colors.length];\r\n  };\r\n\r\n  const getSyncStatusIcon = () => {\r\n    switch (syncStatus) {\r\n      case 'syncing': return <div className=\"spinner-small\"></div>;\r\n      case 'success': return <FiCheck className=\"text-success\" />;\r\n      case 'error': return <FiWifiOff className=\"text-warning\" />;\r\n      default: return isOnline ? <FiWifi className=\"text-success\" /> : <FiWifiOff className=\"text-danger\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ticket-chat-vendedor\">\r\n      <div className=\"ticket-chat-header\">\r\n        <FiMessageSquare className=\"chat-icon\" />\r\n        <h4>Conversaci√≥n con Soporte</h4>\r\n        <div className=\"header-info\">\r\n          <span className=\"comment-count\">{comments.length} mensajes</span>\r\n          <div className=\"connection-status\">\r\n            {getSyncStatusIcon()}\r\n            <span className=\"status-text\">\r\n              {isOnline ? 'Conectado' : 'Offline'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"ticket-chat-messages\">\r\n        {comments.map((message, index) => {\r\n          const userColor = isSystemComment(message) ? '#6c757d' : getUserColor(message.user_name || 'Usuario');\r\n          const isOwnMessage = message.user_name === user?.name;\r\n          \r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`message ${isSystemComment(message) ? 'system' : isOwnMessage ? 'own' : 'other'}`}\r\n            >\r\n              <div className=\"message-header\">\r\n                <div className=\"message-user\">\r\n                  <div \r\n                    className=\"user-color-bar\"\r\n                    style={{ \r\n                      width: '4px', \r\n                      height: '20px', \r\n                      backgroundColor: userColor,\r\n                      borderRadius: '2px',\r\n                      marginRight: '8px'\r\n                    }}\r\n                  />\r\n                  <FiUser className=\"user-icon\" style={{ color: userColor }} />\r\n                  <span className=\"user-name\" style={{ color: userColor }}>\r\n                    {message.user_name}\r\n                  </span>\r\n                </div>\r\n                <div className=\"message-time\">\r\n                  <FiClock className=\"time-icon\" />\r\n                  {formatDate(message.created_at)}\r\n                </div>\r\n              </div>\r\n              <div className=\"message-content\">\r\n                {message.message}\r\n              </div>\r\n              <div className=\"message-status\">\r\n                <FiCheck className=\"read-icon\" />\r\n                Le√≠do\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form className=\"ticket-chat-input\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder={isOnline ? \"Escribe tu mensaje al equipo de soporte...\" : \"Escribe tu mensaje (se guardar√° offline)...\"}\r\n            className=\"comment-input\"\r\n            rows={3}\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={!newComment.trim() || isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"spinner-small\"></div>\r\n            ) : (\r\n              <FiSend className=\"send-icon\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"sync-status\">\r\n          {syncStatus === 'syncing' && <span>Sincronizando...</span>}\r\n          {syncStatus === 'success' && <span className=\"text-success\">‚úÖ Enviado a soporte</span>}\r\n          {syncStatus === 'error' && <span className=\"text-warning\">‚ö†Ô∏è Guardado offline</span>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketChatVendedor;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Card, Badge, Row, Col, Button, Form, Tabs, Tab } from 'react-bootstrap';\r\nimport { \r\n  FiClock, FiUser, FiMessageSquare, FiCheckCircle, FiX, \r\n  FiEdit, FiFlag, FiTag, FiCalendar, FiEye, FiFileText,\r\n  FiDownload, FiUpload, FiPhone, FiMail, FiMapPin\r\n} from 'react-icons/fi';\r\nimport TicketChatVendedor from './TicketChatVendedor';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport './TicketHistoryVendedor.css';\r\n\r\nconst TicketHistoryVendedor = ({ show, onHide, ticket, onUpdateStatus }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const { user } = useAuth();\r\n  \r\n  // Los vendedores no pueden cambiar el estado, solo los admins y soporte\r\n  const canEditStatus = user?.role === 'admin' || user?.role === 'soporte';\r\n  \r\n  // Debug: mostrar el rol del usuario\r\n  console.log('üîç Usuario actual:', user);\r\n  console.log('üîç Rol:', user?.role);\r\n  console.log('üîç Puede editar estado:', canEditStatus);\r\n  console.log('üîç Es vendedor:', user?.role === 'vendedor_comercial');\r\n\r\n  if (!ticket) return null;\r\n\r\n  const getStatusBadge = (status) => {\r\n    const variants = {\r\n      abierto: { bg: 'warning', text: 'Abierto' },\r\n      en_progreso: { bg: 'info', text: 'En Progreso' },\r\n      cerrado: { bg: 'success', text: 'Cerrado' },\r\n      cancelado: { bg: 'danger', text: 'Cancelado' }\r\n    };\r\n    return variants[status] || { bg: 'secondary', text: status };\r\n  };\r\n\r\n  const getPriorityBadge = (priority) => {\r\n    const variants = {\r\n      baja: { bg: 'success', text: 'Baja' },\r\n      media: { bg: 'warning', text: 'Media' },\r\n      alta: { bg: 'danger', text: 'Alta' },\r\n      urgente: { bg: 'dark', text: 'Urgente' }\r\n    };\r\n    return variants[priority] || { bg: 'secondary', text: priority };\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString('es-ES', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleStatusChange = (newStatus) => {\r\n    if (onUpdateStatus) {\r\n      onUpdateStatus(ticket.id, newStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n      <Modal.Header closeButton className=\"modal-header-vendedor\">\r\n        <Modal.Title>\r\n          <FiMessageSquare className=\"me-2\" />\r\n          Historial del Ticket #{ticket.id}\r\n        </Modal.Title>\r\n        <small className=\"text-light ms-2\">{ticket.title}</small>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body className=\"modal-body-vendedor\">\r\n        <Tabs defaultActiveKey=\"details\" className=\"ticket-tabs\">\r\n          {/* Pesta√±a de Detalles */}\r\n          <Tab eventKey=\"details\" title=\"Detalles\">\r\n            <Row>\r\n              {/* Informaci√≥n principal */}\r\n              <Col md={8}>\r\n                <Card className=\"mb-4\">\r\n                  <Card.Header>\r\n                    <h6 className=\"mb-0\">\r\n                      <FiFileText className=\"me-2\" />\r\n                      Informaci√≥n del Ticket\r\n                    </h6>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <div className=\"info-item\">\r\n                          <strong>T√≠tulo:</strong>\r\n                          <p className=\"mb-2\">{ticket.title}</p>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                          <strong>Descripci√≥n:</strong>\r\n                          <p className=\"mb-2\">{ticket.description}</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <div className=\"info-item\">\r\n                          <strong>Estado:</strong>\r\n                          <div className=\"mb-2\">\r\n                            <Badge bg={getStatusBadge(ticket.status).bg}>\r\n                              {getStatusBadge(ticket.status).text}\r\n                            </Badge>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                          <strong>Prioridad:</strong>\r\n                          <div className=\"mb-2\">\r\n                            <Badge bg={getPriorityBadge(ticket.priority).bg}>\r\n                              {getPriorityBadge(ticket.priority).text}\r\n                            </Badge>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                          <strong>M√≥dulo:</strong>\r\n                          <p className=\"mb-2\">{ticket.module || 'No especificado'}</p>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                          <strong>Creado:</strong>\r\n                          <p className=\"mb-2\">\r\n                            <FiCalendar className=\"me-1\" />\r\n                            {formatDate(ticket.created_at)}\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                {/* Informaci√≥n adicional */}\r\n                {(ticket.category || ticket.type || ticket.tags || ticket.additional_notes) && (\r\n                  <Card className=\"mb-4\">\r\n                    <Card.Header>\r\n                      <h6 className=\"mb-0\">\r\n                        <FiTag className=\"me-2\" />\r\n                        Informaci√≥n Adicional\r\n                      </h6>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <Row>\r\n                        {ticket.category && (\r\n                          <Col md={6}>\r\n                            <div className=\"info-item\">\r\n                              <strong>Categor√≠a:</strong>\r\n                              <p className=\"mb-2\">{ticket.category}</p>\r\n                            </div>\r\n                          </Col>\r\n                        )}\r\n                        {ticket.type && (\r\n                          <Col md={6}>\r\n                            <div className=\"info-item\">\r\n                              <strong>Tipo:</strong>\r\n                              <p className=\"mb-2\">{ticket.type}</p>\r\n                            </div>\r\n                          </Col>\r\n                        )}\r\n                        {ticket.tags && (\r\n                          <Col md={6}>\r\n                            <div className=\"info-item\">\r\n                              <strong>Tags:</strong>\r\n                              <p className=\"mb-2\">{ticket.tags}</p>\r\n                            </div>\r\n                          </Col>\r\n                        )}\r\n                        {ticket.estimated_time && (\r\n                          <Col md={6}>\r\n                            <div className=\"info-item\">\r\n                              <strong>Tiempo Estimado:</strong>\r\n                              <p className=\"mb-2\">{ticket.estimated_time}</p>\r\n                            </div>\r\n                          </Col>\r\n                        )}\r\n                        {ticket.additional_notes && (\r\n                          <Col md={12}>\r\n                            <div className=\"info-item\">\r\n                              <strong>Notas Adicionales:</strong>\r\n                              <p className=\"mb-2\">{ticket.additional_notes}</p>\r\n                            </div>\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                )}\r\n              </Col>\r\n\r\n              {/* Panel lateral */}\r\n              <Col md={4}>\r\n                {/* Estado del ticket */}\r\n                <Card className=\"mb-4\">\r\n                  <Card.Header>\r\n                    <h6 className=\"mb-0\">\r\n                      <FiFlag className=\"me-2\" />\r\n                      {canEditStatus ? 'Control de Estado' : 'Estado del Ticket'}\r\n                    </h6>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"status-controls\">\r\n                      {canEditStatus ? (\r\n                        // Solo admins y soporte pueden editar\r\n                        <Form.Select\r\n                          value={ticket.status}\r\n                          onChange={(e) => handleStatusChange(e.target.value)}\r\n                          className=\"mb-3\"\r\n                        >\r\n                          <option value=\"abierto\">Abierto</option>\r\n                          <option value=\"en_progreso\">En Progreso</option>\r\n                          <option value=\"cerrado\">Cerrado</option>\r\n                          <option value=\"cancelado\">Cancelado</option>\r\n                        </Form.Select>\r\n                      ) : (\r\n                        // Vendedores solo pueden ver\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Estado Actual:</label>\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <Badge \r\n                              bg={getStatusBadge(ticket.status).bg} \r\n                              className=\"me-2\"\r\n                            >\r\n                              {getStatusBadge(ticket.status).text}\r\n                            </Badge>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"status-info\">\r\n                        <small className=\"text-muted\">\r\n                          <FiClock className=\"me-1\" />\r\n                          √öltima actualizaci√≥n: {formatDate(ticket.updated_at || ticket.created_at)}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                {/* Informaci√≥n del creador */}\r\n                <Card className=\"mb-4\">\r\n                  <Card.Header>\r\n                    <h6 className=\"mb-0\">\r\n                      <FiUser className=\"me-2\" />\r\n                      Informaci√≥n del Creador\r\n                    </h6>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"creator-info\">\r\n                      <p className=\"mb-1\">\r\n                        <strong>Vendedor:</strong> {user?.name} {user?.apellido}\r\n                      </p>\r\n                      <p className=\"mb-1\">\r\n                        <strong>Email:</strong> {user?.email}\r\n                      </p>\r\n                      <p className=\"mb-1\">\r\n                        <strong>Rol:</strong> {user?.role}\r\n                      </p>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                {/* Archivos adjuntos */}\r\n                {ticket.attachment_url && (\r\n                  <Card className=\"mb-4\">\r\n                    <Card.Header>\r\n                      <h6 className=\"mb-0\">\r\n                        <FiUpload className=\"me-2\" />\r\n                        Archivo Adjunto\r\n                      </h6>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <div className=\"attachment-info\">\r\n                        <p className=\"mb-2\">\r\n                          <FiFileText className=\"me-2\" />\r\n                          Archivo adjunto disponible\r\n                        </p>\r\n                        <Button \r\n                          variant=\"outline-primary\" \r\n                          size=\"sm\"\r\n                          href={ticket.attachment_url}\r\n                          target=\"_blank\"\r\n                        >\r\n                          <FiDownload className=\"me-1\" />\r\n                          Descargar\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n\r\n          {/* Pesta√±a de Conversaci√≥n */}\r\n          <Tab eventKey=\"chat\" title=\"Conversaci√≥n\">\r\n            <TicketChatVendedor \r\n              ticketId={ticket.id}\r\n            />\r\n          </Tab>\r\n        </Tabs>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer className=\"modal-footer-vendedor\">\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          <FiX className=\"me-2\" />\r\n          Cerrar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TicketHistoryVendedor;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Container, Row, Col, Card, Button, Badge, Form, InputGroup, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport { \r\n  FiPlus, FiSearch, FiFilter, FiClock, FiUser, FiMessageSquare, \r\n  FiFileText, FiUpload, FiEye, FiEdit, FiTrash2, FiCheckCircle,\r\n  FiAlertTriangle, FiFlag, FiTag, FiCalendar, FiDownload\r\n} from 'react-icons/fi';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { listTickets, createTicket, updateTicketStatus } from '../services/tickets';\r\nimport TicketFormUnified from '../components/TicketFormUnified';\r\nimport TicketHistoryVendedor from '../components/TicketHistoryVendedor';\r\nimport SuccessModal from '../components/SuccessModal';\r\nimport './TicketsVendedor.css';\r\n\r\nconst TicketsVendedor = () => {\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showHistoryModal, setShowHistoryModal] = useState(false);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('todos');\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [priorityFilter, setPriorityFilter] = useState('todos');\r\n  const { user } = useAuth();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Obtener tickets del vendedor\r\n  const { data: tickets = [], isLoading, error } = useQuery(\r\n    'tickets-vendedor',\r\n    () => listTickets({ user_id: user?.id }),\r\n    {\r\n      enabled: !!user?.id,\r\n      refetchInterval: 30000 // Refrescar cada 30 segundos\r\n    }\r\n  );\r\n\r\n  // Mutaciones\r\n  const createMutation = useMutation(createTicket, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('tickets-vendedor');\r\n      setShowCreateModal(false);\r\n      // Mostrar modal de √©xito personalizado\r\n      setSuccessMessage('El ticket ha sido creado exitosamente y est√° listo para ser procesado por el equipo de soporte.');\r\n      setShowSuccessModal(true);\r\n    },\r\n    onError: () => {\r\n      alert('‚ùå Error al crear el ticket');\r\n    }\r\n  });\r\n\r\n  const updateMutation = useMutation(\r\n    ({ id, status }) => updateTicketStatus(id, status),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries('tickets-vendedor');\r\n        // Mostrar modal de √©xito personalizado\r\n        setSuccessMessage('El estado del ticket ha sido actualizado exitosamente.');\r\n        setShowSuccessModal(true);\r\n      },\r\n      onError: () => {\r\n        alert('‚ùå Error al actualizar el ticket');\r\n      }\r\n    }\r\n  );\r\n\r\n  // Filtrar tickets\r\n  const filteredTickets = useMemo(() => {\r\n    if (!Array.isArray(tickets)) return [];\r\n    \r\n    return tickets.filter(ticket => {\r\n      const matchesSearch = ticket.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                          ticket.description?.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesStatus = statusFilter === 'todos' || ticket.status === statusFilter;\r\n      const matchesPriority = priorityFilter === 'todos' || ticket.priority === priorityFilter;\r\n      \r\n      return matchesSearch && matchesStatus && matchesPriority;\r\n    });\r\n  }, [tickets, searchTerm, statusFilter, priorityFilter]);\r\n\r\n  // Estad√≠sticas\r\n  const stats = useMemo(() => {\r\n    if (!Array.isArray(tickets)) return { total: 0, abiertos: 0, en_progreso: 0, cerrados: 0 };\r\n    \r\n    return {\r\n      total: tickets.length,\r\n      abiertos: tickets.filter(t => t.status === 'abierto').length,\r\n      en_progreso: tickets.filter(t => t.status === 'en_progreso').length,\r\n      cerrados: tickets.filter(t => t.status === 'cerrado').length\r\n    };\r\n  }, [tickets]);\r\n\r\n  const getStatusBadge = (status) => {\r\n    const variants = {\r\n      abierto: 'warning',\r\n      en_progreso: 'info',\r\n      cerrado: 'success',\r\n      cancelado: 'danger'\r\n    };\r\n    return variants[status] || 'secondary';\r\n  };\r\n\r\n  const getPriorityBadge = (priority) => {\r\n    const variants = {\r\n      baja: 'success',\r\n      media: 'warning',\r\n      alta: 'danger',\r\n      urgente: 'dark'\r\n    };\r\n    return variants[priority] || 'secondary';\r\n  };\r\n\r\n  const handleCreateTicket = (ticketData) => {\r\n    createMutation.mutate({\r\n      ...ticketData,\r\n      user_id: user.id,\r\n      assigned_to: null, // Vendedor crea el ticket, soporte lo asigna\r\n      status: 'abierto'\r\n    });\r\n  };\r\n\r\n  const handleUpdateStatus = (ticketId, newStatus) => {\r\n    updateMutation.mutate({ id: ticketId, status: newStatus });\r\n  };\r\n\r\n  const handleViewTicket = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setShowHistoryModal(true);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"visually-hidden\">Cargando...</span>\r\n          </div>\r\n          <p className=\"mt-2\">Cargando tickets...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          <Alert.Heading>Error cargando tickets</Alert.Heading>\r\n          <p>{error.message}</p>\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      {/* Header */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h2 className=\"mb-1\">\r\n                <FiMessageSquare className=\"me-2\" />\r\n                Mis Tickets\r\n              </h2>\r\n              <p className=\"text-muted mb-0\">Gestiona tus tickets y solicitudes</p>\r\n            </div>\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={() => setShowCreateModal(true)}\r\n              className=\"btn-modern\"\r\n            >\r\n              <FiPlus className=\"me-2\" />\r\n              Nuevo Ticket\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Estad√≠sticas */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <FiMessageSquare className=\"stat-icon text-primary\" />\r\n              <h3 className=\"stat-number\">{stats.total}</h3>\r\n              <p className=\"stat-label\">Total Tickets</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <FiClock className=\"stat-icon text-warning\" />\r\n              <h3 className=\"stat-number\">{stats.abiertos}</h3>\r\n              <p className=\"stat-label\">Abiertos</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <FiUser className=\"stat-icon text-info\" />\r\n              <h3 className=\"stat-number\">{stats.en_progreso}</h3>\r\n              <p className=\"stat-label\">En Progreso</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <FiCheckCircle className=\"stat-icon text-success\" />\r\n              <h3 className=\"stat-number\">{stats.cerrados}</h3>\r\n              <p className=\"stat-label\">Cerrados</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filtros */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Text><FiSearch /></InputGroup.Text>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Buscar tickets...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Select\r\n            value={statusFilter}\r\n            onChange={(e) => setStatusFilter(e.target.value)}\r\n          >\r\n            <option value=\"todos\">Todos los estados</option>\r\n            <option value=\"abierto\">Abierto</option>\r\n            <option value=\"en_progreso\">En Progreso</option>\r\n            <option value=\"cerrado\">Cerrado</option>\r\n            <option value=\"cancelado\">Cancelado</option>\r\n          </Form.Select>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Select\r\n            value={priorityFilter}\r\n            onChange={(e) => setPriorityFilter(e.target.value)}\r\n          >\r\n            <option value=\"todos\">Todas las prioridades</option>\r\n            <option value=\"baja\">Baja</option>\r\n            <option value=\"media\">Media</option>\r\n            <option value=\"alta\">Alta</option>\r\n            <option value=\"urgente\">Urgente</option>\r\n          </Form.Select>\r\n        </Col>\r\n        <Col md={2}>\r\n          <Button variant=\"outline-secondary\" className=\"w-100\">\r\n            <FiFilter className=\"me-2\" />\r\n            Filtros\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Lista de Tickets */}\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Mis Tickets ({filteredTickets.length})</h5>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0\">\r\n              {filteredTickets.length === 0 ? (\r\n                <div className=\"text-center py-5\">\r\n                  <FiMessageSquare className=\"text-muted\" size={48} />\r\n                  <h5 className=\"mt-3 text-muted\">No hay tickets</h5>\r\n                  <p className=\"text-muted\">Crea tu primer ticket para comenzar</p>\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    onClick={() => setShowCreateModal(true)}\r\n                  >\r\n                    <FiPlus className=\"me-2\" />\r\n                    Crear Ticket\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"ticket-list\">\r\n                  {filteredTickets.map((ticket) => (\r\n                    <div key={ticket.id} className=\"ticket-item\">\r\n                      <div className=\"ticket-header\">\r\n                        <div className=\"ticket-title\">\r\n                          <h6 className=\"mb-1\">{ticket.title}</h6>\r\n                          <div className=\"ticket-meta\">\r\n                            <Badge bg={getStatusBadge(ticket.status)} className=\"me-2\">\r\n                              {ticket.status}\r\n                            </Badge>\r\n                            <Badge bg={getPriorityBadge(ticket.priority)} className=\"me-2\">\r\n                              {ticket.priority}\r\n                            </Badge>\r\n                            <small className=\"text-muted\">\r\n                              <FiCalendar className=\"me-1\" />\r\n                              {new Date(ticket.created_at).toLocaleDateString()}\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"ticket-actions\">\r\n                          <Button\r\n                            variant=\"outline-primary\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleViewTicket(ticket)}\r\n                          >\r\n                            <FiEye className=\"me-1\" />\r\n                            Ver\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"ticket-content\">\r\n                        <p className=\"text-muted mb-2\">{ticket.description}</p>\r\n                        {ticket.module && (\r\n                          <Badge bg=\"info\" className=\"me-1\">\r\n                            <FiTag className=\"me-1\" />\r\n                            {ticket.module}\r\n                          </Badge>\r\n                        )}\r\n                        {ticket.category && (\r\n                          <Badge bg=\"secondary\" className=\"me-1\">\r\n                            {ticket.category}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modales */}\r\n      <TicketFormUnified\r\n        show={showCreateModal}\r\n        onHide={() => setShowCreateModal(false)}\r\n        onSubmit={handleCreateTicket}\r\n        isLoading={createMutation.isLoading}\r\n      />\r\n\r\n      <TicketHistoryVendedor\r\n        show={showHistoryModal}\r\n        onHide={() => setShowHistoryModal(false)}\r\n        ticket={selectedTicket}\r\n        onUpdateStatus={handleUpdateStatus}\r\n      />\r\n\r\n      {/* Modal de √âxito */}\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        title=\"¬°Ticket Procesado!\"\r\n        message={successMessage}\r\n        buttonText=\"Continuar\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TicketsVendedor;\r\n"],"names":["TicketChatVendedor","ticketId","newComment","setNewComment","useState","comments","setComments","isLoading","setIsLoading","isOnline","setIsOnline","syncStatus","setSyncStatus","messagesEndRef","useRef","user","useAuth","useEffect","checkConnection","response","interval","loadComments","backendComments","getCommentsByTicket","queriesHistory","comment","error","scrollToBottom","_a","handleSubmit","e","messageText","createComment","formatDate","dateString","isSystemComment","getUserColor","userName","colors","hash","a","b","getSyncStatusIcon","jsx","FiCheck","FiWifiOff","FiWifi","jsxs","FiMessageSquare","message","index","userColor","isOwnMessage","FiUser","FiClock","FiSend","TicketHistoryVendedor","show","onHide","ticket","onUpdateStatus","canEditStatus","getStatusBadge","status","getPriorityBadge","priority","handleStatusChange","newStatus","Modal","Tabs","Tab","Row","Col","Card","FiFileText","Badge","FiCalendar","FiTag","FiFlag","Form","FiUpload","Button","FiDownload","FiX","TicketsVendedor","showCreateModal","setShowCreateModal","showHistoryModal","setShowHistoryModal","selectedTicket","setSelectedTicket","searchTerm","setSearchTerm","statusFilter","setStatusFilter","showSuccessModal","setShowSuccessModal","successMessage","setSuccessMessage","priorityFilter","setPriorityFilter","queryClient","useQueryClient","tickets","useQuery","listTickets","createMutation","useMutation","createTicket","updateMutation","id","updateTicketStatus","filteredTickets","useMemo","matchesSearch","_b","matchesStatus","matchesPriority","stats","t","handleCreateTicket","ticketData","handleUpdateStatus","handleViewTicket","Container","Alert","FiPlus","FiCheckCircle","InputGroup","FiSearch","FiFilter","FiEye","TicketFormUnified","SuccessModal"],"mappings":"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"}