{"version":3,"file":"Auditoria-D_ktlTjJ.js","sources":["../../node_modules/react-bootstrap/esm/ButtonGroup.js","../../src/services/audit.js","../../src/services/auditActions.js","../../src/hooks/useAuditStats.js","../../src/services/auditExport.js","../../src/components/AuditAdvancedFilters.jsx","../../src/components/AuditDetailModal.jsx","../../src/components/AuditBulkActions.jsx","../../src/components/AuditAnalytics.jsx","../../src/components/AuditCleanup.jsx","../../src/pages/Auditoria.jsx"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import { apiFetch } from './api';\r\n\r\nexport const listAudit = (params = {}) => {\r\n  const sp = new URLSearchParams();\r\n  if (params.page) sp.set('page', params.page);\r\n  if (params.limit) sp.set('limit', params.limit);\r\n  // Filtros básicos\r\n  if (params.search) sp.set('search', params.search);\r\n  if (params.action && params.action !== 'all') sp.set('action', params.action);\r\n  if (params.user && params.user !== 'all') sp.set('user', params.user);\r\n  if (params.date && params.date !== 'all') sp.set('date', params.date);\r\n  // Filtros avanzados\r\n  if (params.dateStart) sp.set('dateStart', params.dateStart);\r\n  if (params.dateEnd) sp.set('dateEnd', params.dateEnd);\r\n  if (params.timeStart) sp.set('timeStart', params.timeStart);\r\n  if (params.timeEnd) sp.set('timeEnd', params.timeEnd);\r\n\r\n  const qs = sp.toString();\r\n  const path = qs ? `/api/audit?${qs}` : '/api/audit';\r\n  return apiFetch(path);\r\n};\r\n\r\nexport default { listAudit };\r\n","import { apiFetch } from './api';\r\n\r\n// Obtener detalles de un registro de auditoría\r\nexport const getAuditDetails = async (id) => {\r\n  const response = await apiFetch(`/api/audit/${id}`);\r\n  return response;\r\n};\r\n\r\n// Editar un registro de auditoría\r\nexport const editAuditRecord = async (id, data) => {\r\n  const response = await apiFetch(`/api/audit/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data)\r\n  });\r\n  return response;\r\n};\r\n\r\n// Eliminar un registro de auditoría\r\nexport const deleteAuditRecord = async (id) => {\r\n  const response = await apiFetch(`/api/audit/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return response;\r\n};\r\n\r\n// Eliminar múltiples registros\r\nexport const deleteBulkAuditRecords = async (ids) => {\r\n  const response = await apiFetch('/api/audit/bulk-delete', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ids })\r\n  });\r\n  return response;\r\n};\r\n\r\n// Archivar registros\r\nexport const archiveAuditRecords = async (ids) => {\r\n  const response = await apiFetch('/api/audit/archive', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ids })\r\n  });\r\n  return response;\r\n};\r\n\r\n// Obtener analytics de auditoría\r\nexport const getAuditAnalytics = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] && filters[key] !== 'all') {\r\n      queryParams.append(key, filters[key]);\r\n    }\r\n  });\r\n  \r\n  const response = await apiFetch(`/api/audit/analytics?${queryParams.toString()}`);\r\n  return response;\r\n};\r\n\r\n// Obtener usuarios activos en auditoría\r\nexport const getActiveUsers = async () => {\r\n  const response = await apiFetch('/api/audit/active-users');\r\n  return response;\r\n};\r\n\r\n// Limpiar registros antiguos\r\nexport const cleanupOldRecords = async (hours = 24) => {\r\n  const response = await apiFetch('/api/audit/cleanup', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ hours })\r\n  });\r\n  return response;\r\n};\r\n\r\n// Obtener estadísticas de limpieza\r\nexport const getCleanupStats = async () => {\r\n  const response = await apiFetch('/api/audit/cleanup-stats');\r\n  return response;\r\n};\r\n\r\nexport const getHourlyDistribution = async (hours = 24) => {\r\n  const response = await apiFetch(`/api/audit/hourly-distribution?hours=${hours}`);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getAuditDetails,\r\n  editAuditRecord,\r\n  deleteAuditRecord,\r\n  deleteBulkAuditRecords,\r\n  archiveAuditRecords,\r\n  getAuditAnalytics,\r\n  getActiveUsers,\r\n  cleanupOldRecords,\r\n  getCleanupStats,\r\n  getHourlyDistribution\r\n};\r\n","import { useQuery } from 'react-query';\r\nimport { listAudit } from '../services/audit';\r\nimport { getAuditAnalytics, getActiveUsers } from '../services/auditActions';\r\n\r\nexport const useAuditStats = () => {\r\n  return useQuery(['audit-stats-global'], async () => {\r\n    try {\r\n      // Intentar obtener analytics del servidor\r\n      const [analyticsResp, activeUsersResp] = await Promise.all([\r\n        getAuditAnalytics().catch(() => null),\r\n        getActiveUsers().catch(() => null)\r\n      ]);\r\n      \r\n      // Si el servidor tiene analytics, usarlos\r\n      if (analyticsResp && analyticsResp.data) {\r\n        return {\r\n          ...analyticsResp.data,\r\n          activeUsers: activeUsersResp?.data || []\r\n        };\r\n      }\r\n      \r\n      // Fallback: calcular localmente\r\n      const resp = await listAudit({ page: 1, limit: 10000 });\r\n      const rows = Array.isArray(resp?.data) ? resp.data : (resp?.rows || resp || []);\r\n      const total = Number(resp?.total || rows.length || 0);\r\n      \r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      \r\n      const todayActivities = rows.filter(row => {\r\n        const activityDate = new Date(row.performed_at || row.created_at);\r\n        return activityDate >= today;\r\n      }).length;\r\n      \r\n      const uniqueUsers = [...new Set(rows.map(row => row.user_name || row.performed_by || row.user_id))].length;\r\n      const uniqueActions = [...new Set(rows.map(row => row.action))].length;\r\n      \r\n      const actionCounts = rows.reduce((acc, row) => {\r\n        acc[row.action] = (acc[row.action] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      \r\n      const mostCommonAction = Object.entries(actionCounts).reduce((a, b) => \r\n        actionCounts[a[0]] > actionCounts[b[0]] ? a : b, ['N/A', 0]\r\n      );\r\n      \r\n      const last24Hours = new Date();\r\n      last24Hours.setHours(last24Hours.getHours() - 24);\r\n      \r\n      const recentActivities = rows.filter(row => {\r\n        const activityDate = new Date(row.performed_at || row.created_at);\r\n        return activityDate >= last24Hours;\r\n      }).length;\r\n      \r\n      const lastWeek = new Date();\r\n      lastWeek.setDate(lastWeek.getDate() - 7);\r\n      \r\n      const weekActivities = rows.filter(row => {\r\n        const activityDate = new Date(row.performed_at || row.created_at);\r\n        return activityDate >= lastWeek;\r\n      }).length;\r\n      \r\n      // Obtener usuarios activos\r\n      const activeUsers = activeUsersResp?.data || [];\r\n      \r\n      return {\r\n        total,\r\n        todayActivities,\r\n        uniqueUsers,\r\n        uniqueActions,\r\n        mostCommonAction: mostCommonAction[0],\r\n        mostCommonCount: mostCommonAction[1],\r\n        recentActivities,\r\n        weekActivities,\r\n        actionCounts,\r\n        activeUsers\r\n      };\r\n    } catch (error) {\r\n      console.error('Error obteniendo estadísticas:', error);\r\n      return {\r\n        total: 0,\r\n        todayActivities: 0,\r\n        uniqueUsers: 0,\r\n        uniqueActions: 0,\r\n        mostCommonAction: 'N/A',\r\n        mostCommonCount: 0,\r\n        recentActivities: 0,\r\n        weekActivities: 0,\r\n        actionCounts: {},\r\n        activeUsers: []\r\n      };\r\n    }\r\n  }, {\r\n    staleTime: 0,\r\n    cacheTime: 1 * 60 * 1000,\r\n    refetchOnWindowFocus: true,\r\n    refetchOnMount: true,\r\n  });\r\n};\r\n","import { apiFetch } from './api';\r\n\r\n// Exportar auditoría a Excel\r\nexport const exportAuditToExcel = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  // Agregar filtros a los parámetros\r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] && filters[key] !== 'all') {\r\n      queryParams.append(key, filters[key]);\r\n    }\r\n  });\r\n  \r\n  const response = await apiFetch(`/api/audit/export/excel?${queryParams.toString()}`, {\r\n    method: 'GET',\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  return response;\r\n};\r\n\r\n// Exportar auditoría a PDF\r\nexport const exportAuditToPDF = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] && filters[key] !== 'all') {\r\n      queryParams.append(key, filters[key]);\r\n    }\r\n  });\r\n  \r\n  const response = await apiFetch(`/api/audit/export/pdf?${queryParams.toString()}`, {\r\n    method: 'GET',\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  return response;\r\n};\r\n\r\n// Exportar auditoría a CSV\r\nexport const exportAuditToCSV = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] && filters[key] !== 'all') {\r\n      queryParams.append(key, filters[key]);\r\n    }\r\n  });\r\n  \r\n  const response = await apiFetch(`/api/audit/export/csv?${queryParams.toString()}`, {\r\n    method: 'GET',\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  return response;\r\n};\r\n\r\n// Descargar archivo\r\nexport const downloadFile = (blob, filename) => {\r\n  const url = window.URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\n// Obtener estadísticas de exportación\r\nexport const getExportStats = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] && filters[key] !== 'all') {\r\n      queryParams.append(key, filters[key]);\r\n    }\r\n  });\r\n  \r\n  const response = await apiFetch(`/api/audit/export/stats?${queryParams.toString()}`);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  exportAuditToExcel,\r\n  exportAuditToPDF,\r\n  exportAuditToCSV,\r\n  downloadFile,\r\n  getExportStats\r\n};\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  Form, \r\n  Row, \r\n  Col, \r\n  Button, \r\n  InputGroup,\r\n  Dropdown,\r\n  ButtonGroup,\r\n  Badge\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiFilter, \r\n  FiCalendar, \r\n  FiUser, \r\n  FiSearch,\r\n  FiX,\r\n  FiClock,\r\n  FiSettings\r\n} from 'react-icons/fi';\r\n\r\nexport default function AuditAdvancedFilters({ \r\n  filters, \r\n  onFiltersChange, \r\n  onClearFilters,\r\n  uniqueUsers = [],\r\n  uniqueActions = []\r\n}) {\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    onFiltersChange({\r\n      ...filters,\r\n      [key]: value\r\n    });\r\n  };\r\n\r\n  const handleDateRangeChange = (type, value) => {\r\n    const newFilters = { ...filters };\r\n    \r\n    if (type === 'start') {\r\n      newFilters.dateStart = value;\r\n    } else if (type === 'end') {\r\n      newFilters.dateEnd = value;\r\n    }\r\n    \r\n    onFiltersChange(newFilters);\r\n  };\r\n\r\n  const getActiveFiltersCount = () => {\r\n    let count = 0;\r\n    if (filters.search && filters.search !== '') count++;\r\n    if (filters.action && filters.action !== 'all') count++;\r\n    if (filters.user && filters.user !== 'all') count++;\r\n    if (filters.dateStart) count++;\r\n    if (filters.dateEnd) count++;\r\n    if (filters.dateRange && filters.dateRange !== 'all') count++;\r\n    return count;\r\n  };\r\n\r\n  const activeFiltersCount = getActiveFiltersCount();\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h6 className=\"mb-0\">\r\n          <FiFilter className=\"me-2\" />\r\n          Filtros de Auditoría\r\n          {activeFiltersCount > 0 && (\r\n            <Badge bg=\"primary\" className=\"ms-2\">\r\n              {activeFiltersCount} activos\r\n            </Badge>\r\n          )}\r\n        </h6>\r\n        <div>\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            size=\"sm\"\r\n            onClick={() => setShowAdvanced(!showAdvanced)}\r\n            className=\"me-2\"\r\n          >\r\n            <FiSettings className=\"me-1\" />\r\n            {showAdvanced ? 'Ocultar' : 'Avanzados'}\r\n          </Button>\r\n          {activeFiltersCount > 0 && (\r\n            <Button\r\n              variant=\"outline-danger\"\r\n              size=\"sm\"\r\n              onClick={onClearFilters}\r\n            >\r\n              <FiX className=\"me-1\" />\r\n              Limpiar\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Card.Header>\r\n      \r\n      <Card.Body>\r\n        {/* Filtros Básicos */}\r\n        <Row className=\"mb-3\">\r\n          <Col md={4}>\r\n            <Form.Group>\r\n              <Form.Label>Buscar:</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Text>\r\n                  <FiSearch />\r\n                </InputGroup.Text>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Buscar en auditoría...\"\r\n                  value={filters.search || ''}\r\n                  onChange={(e) => handleFilterChange('search', e.target.value)}\r\n                />\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n          \r\n          <Col md={2}>\r\n            <Form.Group>\r\n              <Form.Label>Acción:</Form.Label>\r\n              <Form.Select\r\n                value={filters.action || 'all'}\r\n                onChange={(e) => handleFilterChange('action', e.target.value)}\r\n              >\r\n                <option value=\"all\">Todas</option>\r\n                {uniqueActions.map(action => (\r\n                  <option key={action} value={action}>\r\n                    {action}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          \r\n          <Col md={2}>\r\n            <Form.Group>\r\n              <Form.Label>Usuario:</Form.Label>\r\n              <Form.Select\r\n                value={filters.user || 'all'}\r\n                onChange={(e) => handleFilterChange('user', e.target.value)}\r\n              >\r\n                <option value=\"all\">Todos</option>\r\n                {uniqueUsers.map(user => (\r\n                  <option key={user} value={user}>\r\n                    {user}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          \r\n          <Col md={2}>\r\n            <Form.Group>\r\n              <Form.Label>Rango de Fecha:</Form.Label>\r\n              <Form.Select\r\n                value={filters.dateRange || 'all'}\r\n                onChange={(e) => handleFilterChange('dateRange', e.target.value)}\r\n              >\r\n                <option value=\"all\">Todas</option>\r\n                <option value=\"today\">Hoy</option>\r\n                <option value=\"yesterday\">Ayer</option>\r\n                <option value=\"week\">Esta semana</option>\r\n                <option value=\"month\">Este mes</option>\r\n                <option value=\"quarter\">Este trimestre</option>\r\n                <option value=\"year\">Este año</option>\r\n                <option value=\"custom\">Personalizado</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          \r\n          <Col md={2} className=\"d-flex align-items-end\">\r\n            <ButtonGroup className=\"w-100\">\r\n              <Button \r\n                variant=\"outline-primary\" \r\n                onClick={() => setShowAdvanced(!showAdvanced)}\r\n              >\r\n                <FiFilter className=\"me-1\" />\r\n                {showAdvanced ? 'Menos' : 'Más'}\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Filtros Avanzados */}\r\n        {showAdvanced && (\r\n          <Row className=\"border-top pt-3\">\r\n            <Col md={3}>\r\n              <Form.Group>\r\n                <Form.Label>Fecha Inicio:</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiCalendar />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={filters.dateStart || ''}\r\n                    onChange={(e) => handleDateRangeChange('start', e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={3}>\r\n              <Form.Group>\r\n                <Form.Label>Fecha Fin:</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiCalendar />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={filters.dateEnd || ''}\r\n                    onChange={(e) => handleDateRangeChange('end', e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={2}>\r\n              <Form.Group>\r\n                <Form.Label>Hora Inicio:</Form.Label>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  value={filters.timeStart || ''}\r\n                  onChange={(e) => handleFilterChange('timeStart', e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={2}>\r\n              <Form.Group>\r\n                <Form.Label>Hora Fin:</Form.Label>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  value={filters.timeEnd || ''}\r\n                  onChange={(e) => handleFilterChange('timeEnd', e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            <Col md={2} className=\"d-flex align-items-end\">\r\n              <Button \r\n                variant=\"outline-success\" \r\n                className=\"w-100\"\r\n                onClick={() => {\r\n                  // Aplicar filtros personalizados\r\n                  console.log('Aplicando filtros personalizados...');\r\n                }}\r\n              >\r\n                <FiFilter className=\"me-1\" />\r\n                Aplicar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        {/* Filtros Activos */}\r\n        {activeFiltersCount > 0 && (\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              <div className=\"d-flex flex-wrap gap-2\">\r\n                <small className=\"text-muted me-2\">Filtros activos:</small>\r\n                {filters.search && (\r\n                  <Badge bg=\"info\" className=\"d-flex align-items-center\">\r\n                    Búsqueda: {filters.search}\r\n                    <FiX \r\n                      className=\"ms-1\" \r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleFilterChange('search', '')}\r\n                    />\r\n                  </Badge>\r\n                )}\r\n                {filters.action && filters.action !== 'all' && (\r\n                  <Badge bg=\"primary\" className=\"d-flex align-items-center\">\r\n                    Acción: {filters.action}\r\n                    <FiX \r\n                      className=\"ms-1\" \r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleFilterChange('action', 'all')}\r\n                    />\r\n                  </Badge>\r\n                )}\r\n                {filters.user && filters.user !== 'all' && (\r\n                  <Badge bg=\"success\" className=\"d-flex align-items-center\">\r\n                    Usuario: {filters.user}\r\n                    <FiX \r\n                      className=\"ms-1\" \r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleFilterChange('user', 'all')}\r\n                    />\r\n                  </Badge>\r\n                )}\r\n                {filters.dateStart && (\r\n                  <Badge bg=\"warning\" className=\"d-flex align-items-center\">\r\n                    Desde: {filters.dateStart}\r\n                    <FiX \r\n                      className=\"ms-1\" \r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleFilterChange('dateStart', '')}\r\n                    />\r\n                  </Badge>\r\n                )}\r\n                {filters.dateEnd && (\r\n                  <Badge bg=\"warning\" className=\"d-flex align-items-center\">\r\n                    Hasta: {filters.dateEnd}\r\n                    <FiX \r\n                      className=\"ms-1\" \r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleFilterChange('dateEnd', '')}\r\n                    />\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { \r\n  Modal, \r\n  Card, \r\n  Row, \r\n  Col, \r\n  Badge, \r\n  Button,\r\n  ListGroup,\r\n  Alert\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiActivity, \r\n  FiUser, \r\n  FiClock, \r\n  FiMapPin,\r\n  FiInfo,\r\n  FiX,\r\n  FiEdit,\r\n  FiTrash2,\r\n  FiDownload,\r\n  FiEye\r\n} from 'react-icons/fi';\r\n\r\nexport default function AuditDetailModal({ \r\n  show, \r\n  onHide, \r\n  auditRecord,\r\n  onExport,\r\n  onEdit,\r\n  onDelete\r\n}) {\r\n  if (!auditRecord) return null;\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '—';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getActionIcon = (action) => {\r\n    switch (action) {\r\n      case 'crear':\r\n      case 'create':\r\n        return <FiEdit className=\"text-success\" />;\r\n      case 'actualizar':\r\n      case 'update':\r\n        return <FiEdit className=\"text-primary\" />;\r\n      case 'eliminar':\r\n      case 'delete':\r\n        return <FiTrash2 className=\"text-danger\" />;\r\n      case 'login':\r\n        return <FiUser className=\"text-info\" />;\r\n      case 'logout':\r\n        return <FiUser className=\"text-secondary\" />;\r\n      case 'actualizar_estado':\r\n        return <FiActivity className=\"text-warning\" />;\r\n      case 'actualizar_categorias':\r\n        return <FiActivity className=\"text-info\" />;\r\n      default:\r\n        return <FiActivity className=\"text-muted\" />;\r\n    }\r\n  };\r\n\r\n  const getActionBadgeColor = (action) => {\r\n    switch (action) {\r\n      case 'crear':\r\n      case 'create':\r\n        return 'success';\r\n      case 'actualizar':\r\n      case 'update':\r\n        return 'primary';\r\n      case 'eliminar':\r\n      case 'delete':\r\n        return 'danger';\r\n      case 'login':\r\n        return 'info';\r\n      case 'logout':\r\n        return 'secondary';\r\n      case 'actualizar_estado':\r\n        return 'warning';\r\n      case 'actualizar_categorias':\r\n        return 'info';\r\n      default:\r\n        return 'dark';\r\n    }\r\n  };\r\n\r\n  const formatActionThirdPerson = (action) => {\r\n    const actionMap = {\r\n      'crear': 'creó',\r\n      'create': 'creó',\r\n      'actualizar': 'actualizó',\r\n      'update': 'actualizó',\r\n      'eliminar': 'eliminó',\r\n      'delete': 'eliminó',\r\n      'login': 'inició sesión',\r\n      'logout': 'cerró sesión',\r\n      'actualizar_estado': 'actualizó el estado',\r\n      'actualizar_categorias': 'actualizó las categorías',\r\n      'marcar_proyecto': 'marcó el proyecto',\r\n      'exportar': 'exportó',\r\n      'importar': 'importó',\r\n      'configurar': 'configuró',\r\n      'asignar': 'asignó',\r\n      'desasignar': 'desasignó'\r\n    };\r\n    return actionMap[action] || action;\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <FiEye className=\"me-2\" />\r\n          Detalles de Auditoría\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body>\r\n        <Row>\r\n          {/* Información Principal */}\r\n          <Col md={8}>\r\n            <Card className=\"mb-3\">\r\n              <Card.Header>\r\n                <h6 className=\"mb-0\">\r\n                  <FiInfo className=\"me-2\" />\r\n                  Información del Registro\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <div className=\"mb-3\">\r\n                      <strong>ID del Registro:</strong>\r\n                      <div className=\"text-muted\">#{auditRecord.id}</div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <strong>Acción Realizada:</strong>\r\n                      <div className=\"d-flex align-items-center mt-1\">\r\n                        {getActionIcon(auditRecord.action)}\r\n                        <Badge \r\n                          bg={getActionBadgeColor(auditRecord.action)} \r\n                          className=\"ms-2\"\r\n                        >\r\n                          {formatActionThirdPerson(auditRecord.action)}\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <strong>Usuario:</strong>\r\n                      <div className=\"d-flex align-items-center mt-1\">\r\n                        <FiUser className=\"me-2 text-muted\" />\r\n                        <span>{auditRecord.user_name || auditRecord.performed_by || auditRecord.user_id || 'Sistema'}</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  \r\n                  <Col md={6}>\r\n                    <div className=\"mb-3\">\r\n                      <strong>Fecha y Hora:</strong>\r\n                      <div className=\"d-flex align-items-center mt-1\">\r\n                        <FiClock className=\"me-2 text-muted\" />\r\n                        <span>{formatDate(auditRecord.performed_at || auditRecord.created_at)}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <strong>IP del Usuario:</strong>\r\n                      <div className=\"text-muted\">{auditRecord.ip_address || 'No disponible'}</div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <strong>User Agent:</strong>\r\n                      <div className=\"text-muted small\">\r\n                        {auditRecord.user_agent || 'No disponible'}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          \r\n          {/* Información Adicional */}\r\n          <Col md={4}>\r\n            <Card className=\"mb-3\">\r\n              <Card.Header>\r\n                <h6 className=\"mb-0\">\r\n                  <FiMapPin className=\"me-2\" />\r\n                  Contexto\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                    <span>Módulo:</span>\r\n                    <Badge bg=\"info\">{auditRecord.module || 'Sistema'}</Badge>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                    <span>Entidad:</span>\r\n                    <Badge bg=\"secondary\">{auditRecord.entity || 'N/A'}</Badge>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                    <span>ID Entidad:</span>\r\n                    <Badge bg=\"light\" text=\"dark\">{auditRecord.entity_id || 'N/A'}</Badge>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                    <span>Estado:</span>\r\n                    <Badge bg=\"success\">Completado</Badge>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        {/* Notas y Detalles */}\r\n        <Card>\r\n          <Card.Header>\r\n            <h6 className=\"mb-0\">\r\n              <FiActivity className=\"me-2\" />\r\n              Detalles Adicionales\r\n            </h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {auditRecord.notes ? (\r\n              <div>\r\n                <strong>Notas:</strong>\r\n                <div className=\"mt-2 p-3 bg-light rounded\">\r\n                  {auditRecord.notes}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Alert variant=\"info\" className=\"mb-0\">\r\n                <FiInfo className=\"me-2\" />\r\n                No hay notas adicionales para este registro.\r\n              </Alert>\r\n            )}\r\n            \r\n            {auditRecord.changes && (\r\n              <div className=\"mt-3\">\r\n                <strong>Cambios Realizados:</strong>\r\n                <div className=\"mt-2\">\r\n                  <pre className=\"bg-light p-3 rounded small\">\r\n                    {JSON.stringify(auditRecord.changes, null, 2)}\r\n                  </pre>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      </Modal.Body>\r\n      \r\n      <Modal.Footer>\r\n        <Button variant=\"outline-secondary\" onClick={onHide}>\r\n          <FiX className=\"me-1\" />\r\n          Cerrar\r\n        </Button>\r\n        \r\n        <Button variant=\"outline-primary\" onClick={() => onExport && onExport(auditRecord)}>\r\n          <FiDownload className=\"me-1\" />\r\n          Exportar\r\n        </Button>\r\n        \r\n        {onEdit && (\r\n          <Button variant=\"outline-warning\" onClick={() => onEdit(auditRecord)}>\r\n            <FiEdit className=\"me-1\" />\r\n            Editar\r\n          </Button>\r\n        )}\r\n        \r\n        {onDelete && (\r\n          <Button variant=\"outline-danger\" onClick={() => onDelete(auditRecord)}>\r\n            <FiTrash2 className=\"me-1\" />\r\n            Eliminar\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Button, \r\n  Dropdown, \r\n  Modal, \r\n  Alert,\r\n  ProgressBar,\r\n  Badge\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiMoreVertical, \r\n  FiDownload, \r\n  FiTrash2, \r\n  FiArchive,\r\n  FiCheck,\r\n  FiX,\r\n  FiAlertTriangle\r\n} from 'react-icons/fi';\r\n\r\nexport default function AuditBulkActions({ \r\n  selectedItems = [], \r\n  onBulkExport,\r\n  onBulkDelete,\r\n  onBulkArchive,\r\n  onClearSelection\r\n}) {\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [bulkAction, setBulkAction] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const selectedCount = selectedItems.length;\r\n\r\n  const handleBulkAction = async (action) => {\r\n    if (selectedCount === 0) return;\r\n    \r\n    setBulkAction(action);\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const confirmBulkAction = async () => {\r\n    if (!bulkAction) return;\r\n    \r\n    setIsProcessing(true);\r\n    setProgress(0);\r\n    \r\n    try {\r\n      // Simular progreso\r\n      const interval = setInterval(() => {\r\n        setProgress(prev => {\r\n          if (prev >= 100) {\r\n            clearInterval(interval);\r\n            setIsProcessing(false);\r\n            setShowConfirmModal(false);\r\n            setBulkAction(null);\r\n            return 100;\r\n          }\r\n          return prev + 10;\r\n        });\r\n      }, 200);\r\n      \r\n      // Ejecutar acción masiva\r\n      switch (bulkAction) {\r\n        case 'export':\r\n          await onBulkExport?.(selectedItems);\r\n          break;\r\n        case 'delete':\r\n          await onBulkDelete?.(selectedItems);\r\n          break;\r\n        case 'archive':\r\n          await onBulkArchive?.(selectedItems);\r\n          break;\r\n      }\r\n      \r\n      // Limpiar selección\r\n      onClearSelection?.();\r\n      \r\n    } catch (error) {\r\n      console.error('Error en acción masiva:', error);\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const getActionTitle = (action) => {\r\n    switch (action) {\r\n      case 'export':\r\n        return 'Exportar Registros Seleccionados';\r\n      case 'delete':\r\n        return 'Eliminar Registros Seleccionados';\r\n      case 'archive':\r\n        return 'Archivar Registros Seleccionados';\r\n      default:\r\n        return 'Acción Masiva';\r\n    }\r\n  };\r\n\r\n  const getActionDescription = (action) => {\r\n    switch (action) {\r\n      case 'export':\r\n        return `Se exportarán ${selectedCount} registros de auditoría en formato Excel.`;\r\n      case 'delete':\r\n        return `Se eliminarán permanentemente ${selectedCount} registros de auditoría. Esta acción no se puede deshacer.`;\r\n      case 'archive':\r\n        return `Se archivarán ${selectedCount} registros de auditoría. Los registros archivados no aparecerán en las búsquedas normales.`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getActionIcon = (action) => {\r\n    switch (action) {\r\n      case 'export':\r\n        return <FiDownload className=\"text-success\" />;\r\n      case 'delete':\r\n        return <FiTrash2 className=\"text-danger\" />;\r\n      case 'archive':\r\n        return <FiArchive className=\"text-warning\" />;\r\n      default:\r\n        return <FiMoreVertical />;\r\n    }\r\n  };\r\n\r\n  if (selectedCount === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center gap-2 mb-3\">\r\n        <Badge bg=\"primary\" className=\"fs-6\">\r\n          {selectedCount} seleccionado{selectedCount !== 1 ? 's' : ''}\r\n        </Badge>\r\n        \r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"outline-primary\" size=\"sm\">\r\n            <FiMoreVertical className=\"me-1\" />\r\n            Acciones Masivas\r\n          </Dropdown.Toggle>\r\n          \r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={() => handleBulkAction('export')}>\r\n              <FiDownload className=\"me-2\" />\r\n              Exportar Seleccionados\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleBulkAction('archive')}>\r\n              <FiArchive className=\"me-2\" />\r\n              Archivar Seleccionados\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item \r\n              onClick={() => handleBulkAction('delete')}\r\n              className=\"text-danger\"\r\n            >\r\n              <FiTrash2 className=\"me-2\" />\r\n              Eliminar Seleccionados\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        \r\n        <Button \r\n          variant=\"outline-secondary\" \r\n          size=\"sm\"\r\n          onClick={onClearSelection}\r\n        >\r\n          <FiX className=\"me-1\" />\r\n          Limpiar Selección\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Modal de Confirmación */}\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {getActionIcon(bulkAction)}\r\n            <span className=\"ms-2\">{getActionTitle(bulkAction)}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        \r\n        <Modal.Body>\r\n          <Alert variant=\"info\" className=\"mb-3\">\r\n            <FiAlertTriangle className=\"me-2\" />\r\n            {getActionDescription(bulkAction)}\r\n          </Alert>\r\n          \r\n          {isProcessing && (\r\n            <div className=\"mb-3\">\r\n              <div className=\"d-flex justify-content-between mb-2\">\r\n                <span>Procesando...</span>\r\n                <span>{progress}%</span>\r\n              </div>\r\n              <ProgressBar now={progress} animated />\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"text-muted small\">\r\n            <strong>Registros seleccionados:</strong>\r\n            <ul className=\"mt-2 mb-0\">\r\n              {selectedItems.slice(0, 5).map((item, index) => (\r\n                <li key={index}>\r\n                  #{item.id} - {item.action} - {item.user_name || item.user_id}\r\n                </li>\r\n              ))}\r\n              {selectedItems.length > 5 && (\r\n                <li>... y {selectedItems.length - 5} más</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          <Button \r\n            variant=\"outline-secondary\" \r\n            onClick={() => setShowConfirmModal(false)}\r\n            disabled={isProcessing}\r\n          >\r\n            <FiX className=\"me-1\" />\r\n            Cancelar\r\n          </Button>\r\n          \r\n          <Button \r\n            variant={bulkAction === 'delete' ? 'danger' : 'primary'}\r\n            onClick={confirmBulkAction}\r\n            disabled={isProcessing}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <div className=\"spinner-border spinner-border-sm me-1\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Procesando...</span>\r\n                </div>\r\n                Procesando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiCheck className=\"me-1\" />\r\n                Confirmar\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { \r\n  Card, \r\n  Row, \r\n  Col, \r\n  Badge,\r\n  ProgressBar,\r\n  ListGroup,\r\n  Spinner\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiTrendingUp, \r\n  FiTrendingDown,\r\n  FiActivity,\r\n  FiUsers,\r\n  FiClock,\r\n  FiBarChart,\r\n  FiPieChart\r\n} from 'react-icons/fi';\r\nimport { useQuery } from 'react-query';\r\nimport { getHourlyDistribution } from '../services/auditActions';\r\n\r\nexport default function AuditAnalytics({ \r\n  analyticsData = {},\r\n  isLoading = false \r\n}) {\r\n  const {\r\n    total = 0,\r\n    todayActivities = 0,\r\n    weekActivities = 0,\r\n    uniqueUsers = 0,\r\n    uniqueActions = 0,\r\n    recentActivities = 0,\r\n    actionCounts = {},\r\n    activeUsers = []\r\n  } = analyticsData;\r\n\r\n  // Obtener distribución horaria real\r\n  const { data: hourlyData, isLoading: isLoadingHourly } = useQuery(\r\n    ['audit-hourly-distribution'],\r\n    () => getHourlyDistribution(24),\r\n    {\r\n      staleTime: 5 * 60 * 1000, // 5 minutos\r\n      cacheTime: 10 * 60 * 1000, // 10 minutos\r\n    }\r\n  );\r\n\r\n  // Procesar datos para analytics\r\n  const topActions = Object.entries(actionCounts)\r\n    .map(([name, count]) => ({ name, count }))\r\n    .sort((a, b) => b.count - a.count)\r\n    .slice(0, 5);\r\n\r\n  const userActivity = activeUsers.map(user => ({\r\n    name: user.name || user.user_name || user.username || `Usuario ${user.id}`,\r\n    actions: user.action_count || 0\r\n  })).sort((a, b) => b.actions - a.actions).slice(0, 5);\r\n\r\n  // Usar datos reales de distribución horaria\r\n  const hourlyDistribution = hourlyData?.data || Array.from({ length: 24 }, (_, i) => ({\r\n    hour: i,\r\n    count: 0\r\n  }));\r\n\r\n  const getTrendIcon = (trend) => {\r\n    if (trend > 0) return <FiTrendingUp className=\"text-success\" />;\r\n    if (trend < 0) return <FiTrendingDown className=\"text-danger\" />;\r\n    return <FiActivity className=\"text-muted\" />;\r\n  };\r\n\r\n  const getTrendColor = (trend) => {\r\n    if (trend > 0) return 'success';\r\n    if (trend < 0) return 'danger';\r\n    return 'secondary';\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row>\r\n        {[1, 2, 3, 4].map(i => (\r\n          <Col md={3} key={i} className=\"mb-3\">\r\n            <Card>\r\n              <Card.Body className=\"text-center\">\r\n                <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Cargando...</span>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Métricas Principales */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"text-center border-primary\">\r\n            <Card.Body>\r\n              <FiActivity className=\"text-primary mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{total.toLocaleString()}</h5>\r\n              <small className=\"text-muted\">Total de Acciones</small>\r\n              <div className=\"mt-2\">\r\n                <Badge bg=\"info\" className=\"fs-6\">\r\n                  {todayActivities} hoy\r\n                </Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3}>\r\n          <Card className=\"text-center border-success\">\r\n            <Card.Body>\r\n              <FiUsers className=\"text-success mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{uniqueUsers}</h5>\r\n              <small className=\"text-muted\">Usuarios Activos</small>\r\n              <div className=\"mt-2\">\r\n                <Badge bg=\"success\" className=\"fs-6\">\r\n                  Únicos\r\n                </Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3}>\r\n          <Card className=\"text-center border-info\">\r\n            <Card.Body>\r\n              <FiBarChart className=\"text-info mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{weekActivities}</h5>\r\n              <small className=\"text-muted\">Esta Semana</small>\r\n              <div className=\"mt-2\">\r\n                <Badge bg=\"info\" className=\"fs-6\">\r\n                  +{Math.round((weekActivities / 7) * 100) / 100}/día\r\n                </Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3}>\r\n          <Card className=\"text-center border-warning\">\r\n            <Card.Body>\r\n              <FiClock className=\"text-warning mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{recentActivities}</h5>\r\n              <small className=\"text-muted\">Últimas 24h</small>\r\n              <div className=\"mt-2\">\r\n                <Badge bg=\"warning\" className=\"fs-6\">\r\n                  Activo\r\n                </Badge>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Top Acciones */}\r\n        <Col md={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiPieChart className=\"me-2\" />\r\n                Acciones Más Frecuentes\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {topActions.length > 0 ? (\r\n                <ListGroup variant=\"flush\">\r\n                  {topActions.map((action, index) => (\r\n                    <ListGroup.Item key={index} className=\"d-flex justify-content-between align-items-center\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <Badge bg=\"primary\" className=\"me-2\">\r\n                          {index + 1}\r\n                        </Badge>\r\n                        <span className=\"fw-medium\">{action.name}</span>\r\n                      </div>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"me-3\">\r\n                          <ProgressBar \r\n                            now={(action.count / topActions[0].count) * 100} \r\n                            style={{ width: '100px', height: '8px' }}\r\n                            variant=\"primary\"\r\n                          />\r\n                        </div>\r\n                        <Badge bg=\"secondary\">{action.count}</Badge>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              ) : (\r\n                <div className=\"text-center text-muted py-3\">\r\n                  <FiActivity size={32} className=\"mb-2\" />\r\n                  <p className=\"mb-0\">No hay datos de acciones disponibles</p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Actividad por Usuario */}\r\n        <Col md={6} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiUsers className=\"me-2\" />\r\n                Actividad por Usuario\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {userActivity.length > 0 ? (\r\n                <ListGroup variant=\"flush\">\r\n                  {userActivity.map((user, index) => (\r\n                    <ListGroup.Item key={index} className=\"d-flex justify-content-between align-items-center\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <Badge bg=\"success\" className=\"me-2\">\r\n                          {index + 1}\r\n                        </Badge>\r\n                        <span className=\"fw-medium\">{user.name}</span>\r\n                      </div>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"me-3\">\r\n                          <ProgressBar \r\n                            now={(user.actions / userActivity[0].actions) * 100} \r\n                            style={{ width: '100px', height: '8px' }}\r\n                            variant=\"success\"\r\n                          />\r\n                        </div>\r\n                        <Badge bg=\"secondary\">{user.actions}</Badge>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              ) : (\r\n                <div className=\"text-center text-muted py-3\">\r\n                  <FiUsers size={32} className=\"mb-2\" />\r\n                  <p className=\"mb-0\">No hay datos de usuarios disponibles</p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Distribución Horaria */}\r\n      <Row>\r\n        <Col md={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">\r\n                <FiClock className=\"me-2\" />\r\n                Distribución de Actividad por Hora (Datos Reales)\r\n                {isLoadingHourly && (\r\n                  <Spinner animation=\"border\" size=\"sm\" className=\"ms-2\" />\r\n                )}\r\n              </h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {isLoadingHourly ? (\r\n                <div className=\"text-center py-4\">\r\n                  <Spinner animation=\"border\" variant=\"primary\" />\r\n                  <p className=\"mt-2 text-muted\">Cargando distribución horaria...</p>\r\n                </div>\r\n              ) : hourlyDistribution.length > 0 ? (\r\n                <div className=\"row\">\r\n                  {hourlyDistribution.map((hour, index) => (\r\n                    <div key={index} className=\"col-md-2 mb-3\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"fw-medium\">{hour.hour}:00</div>\r\n                        <div className=\"mt-2\">\r\n                          <ProgressBar \r\n                            now={(hour.count / Math.max(...hourlyDistribution.map(h => h.count), 1)) * 100} \r\n                            variant=\"info\"\r\n                            style={{ height: '20px' }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-muted small mt-1\">{hour.count}</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center text-muted py-3\">\r\n                  <FiClock size={32} className=\"mb-2\" />\r\n                  <p className=\"mb-0\">No hay datos de distribución horaria disponibles</p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Alert, \r\n  ProgressBar,\r\n  Badge,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiTrash2, \r\n  FiClock, \r\n  FiAlertTriangle,\r\n  FiCheckCircle,\r\n  FiRefreshCw\r\n} from 'react-icons/fi';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { cleanupOldRecords, getCleanupStats } from '../services/auditActions';\r\n\r\nexport default function AuditCleanup() {\r\n  const [isCleaning, setIsCleaning] = useState(false);\r\n  const [cleanupProgress, setCleanupProgress] = useState(0);\r\n  const queryClient = useQueryClient();\r\n\r\n  // Obtener estadísticas de limpieza\r\n  const { data: cleanupStats, isLoading: statsLoading } = useQuery(\r\n    ['cleanup-stats'], \r\n    getCleanupStats,\r\n    {\r\n      refetchInterval: 30000, // Actualizar cada 30 segundos\r\n      staleTime: 0\r\n    }\r\n  );\r\n\r\n  // Mutación para limpiar registros\r\n  const cleanupMutation = useMutation(cleanupOldRecords, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['audit']);\r\n      queryClient.invalidateQueries(['audit-stats-global']);\r\n      setIsCleaning(false);\r\n      setCleanupProgress(0);\r\n    },\r\n    onError: (error) => {\r\n      console.error('Error en limpieza:', error);\r\n      setIsCleaning(false);\r\n      setCleanupProgress(0);\r\n    }\r\n  });\r\n\r\n  const handleCleanup = async (hours = 24) => {\r\n    setIsCleaning(true);\r\n    setCleanupProgress(0);\r\n    \r\n    // Simular progreso\r\n    const interval = setInterval(() => {\r\n      setCleanupProgress(prev => {\r\n        if (prev >= 100) {\r\n          clearInterval(interval);\r\n          return 100;\r\n        }\r\n        return prev + 10;\r\n      });\r\n    }, 200);\r\n    \r\n    try {\r\n      await cleanupMutation.mutateAsync(hours);\r\n    } catch (error) {\r\n      console.error('Error en limpieza:', error);\r\n    }\r\n  };\r\n\r\n  const stats = cleanupStats?.data || {};\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Header>\r\n        <h6 className=\"mb-0\">\r\n          <FiTrash2 className=\"me-2\" />\r\n          Limpieza Automática de Registros\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col md={6}>\r\n            <div className=\"mb-3\">\r\n              <h6>Estado del Sistema</h6>\r\n              {statsLoading ? (\r\n                <div className=\"text-center\">\r\n                  <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Cargando...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                      <span>Registros antiguos (&gt;24h):</span>\r\n                    <Badge bg=\"warning\">{stats.oldRecords || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span>Registros totales:</span>\r\n                    <Badge bg=\"info\">{stats.totalRecords || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span>Última limpieza:</span>\r\n                    <Badge bg=\"secondary\">\r\n                      {stats.lastCleanup ? new Date(stats.lastCleanup).toLocaleString() : 'Nunca'}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          \r\n          <Col md={6}>\r\n            <div className=\"mb-3\">\r\n              <h6>Acciones de Limpieza</h6>\r\n              <div className=\"d-grid gap-2\">\r\n                <Button \r\n                  variant=\"outline-danger\" \r\n                  size=\"sm\"\r\n                  onClick={() => handleCleanup(24)}\r\n                  disabled={isCleaning}\r\n                >\r\n                  {isCleaning ? (\r\n                    <>\r\n                      <div className=\"spinner-border spinner-border-sm me-1\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Limpiando...</span>\r\n                      </div>\r\n                      Limpiando...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiTrash2 className=\"me-1\" />\r\n                        Limpiar registros &gt;24h\r\n                    </>\r\n                  )}\r\n                </Button>\r\n                \r\n                <Button \r\n                  variant=\"outline-warning\" \r\n                  size=\"sm\"\r\n                  onClick={() => handleCleanup(168)} // 7 días\r\n                  disabled={isCleaning}\r\n                >\r\n                  <FiClock className=\"me-1\" />\r\n                    Limpiar registros &gt;7 días\r\n                </Button>\r\n                \r\n                <Button \r\n                  variant=\"outline-info\" \r\n                  size=\"sm\"\r\n                  onClick={() => handleCleanup(720)} // 30 días\r\n                  disabled={isCleaning}\r\n                >\r\n                  <FiClock className=\"me-1\" />\r\n                    Limpiar registros &gt;30 días\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        \r\n        {isCleaning && (\r\n          <Alert variant=\"info\" className=\"mt-3\">\r\n            <div className=\"d-flex align-items-center mb-2\">\r\n              <FiRefreshCw className=\"me-2\" />\r\n              <strong>Limpiando registros antiguos...</strong>\r\n            </div>\r\n            <ProgressBar now={cleanupProgress} animated />\r\n            <small className=\"text-muted mt-1\">\r\n              {cleanupProgress}% completado\r\n            </small>\r\n          </Alert>\r\n        )}\r\n        \r\n        <Alert variant=\"warning\" className=\"mt-3\">\r\n          <FiAlertTriangle className=\"me-2\" />\r\n          <strong>Nota:</strong> La limpieza automática elimina permanentemente los registros antiguos. \r\n          Esta acción no se puede deshacer. Se recomienda hacer una copia de seguridad antes de proceder.\r\n        </Alert>\r\n        \r\n        <div className=\"mt-3\">\r\n          <small className=\"text-muted\">\r\n            <FiCheckCircle className=\"me-1\" />\r\n            La limpieza automática se ejecuta cada 24 horas para mantener el sistema optimizado.\r\n          </small>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useMemo, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Badge, \r\n  Button, \r\n  Row, \r\n  Col, \r\n  Form, \r\n  InputGroup, \r\n  Spinner, \r\n  Alert,\r\n  Dropdown,\r\n  ButtonGroup\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiActivity, \r\n  FiUser, \r\n  FiClock, \r\n  FiFilter, \r\n  FiDownload, \r\n  FiRefreshCw,\r\n  FiEye,\r\n  FiSearch,\r\n  FiCalendar,\r\n  FiUsers,\r\n  FiSettings,\r\n  FiAlertCircle,\r\n  FiCheckCircle,\r\n  FiXCircle,\r\n  FiEdit,\r\n  FiTrash2,\r\n  FiPlus,\r\n  FiBarChart\r\n} from 'react-icons/fi';\r\nimport { useQuery } from 'react-query';\r\nimport { listAudit } from '../services/audit';\r\nimport { getUsersForAudit } from '../services/users';\r\nimport { useAuditStats } from '../hooks/useAuditStats';\r\nimport { exportAuditToExcel, exportAuditToPDF, exportAuditToCSV, downloadFile } from '../services/auditExport';\r\nimport { editAuditRecord, deleteAuditRecord, deleteBulkAuditRecords, archiveAuditRecords } from '../services/auditActions';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport AuditAdvancedFilters from '../components/AuditAdvancedFilters';\r\nimport AuditDetailModal from '../components/AuditDetailModal';\r\nimport AuditBulkActions from '../components/AuditBulkActions';\r\nimport AuditAnalytics from '../components/AuditAnalytics';\r\nimport AuditCleanup from '../components/AuditCleanup';\r\n\r\nexport default function Auditoria() {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(20);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [actionFilter, setActionFilter] = useState('all');\r\n  const [userFilter, setUserFilter] = useState('all');\r\n  const [dateFilter, setDateFilter] = useState('all');\r\n  const [showAnalytics, setShowAnalytics] = useState(false);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [showDetailModal, setShowDetailModal] = useState(false);\r\n  const [selectedRecord, setSelectedRecord] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    search: '',\r\n    action: 'all',\r\n    user: 'all',\r\n    dateRange: 'all',\r\n    dateStart: '',\r\n    dateEnd: '',\r\n    timeStart: '',\r\n    timeEnd: ''\r\n  });\r\n\r\n  const { data, isLoading, refetch, isFetching } = useQuery(['audit', { page, limit, searchQuery, actionFilter, userFilter, dateFilter, filters }], async () => {\r\n    // Construir parámetros de filtro\r\n    const queryParams = {\r\n      page,\r\n      limit,\r\n      search: searchQuery,\r\n      action: actionFilter !== 'all' ? actionFilter : undefined,\r\n      user: userFilter !== 'all' ? userFilter : undefined,\r\n      date: dateFilter !== 'all' ? dateFilter : undefined,\r\n      // Filtros avanzados\r\n      dateStart: filters.dateStart,\r\n      dateEnd: filters.dateEnd,\r\n      timeStart: filters.timeStart,\r\n      timeEnd: filters.timeEnd\r\n    };\r\n    \r\n    // Remover parámetros undefined\r\n    Object.keys(queryParams).forEach(key => {\r\n      if (queryParams[key] === undefined || queryParams[key] === '') {\r\n        delete queryParams[key];\r\n      }\r\n    });\r\n    \r\n    const resp = await listAudit(queryParams);\r\n    const rows = Array.isArray(resp?.data) ? resp.data : (resp?.rows || resp || []);\r\n    const total = Number(resp?.total || rows.length || 0);\r\n    return { rows, total };\r\n  }, { \r\n    keepPreviousData: true,\r\n    refetchOnWindowFocus: true,\r\n    refetchOnMount: true,\r\n  });\r\n\r\n  // Obtener usuarios para mapeo de nombres\r\n  const { data: usersData } = useQuery(['users-for-audit'], getUsersForAudit, {\r\n    staleTime: 5 * 60 * 1000, // 5 minutos\r\n    cacheTime: 10 * 60 * 1000, // 10 minutos\r\n  });\r\n\r\n  // Obtener estadísticas globales\r\n  const { data: globalStats } = useAuditStats();\r\n\r\n  // Función para obtener el icono según la acción\r\n  const getActionIcon = (action) => {\r\n    switch (action) {\r\n      case 'crear':\r\n      case 'create':\r\n        return <FiPlus className=\"text-success\" />;\r\n      case 'actualizar':\r\n      case 'update':\r\n        return <FiEdit className=\"text-primary\" />;\r\n      case 'eliminar':\r\n      case 'delete':\r\n        return <FiTrash2 className=\"text-danger\" />;\r\n      case 'login':\r\n        return <FiUser className=\"text-info\" />;\r\n      case 'logout':\r\n        return <FiUser className=\"text-secondary\" />;\r\n      case 'actualizar_estado':\r\n        return <FiSettings className=\"text-warning\" />;\r\n      case 'actualizar_categorias':\r\n        return <FiSettings className=\"text-info\" />;\r\n      case 'marcar_proyecto':\r\n        return <FiCheckCircle className=\"text-primary\" />;\r\n      case 'exportar':\r\n        return <FiDownload className=\"text-success\" />;\r\n      case 'importar':\r\n        return <FiPlus className=\"text-info\" />;\r\n      case 'configurar':\r\n        return <FiSettings className=\"text-warning\" />;\r\n      case 'asignar':\r\n        return <FiUser className=\"text-primary\" />;\r\n      case 'desasignar':\r\n        return <FiXCircle className=\"text-secondary\" />;\r\n      default:\r\n        return <FiActivity className=\"text-muted\" />;\r\n    }\r\n  };\r\n\r\n  // Función para convertir acción a tercera persona\r\n  const formatActionThirdPerson = (action) => {\r\n    const actionMap = {\r\n      'crear': 'creó',\r\n      'create': 'creó',\r\n      'actualizar': 'actualizó',\r\n      'update': 'actualizó',\r\n      'eliminar': 'eliminó',\r\n      'delete': 'eliminó',\r\n      'login': 'inició sesión',\r\n      'logout': 'cerró sesión',\r\n      'actualizar_estado': 'actualizó el estado',\r\n      'actualizar_categorias': 'actualizó las categorías',\r\n      'marcar_proyecto': 'marcó el proyecto',\r\n      'exportar': 'exportó',\r\n      'importar': 'importó',\r\n      'configurar': 'configuró',\r\n      'asignar': 'asignó',\r\n      'desasignar': 'desasignó'\r\n    };\r\n    return actionMap[action] || action;\r\n  };\r\n\r\n  // Función para obtener nombre de usuario real\r\n  const getUserDisplayName = (userData) => {\r\n    // Si ya tenemos un nombre completo, lo usamos\r\n    if (userData.user_name && userData.user_name !== userData.user_id) {\r\n      return userData.user_name;\r\n    }\r\n    \r\n    // Si tenemos performed_by, lo usamos\r\n    if (userData.performed_by) {\r\n      return userData.performed_by;\r\n    }\r\n    \r\n    // Si tenemos user_id, intentamos mapearlo con los usuarios reales\r\n    if (userData.user_id && usersData) {\r\n      const user = usersData.find(u => u.id === userData.user_id);\r\n      if (user) {\r\n        return user.name || user.full_name || user.username || `Usuario ${userData.user_id}`;\r\n      }\r\n    }\r\n    \r\n    // Fallback a mapeo estático si no hay datos de usuarios\r\n    if (userData.user_id && typeof userData.user_id === 'number') {\r\n      const userMap = {\r\n        1: 'Administrador',\r\n        2: 'Jefe de Laboratorio',\r\n        3: 'Jefa Comercial',\r\n        4: 'Gerencia',\r\n        5: 'Sistemas',\r\n        6: 'Admin',\r\n        7: 'Usuario',\r\n        8: 'Operador'\r\n      };\r\n      return userMap[userData.user_id] || `Usuario ${userData.user_id}`;\r\n    }\r\n    \r\n    return 'Sistema';\r\n  };\r\n\r\n  // Función para obtener el color del badge según la acción\r\n  const getActionBadgeColor = (action) => {\r\n    switch (action) {\r\n      case 'crear':\r\n      case 'create':\r\n        return 'success';\r\n      case 'actualizar':\r\n      case 'update':\r\n        return 'primary';\r\n      case 'eliminar':\r\n      case 'delete':\r\n        return 'danger';\r\n      case 'login':\r\n        return 'info';\r\n      case 'logout':\r\n        return 'dark';\r\n      case 'actualizar_estado':\r\n        return 'warning';\r\n      case 'actualizar_categorias':\r\n        return 'info';\r\n      case 'marcar_proyecto':\r\n        return 'primary';\r\n      case 'exportar':\r\n        return 'success';\r\n      case 'importar':\r\n        return 'info';\r\n      case 'configurar':\r\n        return 'warning';\r\n      case 'asignar':\r\n        return 'primary';\r\n      case 'desasignar':\r\n        return 'secondary';\r\n      default:\r\n        return 'dark';\r\n    }\r\n  };\r\n\r\n  // Función para formatear la fecha\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '—';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('es-ES', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Función para obtener acciones únicas para el filtro\r\n  const uniqueActions = useMemo(() => {\r\n    const actions = [...new Set(data?.rows?.map(row => row.action) || [])];\r\n    return actions.sort();\r\n  }, [data?.rows]);\r\n\r\n  // Función para obtener usuarios únicos para el filtro\r\n  const uniqueUsers = useMemo(() => {\r\n    const users = [...new Set(data?.rows?.map(row => row.user_name || row.performed_by || row.user_id) || [])];\r\n    return users.sort();\r\n  }, [data?.rows]);\r\n\r\n  const total = data?.total || 0;\r\n  const rows = data?.rows || [];\r\n  const totalPages = Math.max(1, Math.ceil(total / limit));\r\n\r\n  // Usar estadísticas globales para las cards\r\n  const globalTotal = globalStats?.total || 0;\r\n  const globalUniqueUsers = globalStats?.uniqueUsers || 0;\r\n  const globalUniqueActions = globalStats?.uniqueActions || 0;\r\n\r\n  // Función para limpiar filtros\r\n  const clearFilters = () => {\r\n    setSearchQuery('');\r\n    setActionFilter('all');\r\n    setUserFilter('all');\r\n    setDateFilter('all');\r\n  };\r\n\r\n  // Función para exportar datos (versión simple)\r\n  const handleSimpleExport = () => {\r\n    // Implementar exportación de datos\r\n    console.log('Exportando datos de auditoría...');\r\n  };\r\n\r\n  // Función para actualizar todos los datos\r\n  const handleRefreshAll = () => {\r\n    refetch(); // Actualizar datos de auditoría\r\n    // Los datos globales se actualizarán automáticamente por el hook\r\n  };\r\n\r\n  // Función para manejar filtros avanzados\r\n  const handleFiltersChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setSearchQuery(newFilters.search || '');\r\n    setActionFilter(newFilters.action || 'all');\r\n    setUserFilter(newFilters.user || 'all');\r\n    setDateFilter(newFilters.dateRange || 'all');\r\n  };\r\n\r\n  // Función para limpiar filtros\r\n  const handleClearFilters = () => {\r\n    setFilters({\r\n      search: '',\r\n      action: 'all',\r\n      user: 'all',\r\n      dateRange: 'all',\r\n      dateStart: '',\r\n      dateEnd: '',\r\n      timeStart: '',\r\n      timeEnd: ''\r\n    });\r\n    setSearchQuery('');\r\n    setActionFilter('all');\r\n    setUserFilter('all');\r\n    setDateFilter('all');\r\n  };\r\n\r\n  // Función para exportar datos\r\n  const handleExport = async (format = 'excel') => {\r\n    try {\r\n      let blob;\r\n      const currentFilters = {\r\n        search: searchQuery,\r\n        action: actionFilter,\r\n        user: userFilter,\r\n        date: dateFilter,\r\n        ...filters\r\n      };\r\n\r\n      switch (format) {\r\n        case 'excel':\r\n          blob = await exportAuditToExcel(currentFilters);\r\n          downloadFile(blob, `auditoria_${new Date().toISOString().split('T')[0]}.xlsx`);\r\n          break;\r\n        case 'pdf':\r\n          blob = await exportAuditToPDF(currentFilters);\r\n          downloadFile(blob, `auditoria_${new Date().toISOString().split('T')[0]}.pdf`);\r\n          break;\r\n        case 'csv':\r\n          blob = await exportAuditToCSV(currentFilters);\r\n          downloadFile(blob, `auditoria_${new Date().toISOString().split('T')[0]}.csv`);\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al exportar:', error);\r\n    }\r\n  };\r\n\r\n  // Función para mostrar detalles\r\n  const handleShowDetails = (record) => {\r\n    setSelectedRecord(record);\r\n    setShowDetailModal(true);\r\n  };\r\n\r\n  // Función para seleccionar elementos\r\n  const handleSelectItem = (item, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedItems(prev => [...prev, item]);\r\n    } else {\r\n      setSelectedItems(prev => prev.filter(i => i.id !== item.id));\r\n    }\r\n  };\r\n\r\n  // Función para seleccionar todos\r\n  const handleSelectAll = (isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedItems(rows);\r\n    } else {\r\n      setSelectedItems([]);\r\n    }\r\n  };\r\n\r\n  // Función para acciones masivas\r\n  const handleBulkExport = async (items) => {\r\n    try {\r\n      const blob = await exportAuditToExcel({ selectedIds: items.map(i => i.id) });\r\n      downloadFile(blob, `auditoria_seleccionados_${new Date().toISOString().split('T')[0]}.xlsx`);\r\n    } catch (error) {\r\n      console.error('Error en exportación masiva:', error);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async (items) => {\r\n    if (window.confirm(`¿Estás seguro de eliminar ${items.length} registros? Esta acción no se puede deshacer.`)) {\r\n      try {\r\n        const ids = items.map(item => item.id);\r\n        await deleteBulkAuditRecords(ids);\r\n        refetch(); // Actualizar la lista\r\n        setSelectedItems([]); // Limpiar selección\r\n      } catch (error) {\r\n        console.error('Error eliminando elementos:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkArchive = async (items) => {\r\n    try {\r\n      const ids = items.map(item => item.id);\r\n      await archiveAuditRecords(ids);\r\n      refetch(); // Actualizar la lista\r\n      setSelectedItems([]); // Limpiar selección\r\n    } catch (error) {\r\n      console.error('Error archivando elementos:', error);\r\n    }\r\n  };\r\n\r\n  // Función para editar registro\r\n  const handleEditRecord = async (record, newData) => {\r\n    try {\r\n      await editAuditRecord(record.id, newData);\r\n      refetch(); // Actualizar la lista\r\n      setShowDetailModal(false); // Cerrar modal\r\n    } catch (error) {\r\n      console.error('Error editando registro:', error);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar registro\r\n  const handleDeleteRecord = async (record) => {\r\n    if (window.confirm(`¿Estás seguro de eliminar el registro #${record.id}?`)) {\r\n      try {\r\n        await deleteAuditRecord(record.id);\r\n        refetch(); // Actualizar la lista\r\n        setShowDetailModal(false); // Cerrar modal\r\n      } catch (error) {\r\n        console.error('Error eliminando registro:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fade-in\">\r\n      <PageHeader\r\n        title=\"Auditoría del Sistema\"\r\n        subtitle=\"Registro completo de actividades y acciones del sistema\"\r\n        icon={FiActivity}\r\n        actions={\r\n          <div className=\"d-flex gap-2\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"outline-success\" size=\"sm\">\r\n                <FiDownload className=\"me-1\" />\r\n                Exportar\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => handleExport('excel')}>\r\n                  <FiDownload className=\"me-2\" />\r\n                  Excel (.xlsx)\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleExport('pdf')}>\r\n                  <FiDownload className=\"me-2\" />\r\n                  PDF\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleExport('csv')}>\r\n                  <FiDownload className=\"me-2\" />\r\n                  CSV\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            \r\n            <Button \r\n              variant=\"outline-info\" \r\n              size=\"sm\"\r\n              onClick={() => setShowAnalytics(!showAnalytics)}\r\n            >\r\n              <FiBarChart className=\"me-1\" />\r\n              {showAnalytics ? 'Ocultar' : 'Analytics'}\r\n            </Button>\r\n            \r\n            <Button \r\n              variant=\"outline-primary\" \r\n              onClick={handleRefreshAll}\r\n              disabled={isFetching}\r\n            >\r\n              {isFetching ? (\r\n                <>\r\n                  <Spinner animation=\"border\" size=\"sm\" className=\"me-1\" />\r\n                  Actualizando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FiRefreshCw className=\"me-1\" />\r\n                  Actualizar\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Analytics */}\r\n      {showAnalytics && (\r\n        <div className=\"mb-4\">\r\n          <AuditAnalytics \r\n            analyticsData={globalStats}\r\n            isLoading={!globalStats}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Limpieza Automática */}\r\n      <AuditCleanup />\r\n\r\n      {/* Filtros Avanzados */}\r\n      <AuditAdvancedFilters\r\n        filters={filters}\r\n        onFiltersChange={handleFiltersChange}\r\n        onClearFilters={handleClearFilters}\r\n        uniqueUsers={uniqueUsers}\r\n        uniqueActions={uniqueActions}\r\n      />\r\n\r\n      {/* Acciones Masivas */}\r\n      <AuditBulkActions\r\n        selectedItems={selectedItems}\r\n        onBulkExport={handleBulkExport}\r\n        onBulkDelete={handleBulkDelete}\r\n        onBulkArchive={handleBulkArchive}\r\n        onClearSelection={() => setSelectedItems([])}\r\n      />\r\n\r\n      {/* Estadísticas rápidas */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"text-center border-primary\">\r\n            <Card.Body>\r\n              <FiActivity className=\"text-primary mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{globalTotal}</h5>\r\n              <small className=\"text-muted\">Total de Acciones</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center border-success\">\r\n            <Card.Body>\r\n              <FiUsers className=\"text-success mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{globalUniqueUsers}</h5>\r\n              <small className=\"text-muted\">Usuarios Activos</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center border-info\">\r\n            <Card.Body>\r\n              <FiSettings className=\"text-info mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{globalUniqueActions}</h5>\r\n              <small className=\"text-muted\">Tipos de Acciones</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center border-warning\">\r\n            <Card.Body>\r\n              <FiClock className=\"text-warning mb-2\" size={24} />\r\n              <h5 className=\"mb-1\">{Math.ceil(total / limit)}</h5>\r\n              <small className=\"text-muted\">Páginas</small>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filtros y búsqueda */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <h6 className=\"mb-0\">\r\n            <FiFilter className=\"me-2\" />\r\n            Filtros y Búsqueda\r\n          </h6>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Form.Group>\r\n                <Form.Label>Buscar en auditoría:</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiSearch />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por acción, usuario, notas...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Group>\r\n                <Form.Label>Tipo de acción:</Form.Label>\r\n                <Form.Select\r\n                  value={actionFilter}\r\n                  onChange={(e) => setActionFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Todas las acciones</option>\r\n                  {uniqueActions.map(action => (\r\n                    <option key={action} value={action}>\r\n                      {action}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Group>\r\n                <Form.Label>Usuario:</Form.Label>\r\n                <Form.Select\r\n                  value={userFilter}\r\n                  onChange={(e) => setUserFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Todos los usuarios</option>\r\n                  {uniqueUsers.map(user => (\r\n                    <option key={user} value={user}>\r\n                      {user}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Form.Group>\r\n                <Form.Label>Fecha:</Form.Label>\r\n                <Form.Select\r\n                  value={dateFilter}\r\n                  onChange={(e) => setDateFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Todas las fechas</option>\r\n                  <option value=\"today\">Hoy</option>\r\n                  <option value=\"week\">Esta semana</option>\r\n                  <option value=\"month\">Este mes</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={2} className=\"d-flex align-items-end\">\r\n              <ButtonGroup className=\"w-100\">\r\n                <Button variant=\"outline-secondary\" onClick={clearFilters}>\r\n                  <FiFilter className=\"me-1\" />\r\n                  Limpiar\r\n                </Button>\r\n                <Button variant=\"outline-primary\" onClick={() => refetch()}>\r\n                  <FiRefreshCw className=\"me-1\" />\r\n                  Actualizar\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Tabla de auditoría */}\r\n      <Card>\r\n        <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n          <h6 className=\"mb-0\">\r\n            <FiActivity className=\"me-2\" />\r\n            Registro de Actividades\r\n            <Badge bg=\"info\" className=\"ms-2\">\r\n              {rows.length} de {total} registros\r\n            </Badge>\r\n          </h6>\r\n          <div>\r\n            <Button variant=\"outline-success\" size=\"sm\" onClick={handleExport}>\r\n              <FiDownload className=\"me-1\" />\r\n              Exportar\r\n            </Button>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {isLoading ? (\r\n            <div className=\"text-center py-4\">\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n              <p className=\"mt-2 text-muted\">Cargando registros de auditoría...</p>\r\n            </div>\r\n          ) : rows.length > 0 ? (\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-hover\">\r\n                <thead className=\"table-light\">\r\n                  <tr>\r\n                    <th width=\"5%\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        checked={selectedItems.length === rows.length && rows.length > 0}\r\n                        onChange={(e) => handleSelectAll(e.target.checked)}\r\n                      />\r\n                    </th>\r\n                    <th width=\"8%\">ID</th>\r\n                    <th width=\"20%\">Acción</th>\r\n                    <th width=\"15%\">Usuario</th>\r\n                    <th width=\"20%\">Fecha y Hora</th>\r\n                    <th width=\"25%\">Notas</th>\r\n                    <th width=\"12%\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row) => (\r\n                    <tr key={row.id}>\r\n                      <td>\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          checked={selectedItems.some(item => item.id === row.id)}\r\n                          onChange={(e) => handleSelectItem(row, e.target.checked)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <Badge bg=\"secondary\" className=\"fs-6\">\r\n                          #{row.id}\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          {getActionIcon(row.action)}\r\n                          <Badge \r\n                            bg={getActionBadgeColor(row.action)} \r\n                            className=\"ms-2 fs-6\"\r\n                          >\r\n                            {formatActionThirdPerson(row.action)}\r\n                          </Badge>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <FiUser className=\"me-2 text-muted\" />\r\n                          <span className=\"fw-medium\">\r\n                            {getUserDisplayName(row)}\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <FiClock className=\"me-2 text-muted\" />\r\n                          <small className=\"text-muted\">\r\n                            {formatDate(row.performed_at || row.created_at)}\r\n                          </small>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <span className=\"text-muted\">\r\n                          {row.notes || 'Sin notas adicionales'}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <Button \r\n                          variant=\"outline-primary\" \r\n                          size=\"sm\"\r\n                          onClick={() => handleShowDetails(row)}\r\n                        >\r\n                          <FiEye className=\"me-1\" />\r\n                          Ver\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <FiActivity size={48} className=\"text-muted mb-3\" />\r\n              <h6 className=\"text-muted\">No hay registros de auditoría</h6>\r\n              <p className=\"text-muted small\">\r\n                {searchQuery || actionFilter !== 'all' || userFilter !== 'all' || dateFilter !== 'all'\r\n                  ? 'No se encontraron registros con los filtros aplicados.'\r\n                  : 'Los registros de auditoría aparecerán aquí cuando se realicen acciones en el sistema.'\r\n                }\r\n              </p>\r\n              {(searchQuery || actionFilter !== 'all' || userFilter !== 'all' || dateFilter !== 'all') && (\r\n                <Button variant=\"outline-primary\" onClick={clearFilters}>\r\n                  Limpiar filtros\r\n                </Button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Paginación */}\r\n      {totalPages > 1 && (\r\n        <Card className=\"mt-3\">\r\n          <Card.Body className=\"py-2\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div className=\"text-muted\">\r\n                Mostrando {((page - 1) * limit) + 1} a {Math.min(page * limit, total)} de {total} registros\r\n              </div>\r\n              <div className=\"btn-group\">\r\n                <Button \r\n                  variant=\"outline-secondary\" \r\n                  disabled={page <= 1 || isLoading}\r\n                  onClick={() => setPage(p => Math.max(1, p - 1))}\r\n                >\r\n                  Anterior\r\n                </Button>\r\n                <Button variant=\"outline-secondary\" disabled>\r\n                  {page} de {totalPages}\r\n                </Button>\r\n                <Button \r\n                  variant=\"outline-secondary\" \r\n                  disabled={page >= totalPages || isLoading}\r\n                  onClick={() => setPage(p => Math.min(totalPages, p + 1))}\r\n                >\r\n                  Siguiente\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Modal de Detalles */}\r\n      <AuditDetailModal\r\n        show={showDetailModal}\r\n        onHide={() => setShowDetailModal(false)}\r\n        auditRecord={selectedRecord}\r\n        onExport={(record) => handleExport('excel')}\r\n        onEdit={handleEditRecord}\r\n        onDelete={handleDeleteRecord}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ButtonGroup","React.forwardRef","bsPrefix","size","vertical","className","role","Component","rest","ref","prefix","useBootstrapPrefix","baseClass","_jsx","classNames","listAudit","params","sp","qs","path","apiFetch","editAuditRecord","id","data","deleteAuditRecord","deleteBulkAuditRecords","ids","archiveAuditRecords","getAuditAnalytics","filters","queryParams","key","getActiveUsers","cleanupOldRecords","hours","getCleanupStats","getHourlyDistribution","useAuditStats","useQuery","analyticsResp","activeUsersResp","resp","rows","total","today","todayActivities","row","uniqueUsers","uniqueActions","actionCounts","acc","mostCommonAction","a","b","last24Hours","recentActivities","lastWeek","weekActivities","activeUsers","error","exportAuditToExcel","exportAuditToPDF","exportAuditToCSV","downloadFile","blob","filename","url","link","AuditAdvancedFilters","onFiltersChange","onClearFilters","showAdvanced","setShowAdvanced","useState","handleFilterChange","value","handleDateRangeChange","type","newFilters","activeFiltersCount","count","jsxs","Card","jsx","FiFilter","Badge","Button","FiSettings","FiX","Row","Col","Form","InputGroup","FiSearch","e","action","user","FiCalendar","AuditDetailModal","show","onHide","auditRecord","onExport","onEdit","onDelete","formatDate","dateString","getActionIcon","FiEdit","FiTrash2","FiUser","FiActivity","getActionBadgeColor","formatActionThirdPerson","Modal","FiEye","FiInfo","FiClock","FiMapPin","ListGroup","Alert","FiDownload","AuditBulkActions","selectedItems","onBulkExport","onBulkDelete","onBulkArchive","onClearSelection","showConfirmModal","setShowConfirmModal","bulkAction","setBulkAction","isProcessing","setIsProcessing","progress","setProgress","selectedCount","handleBulkAction","confirmBulkAction","interval","prev","getActionTitle","getActionDescription","FiArchive","FiMoreVertical","Fragment","Dropdown","FiAlertTriangle","ProgressBar","item","index","FiCheck","AuditAnalytics","analyticsData","isLoading","hourlyData","isLoadingHourly","topActions","name","userActivity","hourlyDistribution","_","i","FiUsers","FiBarChart","FiPieChart","Spinner","hour","h","AuditCleanup","isCleaning","setIsCleaning","cleanupProgress","setCleanupProgress","queryClient","useQueryClient","cleanupStats","statsLoading","cleanupMutation","useMutation","handleCleanup","stats","FiRefreshCw","FiCheckCircle","Auditoria","page","setPage","limit","setLimit","searchQuery","setSearchQuery","actionFilter","setActionFilter","userFilter","setUserFilter","dateFilter","setDateFilter","showAnalytics","setShowAnalytics","setSelectedItems","showDetailModal","setShowDetailModal","selectedRecord","setSelectedRecord","setFilters","refetch","isFetching","usersData","getUsersForAudit","globalStats","FiPlus","FiXCircle","getUserDisplayName","userData","u","useMemo","_a","totalPages","globalTotal","globalUniqueUsers","globalUniqueActions","clearFilters","handleRefreshAll","handleFiltersChange","handleClearFilters","handleExport","format","currentFilters","handleShowDetails","record","handleSelectItem","isSelected","handleSelectAll","handleBulkExport","items","handleBulkDelete","handleBulkArchive","handleEditRecord","newData","handleDeleteRecord","PageHeader","p"],"mappings":"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","x_google_ignoreList":[0]}