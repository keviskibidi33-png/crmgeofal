{"version":3,"file":"Usuarios-Ck0REPZl.js","sources":["../../src/services/users.js","../../src/pages/Usuarios.jsx"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\nexport const listUsers = (params = {}) => {\r\n  const searchParams = new URLSearchParams();\r\n  if (params.page) searchParams.set('page', params.page);\r\n  if (params.limit) searchParams.set('limit', params.limit);\r\n  if (params.search) searchParams.set('search', params.search);\r\n  if (params.area) searchParams.set('area', params.area);\r\n  if (params.role) searchParams.set('role', params.role);\r\n  const qs = searchParams.toString();\r\n  const path = qs ? `/api/users?${qs}` : '/api/users';\r\n  \r\n  console.log('🔍 listUsers - Llamando a:', path);\r\n  console.log('🔍 listUsers - Token:', localStorage.getItem('token') ? 'Presente' : 'Ausente');\r\n  \r\n  return apiFetch(path).then(data => {\r\n    console.log('✅ listUsers - Respuesta recibida:', data);\r\n    return data;\r\n  }).catch(error => {\r\n    console.error('❌ listUsers - Error:', error);\r\n    throw error;\r\n  });\r\n};\r\n\r\nexport const getUserStats = () => {\r\n  console.log('📊 getUserStats - Llamando a: /api/users/stats');\r\n  console.log('📊 getUserStats - Token:', localStorage.getItem('token') ? 'Presente' : 'Ausente');\r\n  \r\n  return apiFetch('/api/users/stats').then(data => {\r\n    console.log('✅ getUserStats - Respuesta recibida:', data);\r\n    return data;\r\n  }).catch(error => {\r\n    console.error('❌ getUserStats - Error:', error);\r\n    throw error;\r\n  });\r\n};\r\n\r\nexport const createUser = (payload) =>\r\n  apiFetch('/api/users', {\r\n    method: 'POST',\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\nexport const updateUser = (id, payload) =>\r\n  apiFetch(`/api/users/${id}`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\nexport const deleteUser = (id) =>\r\n  apiFetch(`/api/users/${id}`, { method: 'DELETE' });\r\n\r\nexport const resetPassword = (id, password) =>\r\n  apiFetch(`/api/users/${id}/reset-password`, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ password }),\r\n  });\r\n\r\nexport const setNotificationEnabled = (id, enabled) =>\r\n  apiFetch(`/api/users/${id}/notification`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({ enabled }),\r\n  });\r\n\r\nexport default {\r\n  listUsers,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  resetPassword,\r\n  setNotificationEnabled,\r\n};\r\n","import React, { useMemo, useState } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { Button, Badge, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { FiPlus, FiEdit, FiTrash2, FiLock, FiUser, FiUsers, FiShield, FiSettings, FiRefreshCw } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport ModalForm from '../components/common/ModalForm';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport { listUsers, createUser, updateUser, deleteUser, resetPassword, getUserStats } from '../services/users';\r\n\r\nconst emptyForm = { name: '', apellido: '', email: '', role: 'vendedor_comercial', area: 'Comercial', password: '' };\r\n\r\nconst ROLES = [\r\n  { value: 'admin', label: 'Administrador' },\r\n  { value: 'jefa_comercial', label: 'Jefa Comercial' },\r\n  { value: 'vendedor_comercial', label: 'Vendedor Comercial' },\r\n  { value: 'jefe_laboratorio', label: 'Jefe Laboratorio' },\r\n  { value: 'usuario_laboratorio', label: 'Usuario Laboratorio' },\r\n  { value: 'laboratorio', label: 'Laboratorio' },\r\n  { value: 'soporte', label: 'Soporte' },\r\n  { value: 'gerencia', label: 'Gerencia' },\r\n];\r\n\r\nconst AREAS = [\r\n  { value: 'Comercial', label: 'Comercial' },\r\n  { value: 'Laboratorio', label: 'Laboratorio' },\r\n  { value: 'Sistemas', label: 'Sistemas' },\r\n  { value: 'Gerencia', label: 'Gerencia' },\r\n  { value: 'Soporte', label: 'Soporte' },\r\n];\r\n\r\nexport default function Usuarios() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [deletingUser, setDeletingUser] = useState(null);\r\n  const [resettingUser, setResettingUser] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  \r\n  // Estado para paginación\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedArea, setSelectedArea] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['users', currentPage, searchTerm, selectedRole, selectedArea],\r\n    () => listUsers({ \r\n      page: currentPage, \r\n      limit: 20, \r\n      search: searchTerm, \r\n      role: selectedRole, \r\n      area: selectedArea \r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 0, // Siempre considerar los datos como obsoletos\r\n      cacheTime: 0  // No mantener en caché\r\n    }\r\n  );\r\n\r\n  // Consulta separada para estadísticas reales\r\n  const { data: statsData, isLoading: statsLoading } = useQuery(\r\n    ['userStats'],\r\n    getUserStats,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 30000, // 30 segundos\r\n      cacheTime: 60000  // 1 minuto\r\n    }\r\n  );\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    queryClient.invalidateQueries('users');\r\n    queryClient.invalidateQueries('userStats'); // Invalidar también las estadísticas\r\n    setShowModal(false);\r\n    setEditingUser(null);\r\n    setDeletingUser(null);\r\n    setResettingUser(null);\r\n    setNewPassword('');\r\n  };\r\n\r\n  // Función para manejar búsqueda\r\n  const handleSearch = (searchValue) => {\r\n    console.log('🔍 handleSearch - Búsqueda:', searchValue);\r\n    setSearchTerm(searchValue);\r\n    setCurrentPage(1); // Resetear a la primera página\r\n    setIsSearching(true);\r\n    \r\n    // La consulta se actualizará automáticamente por el useQuery\r\n    setTimeout(() => setIsSearching(false), 1000);\r\n  };\r\n\r\n  // Función para manejar filtros\r\n  const handleFilter = (filters) => {\r\n    console.log('🔍 handleFilter - Filtros:', filters);\r\n    setSelectedRole(filters.role || '');\r\n    setSelectedArea(filters.area || '');\r\n    setCurrentPage(1); // Resetear a la primera página\r\n  };\r\n\r\n  const createMutation = useMutation(createUser, {\r\n    onSuccess: () => handleMutationSuccess('Usuario creado exitosamente'),\r\n    onError: (error) => console.error('Error creating user:', error)\r\n  });\r\n\r\n  const updateMutation = useMutation(updateUser, {\r\n    onSuccess: () => handleMutationSuccess('Usuario actualizado exitosamente'),\r\n    onError: (error) => console.error('Error updating user:', error)\r\n  });\r\n\r\n  const deleteMutation = useMutation(deleteUser, {\r\n    onSuccess: () => handleMutationSuccess('Usuario eliminado exitosamente'),\r\n    onError: (error) => console.error('Error deleting user:', error)\r\n  });\r\n\r\n  const resetPasswordMutation = useMutation(resetPassword, {\r\n    onSuccess: () => handleMutationSuccess('Contraseña restablecida exitosamente'),\r\n    onError: (error) => console.error('Error resetting password:', error)\r\n  });\r\n\r\n  const handleCreate = () => {\r\n    setEditingUser(emptyForm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingUser(user);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (user) => {\r\n    if (window.confirm(`¿Estás seguro de que quieres eliminar al usuario ${user.name}?`)) {\r\n      deleteMutation.mutate(user.id);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = (user) => {\r\n    setResettingUser(user);\r\n    setNewPassword('');\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (editingUser.id) {\r\n      await updateMutation.mutateAsync({ id: editingUser.id, ...formData });\r\n    } else {\r\n      await createMutation.mutateAsync(formData);\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = async () => {\r\n    if (newPassword && resettingUser) {\r\n      await resetPasswordMutation.mutateAsync({ \r\n        id: resettingUser.id, \r\n        password: newPassword \r\n      });\r\n    }\r\n  };\r\n\r\n  const getRoleBadgeColor = (role) => {\r\n    const colors = {\r\n      admin: 'danger',\r\n      jefa_comercial: 'warning',\r\n      vendedor_comercial: 'primary',\r\n      jefe_laboratorio: 'info',\r\n      usuario_laboratorio: 'secondary',\r\n      laboratorio: 'secondary',\r\n      soporte: 'success',\r\n      gerencia: 'dark'\r\n    };\r\n    return colors[role] || 'secondary';\r\n  };\r\n\r\n  const getRoleLabel = (role) => {\r\n    const roleObj = ROLES.find(r => r.value === role);\r\n    return roleObj ? roleObj.label : role;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'ID',\r\n      accessor: 'id',\r\n      width: '80px'\r\n    },\r\n    {\r\n      header: 'Nombre',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name} {row.apellido}</div>\r\n          <small className=\"text-muted\">{row.email}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Rol',\r\n      accessor: 'role',\r\n      render: (value) => (\r\n        <Badge bg={getRoleBadgeColor(value)} className=\"status-badge\">\r\n          {getRoleLabel(value)}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Área',\r\n      accessor: 'area',\r\n      render: (value) => (\r\n        <Badge bg=\"light\" text=\"dark\" className=\"status-badge\">\r\n          {value}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Fecha Creación',\r\n      accessor: 'created_at',\r\n      type: 'date'\r\n    }\r\n  ];\r\n\r\n  const formFields = [\r\n    {\r\n      name: 'name',\r\n      label: 'Nombre',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el nombre'\r\n    },\r\n    {\r\n      name: 'apellido',\r\n      label: 'Apellido',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el apellido'\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      required: true,\r\n      placeholder: 'usuario@ejemplo.com'\r\n    },\r\n    {\r\n      name: 'role',\r\n      label: 'Rol',\r\n      type: 'select',\r\n      required: true,\r\n      options: ROLES\r\n    },\r\n    {\r\n      name: 'area',\r\n      label: 'Área',\r\n      type: 'select',\r\n      required: true,\r\n      options: AREAS\r\n    },\r\n    {\r\n      name: 'password',\r\n      label: 'Contraseña',\r\n      type: 'password',\r\n      required: !editingUser?.id,\r\n      placeholder: 'Mínimo 6 caracteres',\r\n      help: editingUser?.id ? 'Dejar vacío para mantener la contraseña actual' : 'Mínimo 6 caracteres'\r\n    }\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      label: 'Editar',\r\n      icon: FiEdit,\r\n      onClick: handleEdit,\r\n      variant: 'outline-primary'\r\n    },\r\n    {\r\n      label: 'Eliminar',\r\n      icon: FiTrash2,\r\n      onClick: handleDelete,\r\n      variant: 'outline-danger'\r\n    }\r\n  ];\r\n\r\n  // Calcular estadísticas\r\n  const stats = useMemo(() => {\r\n    // Usar estadísticas reales del backend si están disponibles\r\n    if (statsData) {\r\n      console.log('📊 Stats - Usando estadísticas reales del backend:', statsData);\r\n      return {\r\n        total: statsData.total || 0,\r\n        admins: statsData.admins || 0,\r\n        vendedores: statsData.vendedores || 0,\r\n        laboratorio: statsData.laboratorio || 0,\r\n        activos: statsData.active || 0\r\n      };\r\n    }\r\n    \r\n    // Fallback: calcular desde los datos de la página actual\r\n    const users = data?.data || [];\r\n    console.log('📊 Stats - Fallback: calculando desde página actual:', users);\r\n    return {\r\n      total: users.length,\r\n      admins: users.filter(u => u.role === 'admin').length,\r\n      vendedores: users.filter(u => u.role === 'vendedor_comercial').length,\r\n      laboratorio: users.filter(u => ['jefe_laboratorio', 'usuario_laboratorio', 'laboratorio'].includes(u.role)).length,\r\n      activos: users.filter(u => u.active !== false).length\r\n    };\r\n  }, [statsData, data]);\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <div className=\"fade-in\">\r\n        <PageHeader\r\n          title=\"Gestión de Usuarios\"\r\n          subtitle=\"Crear, editar, eliminar y gestionar usuarios del sistema\"\r\n          icon={FiUsers}\r\n          actions={\r\n            <Button variant=\"primary\" onClick={handleCreate}>\r\n              <FiPlus className=\"me-2\" />\r\n              Nuevo Usuario\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        {/* Estadísticas */}\r\n        <Row className=\"g-4 mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Usuarios\"\r\n              value={stats.total}\r\n              icon={FiUsers}\r\n              color=\"primary\"\r\n              subtitle=\"Usuarios registrados\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Administradores\"\r\n              value={stats.admins}\r\n              icon={FiShield}\r\n              color=\"danger\"\r\n              subtitle=\"Usuarios con privilegios\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Vendedores\"\r\n              value={stats.vendedores}\r\n              icon={FiUser}\r\n              color=\"success\"\r\n              subtitle=\"Equipo comercial\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Laboratorio\"\r\n              value={stats.laboratorio}\r\n              icon={FiSettings}\r\n              color=\"info\"\r\n              subtitle=\"Personal técnico\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Tabla de usuarios */}\r\n        <Card className=\"shadow-sm border-0\">\r\n          <Card.Header className=\"bg-white border-bottom\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiUsers className=\"me-2 text-primary\" />\r\n                Lista de Usuarios\r\n              </h5>\r\n              <div className=\"d-flex align-items-center gap-2\">\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => refetch()}\r\n                  disabled={isLoading}\r\n                  className=\"refresh-btn\"\r\n                >\r\n                  <FiRefreshCw className={isLoading ? 'spinning' : ''} />\r\n                </Button>\r\n                <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\r\n                  {stats.total} usuarios\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              data={data?.data || []}\r\n              columns={columns}\r\n              loading={isLoading || isSearching}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              emptyMessage=\"No hay usuarios registrados\"\r\n              // Props para paginación del backend\r\n              totalItems={data?.total || 0}\r\n              itemsPerPage={20}\r\n              currentPage={currentPage}\r\n              onPageChange={setCurrentPage}\r\n              onSearch={handleSearch}\r\n              onFilter={handleFilter}\r\n              actions={[\r\n                {\r\n                  label: 'Restablecer Contraseña',\r\n                  icon: FiLock,\r\n                  onClick: handleResetPassword,\r\n                  variant: 'outline-warning'\r\n                }\r\n              ]}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      <ModalForm\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        title={editingUser?.id ? 'Editar Usuario' : 'Nuevo Usuario'}\r\n        data={editingUser || emptyForm}\r\n        fields={formFields}\r\n        onSubmit={handleSubmit}\r\n        loading={createMutation.isLoading || updateMutation.isLoading}\r\n        submitText={editingUser?.id ? 'Actualizar' : 'Crear'}\r\n      />\r\n\r\n      {/* Modal para restablecer contraseña */}\r\n      {resettingUser && (\r\n        <ModalForm\r\n          show={!!resettingUser}\r\n          onHide={() => setResettingUser(null)}\r\n          title=\"Restablecer Contraseña\"\r\n          data={{ password: newPassword }}\r\n          fields={[\r\n            {\r\n              name: 'password',\r\n              label: 'Nueva Contraseña',\r\n              type: 'password',\r\n              required: true,\r\n              placeholder: 'Mínimo 6 caracteres'\r\n            }\r\n          ]}\r\n          onSubmit={handlePasswordReset}\r\n          loading={resetPasswordMutation.isLoading}\r\n          submitText=\"Restablecer\"\r\n        />\r\n      )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};"],"names":["listUsers","params","searchParams","qs","path","apiFetch","data","error","getUserStats","createUser","payload","updateUser","id","deleteUser","resetPassword","password","emptyForm","ROLES","AREAS","Usuarios","showModal","setShowModal","useState","editingUser","setEditingUser","deletingUser","setDeletingUser","resettingUser","setResettingUser","newPassword","setNewPassword","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedRole","setSelectedRole","selectedArea","setSelectedArea","isSearching","setIsSearching","queryClient","useQueryClient","isLoading","refetch","useQuery","statsData","statsLoading","handleMutationSuccess","message","handleSearch","searchValue","handleFilter","filters","createMutation","useMutation","updateMutation","deleteMutation","resetPasswordMutation","handleCreate","handleEdit","user","handleDelete","handleResetPassword","handleSubmit","formData","handlePasswordReset","getRoleBadgeColor","role","getRoleLabel","roleObj","r","columns","value","row","jsxs","jsx","Badge","formFields","stats","useMemo","users","u","Container","PageHeader","FiUsers","Button","FiPlus","Row","Col","StatsCard","FiShield","FiUser","FiSettings","Card","FiRefreshCw","DataTable","FiLock","ModalForm"],"mappings":"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"}