{"version":3,"file":"ClientImport-B1Al15sw.js","sources":["../../src/services/clientImportService.js","../../src/pages/ClientImport.jsx"],"sourcesContent":["import apiFetch from './api';\r\n\r\nconst clientImportService = {\r\n  /**\r\n   * Limpiar datos existentes\r\n   */\r\n  async cleanData() {\r\n    try {\r\n      console.log('üßπ Iniciando limpieza de datos...');\r\n      const response = await apiFetch('/api/client-import/clean', {\r\n        method: 'POST'\r\n      });\r\n      console.log('‚úÖ Limpieza completada:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Error en limpieza:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Importar clientes desde archivo CSV\r\n   */\r\n  async importClients(formData) {\r\n    try {\r\n      console.log('üì• Iniciando importaci√≥n de clientes...');\r\n      const response = await apiFetch('/api/client-import/import', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      console.log('‚úÖ Importaci√≥n completada:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Error en importaci√≥n:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtener estad√≠sticas de importaci√≥n\r\n   */\r\n  async getStats() {\r\n    try {\r\n      console.log('üìä Obteniendo estad√≠sticas...');\r\n      const response = await apiFetch('/api/client-import/stats', {\r\n        method: 'GET'\r\n      });\r\n      console.log('‚úÖ Estad√≠sticas obtenidas:', response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('‚ùå Error obteniendo estad√≠sticas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport { clientImportService };\r\n","import React, { useState } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { \r\n  Container, \r\n  Row, \r\n  Col, \r\n  Card, \r\n  Button, \r\n  Alert, \r\n  ProgressBar, \r\n  Table,\r\n  Badge,\r\n  Modal,\r\n  Form\r\n} from 'react-bootstrap';\r\nimport { \r\n  FiUpload, \r\n  FiTrash2, \r\n  FiCheckCircle, \r\n  FiXCircle, \r\n  FiAlertTriangle,\r\n  FiFileText,\r\n  FiUsers,\r\n  FiDatabase,\r\n  FiRefreshCw\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport { getCurrentUser } from '../utils/authHelper';\r\nimport { clientImportService } from '../services/clientImportService';\r\nimport './ClientImport.css';\r\n\r\nexport default function ClientImport() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [importResults, setImportResults] = useState(null);\r\n  const [showCleanModal, setShowCleanModal] = useState(false);\r\n  const [cleanConfirmText, setCleanConfirmText] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  \r\n  const currentUser = getCurrentUser();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Verificar si el usuario es administrador\r\n  const isAdmin = currentUser?.role === 'admin';\r\n\r\n  // Consulta para estad√≠sticas actuales\r\n  const { data: statsData, isLoading: statsLoading, refetch: refetchStats } = useQuery(\r\n    ['clientImportStats'],\r\n    clientImportService.getStats,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 30000\r\n    }\r\n  );\r\n\r\n  // Mutaci√≥n para limpiar datos\r\n  const cleanMutation = useMutation(clientImportService.cleanData, {\r\n    onSuccess: (data) => {\r\n      console.log('‚úÖ Datos limpiados exitosamente:', data);\r\n      setShowCleanModal(false);\r\n      setCleanConfirmText('');\r\n      refetchStats();\r\n      queryClient.invalidateQueries('clients');\r\n      queryClient.invalidateQueries('clientStats');\r\n    },\r\n    onError: (error) => {\r\n      console.error('‚ùå Error limpiando datos:', error);\r\n    }\r\n  });\r\n\r\n  // Mutaci√≥n para importar clientes\r\n  const importMutation = useMutation(clientImportService.importClients, {\r\n    onSuccess: (data) => {\r\n      console.log('‚úÖ Importaci√≥n completada:', data);\r\n      setImportResults(data.data);\r\n      setSelectedFile(null);\r\n      setUploadProgress(0);\r\n      refetchStats();\r\n      queryClient.invalidateQueries('clients');\r\n      queryClient.invalidateQueries('clientStats');\r\n    },\r\n    onError: (error) => {\r\n      console.error('‚ùå Error en importaci√≥n:', error);\r\n      setUploadProgress(0);\r\n    }\r\n  });\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Validar tipo de archivo\r\n      if (!file.name.toLowerCase().endsWith('.csv')) {\r\n        alert('Por favor selecciona un archivo CSV v√°lido');\r\n        return;\r\n      }\r\n      \r\n      // Validar tama√±o (10MB m√°ximo)\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        alert('El archivo es demasiado grande. M√°ximo 10MB');\r\n        return;\r\n      }\r\n      \r\n      setSelectedFile(file);\r\n      setImportResults(null);\r\n    }\r\n  };\r\n\r\n  const handleCleanData = () => {\r\n    if (cleanConfirmText === 'CONFIRMAR') {\r\n      setIsProcessing(true);\r\n      cleanMutation.mutate();\r\n    } else {\r\n      alert('Por favor escribe \"CONFIRMAR\" para proceder con la limpieza');\r\n    }\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (!selectedFile) {\r\n      alert('Por favor selecciona un archivo CSV');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setUploadProgress(0);\r\n    \r\n    // Simular progreso de carga\r\n    const progressInterval = setInterval(() => {\r\n      setUploadProgress(prev => {\r\n        if (prev >= 90) {\r\n          clearInterval(progressInterval);\r\n          return 90;\r\n        }\r\n        return prev + 10;\r\n      });\r\n    }, 200);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    importMutation.mutate(formData, {\r\n      onSettled: () => {\r\n        clearInterval(progressInterval);\r\n        setUploadProgress(100);\r\n        setIsProcessing(false);\r\n        setTimeout(() => setUploadProgress(0), 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      'prospeccion': { bg: 'secondary', text: 'Prospecci√≥n' },\r\n      'interesado': { bg: 'info', text: 'Interesado' },\r\n      'pendiente_cotizacion': { bg: 'warning', text: 'Pendiente Cotizaci√≥n' },\r\n      'cotizacion_enviada': { bg: 'primary', text: 'Cotizaci√≥n Enviada' },\r\n      'negociacion': { bg: 'warning', text: 'Negociaci√≥n' },\r\n      'ganado': { bg: 'success', text: 'Ganado' },\r\n      'perdido': { bg: 'danger', text: 'Perdido' }\r\n    };\r\n    \r\n    const config = statusConfig[status] || { bg: 'secondary', text: status };\r\n    return <Badge bg={config.bg}>{config.text}</Badge>;\r\n  };\r\n\r\n  const getTypeBadge = (type) => {\r\n    return (\r\n      <Badge bg={type === 'empresa' ? 'primary' : 'info'}>\r\n        {type === 'empresa' ? 'Empresa' : 'Persona'}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  if (!isAdmin) {\r\n    return (\r\n      <Container className=\"mt-4\">\r\n        <Alert variant=\"danger\">\r\n          <FiAlertTriangle className=\"me-2\" />\r\n          <strong>Acceso Denegado</strong>\r\n          <br />\r\n          Solo los administradores pueden acceder al m√≥dulo de importaci√≥n de clientes.\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-import-page\">\r\n      <Container fluid>\r\n        <PageHeader\r\n          title=\"Importaci√≥n de Clientes\"\r\n          subtitle=\"Importar datos de clientes desde archivo CSV de seguimiento\"\r\n          icon={FiDatabase}\r\n        />\r\n\r\n        {/* Estad√≠sticas actuales */}\r\n        <Row className=\"mb-4\">\r\n          <Col md={12}>\r\n            <Card className=\"shadow-sm\">\r\n              <Card.Header className=\"bg-primary text-white\">\r\n                <h6 className=\"mb-0\">\r\n                  <FiUsers className=\"me-2\" />\r\n                  Estad√≠sticas Actuales\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {statsLoading ? (\r\n                  <div className=\"text-center py-3\">\r\n                    <FiRefreshCw className=\"spinning\" />\r\n                    <span className=\"ms-2\">Cargando estad√≠sticas...</span>\r\n                  </div>\r\n                ) : statsData ? (\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-primary mb-1\">{statsData.data?.total || 0}</h4>\r\n                        <small className=\"text-muted\">Total Clientes</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-success mb-1\">{statsData.data?.empresas || 0}</h4>\r\n                        <small className=\"text-muted\">Empresas</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-info mb-1\">{statsData.data?.personas || 0}</h4>\r\n                        <small className=\"text-muted\">Personas</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-warning mb-1\">{statsData.data?.conEmail || 0}</h4>\r\n                        <small className=\"text-muted\">Con Email</small>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Alert variant=\"warning\">No se pudieron cargar las estad√≠sticas</Alert>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Panel de limpieza */}\r\n        <Row className=\"mb-4\">\r\n          <Col md={12}>\r\n            <Card className=\"shadow-sm border-warning\">\r\n              <Card.Header className=\"bg-warning text-dark\">\r\n                <h6 className=\"mb-0\">\r\n                  <FiTrash2 className=\"me-2\" />\r\n                  Limpieza de Datos Existentes\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Alert variant=\"warning\" className=\"mb-3\">\r\n                  <FiAlertTriangle className=\"me-2\" />\r\n                  <strong>Advertencia:</strong> Esta acci√≥n eliminar√° TODOS los datos existentes \r\n                  (usuarios, proyectos, clientes) excepto los usuarios administradores. \r\n                  Esta acci√≥n no se puede deshacer.\r\n                </Alert>\r\n                <Button \r\n                  variant=\"outline-warning\" \r\n                  onClick={() => setShowCleanModal(true)}\r\n                  disabled={cleanMutation.isLoading || isProcessing}\r\n                >\r\n                  {cleanMutation.isLoading ? (\r\n                    <>\r\n                      <FiRefreshCw className=\"spinning me-2\" />\r\n                      Limpiando...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiTrash2 className=\"me-2\" />\r\n                      Limpiar Datos Existentes\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Panel de importaci√≥n */}\r\n        <Row className=\"mb-4\">\r\n          <Col md={12}>\r\n            <Card className=\"shadow-sm\">\r\n              <Card.Header className=\"bg-success text-white\">\r\n                <h6 className=\"mb-0\">\r\n                  <FiUpload className=\"me-2\" />\r\n                  Importar Clientes desde CSV\r\n                </h6>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Seleccionar archivo CSV</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    onChange={handleFileSelect}\r\n                    disabled={isProcessing}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Archivo CSV con formato de seguimiento de clientes (m√°ximo 10MB)\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                {selectedFile && (\r\n                  <Alert variant=\"info\" className=\"mb-3\">\r\n                    <FiFileText className=\"me-2\" />\r\n                    <strong>Archivo seleccionado:</strong> {selectedFile.name} \r\n                    ({(selectedFile.size / 1024).toFixed(1)} KB)\r\n                  </Alert>\r\n                )}\r\n\r\n                {uploadProgress > 0 && (\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"d-flex justify-content-between mb-1\">\r\n                      <small>Procesando archivo...</small>\r\n                      <small>{uploadProgress}%</small>\r\n                    </div>\r\n                    <ProgressBar now={uploadProgress} animated />\r\n                  </div>\r\n                )}\r\n\r\n                <Button \r\n                  variant=\"success\" \r\n                  onClick={handleImport}\r\n                  disabled={!selectedFile || isProcessing || importMutation.isLoading}\r\n                  className=\"me-2\"\r\n                >\r\n                  {importMutation.isLoading ? (\r\n                    <>\r\n                      <FiRefreshCw className=\"spinning me-2\" />\r\n                      Importando...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiUpload className=\"me-2\" />\r\n                      Importar Clientes\r\n                    </>\r\n                  )}\r\n                </Button>\r\n\r\n                <Button \r\n                  variant=\"outline-secondary\" \r\n                  onClick={() => {\r\n                    setSelectedFile(null);\r\n                    setImportResults(null);\r\n                    setUploadProgress(0);\r\n                  }}\r\n                  disabled={isProcessing}\r\n                >\r\n                  Limpiar\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Resultados de importaci√≥n */}\r\n        {importResults && (\r\n          <Row className=\"mb-4\">\r\n            <Col md={12}>\r\n              <Card className=\"shadow-sm\">\r\n                <Card.Header className=\"bg-info text-white\">\r\n                  <h6 className=\"mb-0\">\r\n                    <FiCheckCircle className=\"me-2\" />\r\n                    Resultados de Importaci√≥n\r\n                  </h6>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row className=\"mb-3\">\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-success mb-1\">{importResults.successful}</h4>\r\n                        <small className=\"text-muted\">Importados</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-danger mb-1\">{importResults.failed}</h4>\r\n                        <small className=\"text-muted\">Fallaron</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-primary mb-1\">{importResults.totalProcessed}</h4>\r\n                        <small className=\"text-muted\">Procesados</small>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <div className=\"text-center\">\r\n                        <h4 className=\"text-warning mb-1\">{importResults.errors?.length || 0}</h4>\r\n                        <small className=\"text-muted\">Errores</small>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {importResults.errors && importResults.errors.length > 0 && (\r\n                    <Alert variant=\"warning\" className=\"mb-3\">\r\n                      <h6>Errores encontrados:</h6>\r\n                      <ul className=\"mb-0\">\r\n                        {importResults.errors.slice(0, 5).map((error, index) => (\r\n                          <li key={index}>{error}</li>\r\n                        ))}\r\n                        {importResults.errors.length > 5 && (\r\n                          <li>... y {importResults.errors.length - 5} errores m√°s</li>\r\n                        )}\r\n                      </ul>\r\n                    </Alert>\r\n                  )}\r\n\r\n                  {importResults.importedClients && importResults.importedClients.length > 0 && (\r\n                    <div>\r\n                      <h6>Clientes importados:</h6>\r\n                      <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Tipo</th>\r\n                            <th>Estado</th>\r\n                            <th>Acci√≥n</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {importResults.importedClients.slice(0, 10).map((client, index) => (\r\n                            <tr key={index}>\r\n                              <td>{client.id}</td>\r\n                              <td>{client.name}</td>\r\n                              <td>{getTypeBadge(client.type)}</td>\r\n                              <td>{getStatusBadge(client.status)}</td>\r\n                              <td>\r\n                                <Badge bg={client.action === 'created' ? 'success' : 'info'}>\r\n                                  {client.action === 'created' ? 'Creado' : 'Actualizado'}\r\n                                </Badge>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                      {importResults.importedClients.length > 10 && (\r\n                        <small className=\"text-muted\">\r\n                          Mostrando los primeros 10 de {importResults.importedClients.length} clientes\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        {/* Modal de confirmaci√≥n para limpieza */}\r\n        <Modal show={showCleanModal} onHide={() => setShowCleanModal(false)} centered>\r\n          <Modal.Header closeButton className=\"bg-warning text-dark\">\r\n            <Modal.Title>\r\n              <FiAlertTriangle className=\"me-2\" />\r\n              Confirmar Limpieza de Datos\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Alert variant=\"danger\">\r\n              <strong>¬°ADVERTENCIA!</strong>\r\n              <br />\r\n              Esta acci√≥n eliminar√° PERMANENTEMENTE:\r\n              <ul className=\"mt-2 mb-0\">\r\n                <li>Todos los clientes/empresas</li>\r\n                <li>Todos los proyectos</li>\r\n                <li>Todas las cotizaciones</li>\r\n                <li>Todos los usuarios (excepto administradores)</li>\r\n              </ul>\r\n            </Alert>\r\n            <p>Esta acci√≥n NO se puede deshacer.</p>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                Para confirmar, escribe <strong>CONFIRMAR</strong> en el campo de abajo:\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={cleanConfirmText}\r\n                onChange={(e) => setCleanConfirmText(e.target.value)}\r\n                placeholder=\"Escribe CONFIRMAR aqu√≠\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowCleanModal(false)}>\r\n              Cancelar\r\n            </Button>\r\n            <Button \r\n              variant=\"danger\" \r\n              onClick={handleCleanData}\r\n              disabled={cleanConfirmText !== 'CONFIRMAR' || cleanMutation.isLoading}\r\n            >\r\n              {cleanMutation.isLoading ? (\r\n                <>\r\n                  <FiRefreshCw className=\"spinning me-2\" />\r\n                  Limpiando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FiTrash2 className=\"me-2\" />\r\n                  Limpiar Datos\r\n                </>\r\n              )}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["clientImportService","response","apiFetch","error","formData","ClientImport","selectedFile","setSelectedFile","useState","uploadProgress","setUploadProgress","importResults","setImportResults","showCleanModal","setShowCleanModal","cleanConfirmText","setCleanConfirmText","isProcessing","setIsProcessing","currentUser","getCurrentUser","queryClient","useQueryClient","isAdmin","statsData","statsLoading","refetchStats","useQuery","cleanMutation","useMutation","data","importMutation","handleFileSelect","event","file","handleCleanData","handleImport","progressInterval","prev","getStatusBadge","status","config","Badge","getTypeBadge","type","jsx","jsxs","Container","PageHeader","FiDatabase","Row","Col","Card","FiUsers","FiRefreshCw","_a","_b","_c","_d","Alert","FiTrash2","FiAlertTriangle","Button","Fragment","FiUpload","Form","FiFileText","ProgressBar","FiCheckCircle","_e","index","Table","client","Modal","e"],"mappings":"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"}