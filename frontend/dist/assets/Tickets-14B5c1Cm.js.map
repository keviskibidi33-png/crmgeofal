{"version":3,"file":"Tickets-14B5c1Cm.js","sources":["../../src/components/TicketChatHybrid.jsx","../../src/components/TicketHistoryWithChat.jsx","../../src/services/ticketFilters.js","../../src/pages/Tickets.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FiMessageSquare, FiSend, FiUser, FiClock, FiCheck, FiWifi, FiWifiOff } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { createComment, getCommentsByTicket } from '../services/ticketComments';\r\nimport './TicketChat.css';\r\n\r\nconst TicketChatHybrid = ({ ticketId }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [syncStatus, setSyncStatus] = useState('idle'); // idle, syncing, success, error\r\n  const messagesEndRef = useRef(null);\r\n  const { user } = useAuth();\r\n\r\n  // Detectar estado de conexi√≥n\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/health', { \r\n          method: 'HEAD',\r\n          timeout: 3000 \r\n        });\r\n        setIsOnline(response.ok);\r\n      } catch (error) {\r\n        setIsOnline(false);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n    const interval = setInterval(checkConnection, 10000); // Verificar cada 10 segundos\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Sistema de conversaci√≥n con sincronizaci√≥n en tiempo real\r\n  useEffect(() => {\r\n    loadComments();\r\n    \r\n    // Polling para actualizar comentarios cada 5 segundos\r\n    const interval = setInterval(() => {\r\n      if (isOnline) {\r\n        loadComments();\r\n      }\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [ticketId, isOnline]);\r\n\r\n  const loadComments = async () => {\r\n    try {\r\n      // Cargar desde backend √∫nicamente (como TicketChatVendedor)\r\n      const backendComments = await getCommentsByTicket(ticketId);\r\n      console.log('üîç [HYBRID] Comentarios del backend:', backendComments);\r\n      \r\n      if (backendComments && backendComments.length > 0) {\r\n        setComments(backendComments);\r\n        console.log('‚úÖ [HYBRID] Comentarios cargados desde backend:', backendComments.length);\r\n      } else {\r\n        // Si no hay comentarios, mostrar array vac√≠o\r\n        setComments([]);\r\n        console.log('üìù [HYBRID] No hay comentarios en el backend');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå [HYBRID] Error cargando comentarios del backend:', error);\r\n      // En caso de error, mostrar array vac√≠o\r\n      setComments([]);\r\n    }\r\n  };\r\n\r\n  // Scroll autom√°tico al final\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [comments]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() && !isLoading) {\r\n      setIsLoading(true);\r\n      setSyncStatus('syncing');\r\n      \r\n      const messageText = newComment.trim();\r\n      setNewComment(''); // Limpiar inmediatamente\r\n\r\n      try {\r\n        // Enviar al backend primero\r\n        const response = await createComment({\r\n          ticket_id: ticketId,\r\n          comment: messageText\r\n        });\r\n        \r\n        console.log('‚úÖ [HYBRID] Mensaje enviado al backend:', response);\r\n        \r\n        // Recargar comentarios desde el backend para sincronizar\r\n        await loadComments();\r\n        \r\n        setSyncStatus('success');\r\n        console.log('‚úÖ [HYBRID] Mensaje sincronizado correctamente');\r\n        \r\n      } catch (error) {\r\n        console.error('‚ùå [HYBRID] Error enviando mensaje al backend:', error);\r\n        setSyncStatus('error');\r\n        // No mostrar modal, solo cambiar el estado visual\r\n      }\r\n\r\n      setIsLoading(false);\r\n      // Resetear estado despu√©s de 3 segundos\r\n      setTimeout(() => setSyncStatus('idle'), 3000);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('es-ES', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const isSystemComment = (comment) => comment.is_system || comment.user_name === 'Sistema';\r\n\r\n  // Funci√≥n para obtener color consistente por usuario\r\n  const getUserColor = (userName) => {\r\n    const colors = ['#3b82f6', '#ef4444']; // Azul y Rojo\r\n    const hash = userName.split('').reduce((a, b) => {\r\n      a = ((a << 5) - a) + b.charCodeAt(0);\r\n      return a & a;\r\n    }, 0);\r\n    return colors[Math.abs(hash) % colors.length];\r\n  };\r\n\r\n  const getSyncStatusIcon = () => {\r\n    switch (syncStatus) {\r\n      case 'syncing': return <div className=\"spinner-small\"></div>;\r\n      case 'success': return <FiCheck className=\"text-success\" />;\r\n      case 'error': return <FiWifiOff className=\"text-warning\" />;\r\n      default: return isOnline ? <FiWifi className=\"text-success\" /> : <FiWifiOff className=\"text-danger\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ticket-chat\">\r\n      <div className=\"ticket-chat-header\">\r\n        <FiMessageSquare className=\"chat-icon\" />\r\n        <h4>Conversaci√≥n del Ticket</h4>\r\n        <div className=\"header-info\">\r\n          <span className=\"comment-count\">{comments.length} comentarios</span>\r\n          <div className=\"connection-status\">\r\n            {getSyncStatusIcon()}\r\n            <span className=\"status-text\">\r\n              {isOnline ? 'En l√≠nea' : 'Offline'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"ticket-chat-messages\">\r\n        {comments.map((comment) => {\r\n          const userColor = isSystemComment(comment) ? '#6c757d' : getUserColor(comment.user_name || 'Usuario');\r\n          const isOwnMessage = comment.user_id === user?.id;\r\n          \r\n          return (\r\n            <div\r\n              key={comment.id}\r\n              className={`message ${isSystemComment(comment) ? 'system' : isOwnMessage ? 'own' : 'other'}`}\r\n            >\r\n              <div className=\"message-header\">\r\n                <div className=\"message-user\">\r\n                  <div \r\n                    className=\"user-color-bar\"\r\n                    style={{ \r\n                      width: '4px', \r\n                      height: '20px', \r\n                      backgroundColor: userColor,\r\n                      borderRadius: '2px',\r\n                      marginRight: '8px'\r\n                    }}\r\n                  />\r\n                  <FiUser className=\"user-icon\" style={{ color: userColor }} />\r\n                  <span className=\"user-name\" style={{ color: userColor }}>\r\n                    {isSystemComment(comment) ? 'Sistema' : `${comment.user_name} ${comment.user_apellido || ''}`}\r\n                  </span>\r\n                  {comment.user_role && comment.user_role !== 'system' && (\r\n                    <span className=\"user-role\">({comment.user_role})</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"message-time\">\r\n                  <FiClock className=\"time-icon\" />\r\n                  {formatDate(comment.created_at)}\r\n                </div>\r\n              </div>\r\n              <div className=\"message-content\">\r\n                {comment.comment}\r\n              </div>\r\n              {comment.is_read && (\r\n                <div className=\"message-status\">\r\n                  <FiCheck className=\"read-icon\" />\r\n                  Le√≠do\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form className=\"ticket-chat-input\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder={isOnline ? \"Escribe tu comentario aqu√≠...\" : \"Escribe tu comentario (se guardar√° offline)...\"}\r\n            className=\"comment-input\"\r\n            rows={3}\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={!newComment.trim() || isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"spinner-small\"></div>\r\n            ) : (\r\n              <FiSend className=\"send-icon\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"sync-status\">\r\n          {syncStatus === 'syncing' && <span>Sincronizando...</span>}\r\n          {syncStatus === 'success' && <span className=\"text-success\">‚úÖ Sincronizado</span>}\r\n          {syncStatus === 'error' && <span className=\"text-warning\">‚ö†Ô∏è Guardado offline</span>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketChatHybrid;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Card, Badge, Row, Col, Button, Form, Tabs, Tab } from 'react-bootstrap';\r\nimport { \r\n  FiClock, FiUser, FiMessageSquare, FiCheckCircle, FiX, \r\n  FiEdit, FiFlag, FiTag, FiCalendar, FiEye \r\n} from 'react-icons/fi';\r\nimport TicketChatHybrid from './TicketChatHybrid';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport './TicketHistory.css';\r\n\r\nconst TicketHistoryWithChat = ({ show, onHide, ticket, onUpdateStatus }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [newStatus, setNewStatus] = useState(ticket?.status || 'abierto');\r\n  const [activeTab, setActiveTab] = useState('details');\r\n  const { user } = useAuth();\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      'abierto': 'warning',\r\n      'en_progreso': 'info',\r\n      'resuelto': 'success',\r\n      'cerrado': 'secondary',\r\n      'cancelado': 'danger'\r\n    };\r\n    return colors[status] || 'secondary';\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    const labels = {\r\n      'abierto': 'Abierto',\r\n      'en_progreso': 'En Progreso',\r\n      'resuelto': 'Resuelto',\r\n      'cerrado': 'Cerrado',\r\n      'cancelado': 'Cancelado'\r\n    };\r\n    return labels[status] || status;\r\n  };\r\n\r\n  const getPriorityColor = (priority) => {\r\n    const colors = {\r\n      'baja': 'success',\r\n      'media': 'warning',\r\n      'alta': 'danger',\r\n      'urgente': 'danger'\r\n    };\r\n    return colors[priority] || 'secondary';\r\n  };\r\n\r\n  const getPriorityLabel = (priority) => {\r\n    const labels = {\r\n      'baja': 'Baja',\r\n      'media': 'Media',\r\n      'alta': 'Alta',\r\n      'urgente': 'Urgente'\r\n    };\r\n    return labels[priority] || priority;\r\n  };\r\n\r\n  const handleStatusUpdate = () => {\r\n    if (onUpdateStatus && newStatus !== ticket.status) {\r\n      onUpdateStatus(ticket.id, newStatus);\r\n    }\r\n  };\r\n\r\n  if (!ticket) return null;\r\n\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={onHide} \r\n      size=\"xl\" \r\n      className=\"ticket-history-modal\"\r\n    >\r\n      <Modal.Header closeButton className=\"ticket-history-header\">\r\n        <div className=\"ticket-header-content\">\r\n          <Modal.Title className=\"mb-0\">\r\n            Historial del Ticket #{ticket.id}\r\n          </Modal.Title>\r\n          <small className=\"text-muted\">\r\n            {ticket.title}\r\n          </small>\r\n        </div>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body className=\"ticket-history-body\">\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          onSelect={(k) => setActiveTab(k)}\r\n          className=\"ticket-tabs\"\r\n        >\r\n          <Tab eventKey=\"details\" title=\"Detalles\">\r\n            <Row>\r\n              {/* Informaci√≥n del Ticket */}\r\n              <Col md={8}>\r\n                <Card className=\"ticket-info-card\">\r\n                  <Card.Header className=\"ticket-info-header\">\r\n                    <h5 className=\"mb-0\">\r\n                      <FiMessageSquare className=\"me-2\" />\r\n                      Informaci√≥n del Ticket\r\n                    </h5>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"ticket-details\">\r\n                      <div className=\"detail-row\">\r\n                        <strong>T√≠tulo:</strong>\r\n                        <span>{ticket.title}</span>\r\n                      </div>\r\n                      <div className=\"detail-row\">\r\n                        <strong>Descripci√≥n:</strong>\r\n                        <span>{ticket.description}</span>\r\n                      </div>\r\n                      <div className=\"detail-row\">\r\n                        <strong>M√≥dulo:</strong>\r\n                        <Badge bg=\"info\">{ticket.module || 'No especificado'}</Badge>\r\n                      </div>\r\n                      <div className=\"detail-row\">\r\n                        <strong>Categor√≠a:</strong>\r\n                        <Badge bg=\"secondary\">{ticket.category || 'No especificado'}</Badge>\r\n                      </div>\r\n                      <div className=\"detail-row\">\r\n                        <strong>Tipo:</strong>\r\n                        <Badge bg=\"light\" text=\"dark\">{ticket.type || 'No especificado'}</Badge>\r\n                      </div>\r\n                      <div className=\"detail-row\">\r\n                        <strong>Prioridad:</strong>\r\n                        <Badge bg={getPriorityColor(ticket.priority)}>\r\n                          {getPriorityLabel(ticket.priority)}\r\n                        </Badge>\r\n                      </div>\r\n                      {ticket.assigned_to && (\r\n                        <div className=\"detail-row\">\r\n                          <strong>Asignado a:</strong>\r\n                          <span>{ticket.assigned_to}</span>\r\n                        </div>\r\n                      )}\r\n                      {ticket.estimated_time && (\r\n                        <div className=\"detail-row\">\r\n                          <strong>Tiempo estimado:</strong>\r\n                          <span>{ticket.estimated_time}</span>\r\n                        </div>\r\n                      )}\r\n                      {ticket.tags && (\r\n                        <div className=\"detail-row\">\r\n                          <strong>Etiquetas:</strong>\r\n                          <div className=\"tags-container\">\r\n                            {ticket.tags.split(',').map((tag, index) => (\r\n                              <Badge key={index} bg=\"outline-secondary\" className=\"me-1\">\r\n                                {tag.trim()}\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {ticket.additional_notes && (\r\n                        <div className=\"detail-row\">\r\n                          <strong>Notas adicionales:</strong>\r\n                          <span>{ticket.additional_notes}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              {/* Control del Ticket */}\r\n              <Col md={4}>\r\n                <Card className=\"ticket-control-card\">\r\n                  <Card.Header className=\"ticket-control-header\">\r\n                    <h5 className=\"mb-0\">\r\n                      <FiEdit className=\"me-2\" />\r\n                      Control del Ticket\r\n                    </h5>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"ticket-control-section\">\r\n                      <div className=\"status-section\">\r\n                        <h6>Estado Actual</h6>\r\n                        <Badge bg={getStatusColor(ticket.status)} className=\"status-badge\">\r\n                          {getStatusLabel(ticket.status)}\r\n                        </Badge>\r\n                      </div>\r\n\r\n                      <Form className=\"status-update-form\">\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label>Cambiar Estado</Form.Label>\r\n                          <Form.Select\r\n                            value={newStatus}\r\n                            onChange={(e) => setNewStatus(e.target.value)}\r\n                            className=\"status-select\"\r\n                          >\r\n                            <option value=\"abierto\">Abierto</option>\r\n                            <option value=\"en_progreso\">En Progreso</option>\r\n                            <option value=\"resuelto\">Resuelto</option>\r\n                            <option value=\"cerrado\">Cerrado</option>\r\n                            <option value=\"cancelado\">Cancelado</option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                        <Button \r\n                          variant=\"success\" \r\n                          className=\"update-status-btn\"\r\n                          onClick={handleStatusUpdate}\r\n                          disabled={newStatus === ticket.status}\r\n                        >\r\n                          <FiCheckCircle className=\"me-1\" />\r\n                          Actualizar Estado\r\n                        </Button>\r\n                      </Form>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                <Card className=\"ticket-time-card mt-3\">\r\n                  <Card.Header className=\"ticket-time-header\">\r\n                    <h5 className=\"mb-0\">\r\n                      <FiClock className=\"me-2\" />\r\n                      Informaci√≥n de Tiempo\r\n                    </h5>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"time-info\">\r\n                      <div className=\"time-item\">\r\n                        <strong>Creado:</strong>\r\n                        <span>{new Date(ticket.created_at).toLocaleString('es-ES')}</span>\r\n                      </div>\r\n                      <div className=\"time-item\">\r\n                        <strong>√öltima Actualizaci√≥n:</strong>\r\n                        <span>{new Date(ticket.updated_at).toLocaleString('es-ES')}</span>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n\r\n          <Tab eventKey=\"chat\" title=\"Conversaci√≥n\">\r\n            <TicketChatHybrid \r\n              ticketId={ticket.id}\r\n            />\r\n          </Tab>\r\n        </Tabs>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          <FiX className=\"me-1\" />\r\n          Cerrar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TicketHistoryWithChat;\r\n","import { apiFetch } from './api';\r\n\r\n// Obtener usuarios para asignaci√≥n\r\nexport const getUsersForAssignment = async () => {\r\n  try {\r\n    const response = await apiFetch('/api/ticket-filters/users');\r\n    return response || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo usuarios:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener m√≥dulos disponibles\r\nexport const getModules = async () => {\r\n  try {\r\n    const response = await apiFetch('/api/ticket-filters/modules');\r\n    return response || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo m√≥dulos:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener categor√≠as disponibles\r\nexport const getCategories = async () => {\r\n  try {\r\n    const response = await apiFetch('/api/ticket-filters/categories');\r\n    return response || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo categor√≠as:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener tipos disponibles\r\nexport const getTypes = async () => {\r\n  try {\r\n    const response = await apiFetch('/api/ticket-filters/types');\r\n    return response || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo tipos:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener estad√≠sticas de tickets\r\nexport const getTicketStats = async () => {\r\n  try {\r\n    const response = await apiFetch('/api/ticket-filters/stats');\r\n    return response || {};\r\n  } catch (error) {\r\n    console.error('Error obteniendo estad√≠sticas:', error);\r\n    return {};\r\n  }\r\n};\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Button, Badge, Row, Col, Card, Container, Alert, Spinner, Form, InputGroup } from 'react-bootstrap';\r\nimport { \r\n  FiPlus, FiEdit, FiTrash2, FiMessageSquare, FiClock, \r\n  FiCheckCircle, FiX, FiAlertTriangle, FiUser, FiCalendar,\r\n  FiEye, FiFlag, FiSearch, FiFilter, FiRefreshCw, FiTrendingUp,\r\n  FiLayers, FiTag, FiActivity\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport TicketFormUnified from '../components/TicketFormUnified';\r\nimport TicketHistoryWithChat from '../components/TicketHistoryWithChat';\r\nimport SuccessModal from '../components/SuccessModal';\r\nimport { listTickets, createTicket, updateTicketStatus } from '../services/tickets';\r\nimport { getUsersForAssignment, getModules, getCategories, getTypes, getTicketStats } from '../services/ticketFilters';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport './Tickets.css';\r\n\r\nconst emptyForm = { \r\n  title: '', \r\n  description: '', \r\n  priority: 'media',\r\n  module: 'sistema',\r\n  category: 'tecnico',\r\n  type: 'solicitud',\r\n  assigned_to: '',\r\n  estimated_time: '',\r\n  tags: '',\r\n  additional_notes: ''\r\n};\r\n\r\nexport default function Tickets() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [editingTicket, setEditingTicket] = useState(null);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [priorityFilter, setPriorityFilter] = useState('');\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { data: tickets, isLoading, error } = useQuery(\r\n    ['tickets'],\r\n    () => listTickets(),\r\n    { \r\n      keepPreviousData: true,\r\n      onSuccess: (data) => {\r\n        console.log('üé´ Tickets cargados:', data);\r\n        console.log('üé´ Tipo de datos:', typeof data);\r\n        console.log('üé´ Es array:', Array.isArray(data));\r\n      },\r\n      onError: (error) => {\r\n        console.error('‚ùå Error cargando tickets:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Consultas para filtros din√°micos\r\n  const { data: users = [] } = useQuery(['users'], getUsersForAssignment);\r\n  const { data: modules = [] } = useQuery(['ticket-modules'], getModules);\r\n  const { data: categories = [] } = useQuery(['ticket-categories'], getCategories);\r\n  const { data: types = [] } = useQuery(['ticket-types'], getTypes);\r\n  const { data: ticketStats = {} } = useQuery(['ticket-stats'], getTicketStats);\r\n\r\n  const createMutation = useMutation(createTicket, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('tickets');\r\n      setShowModal(false);\r\n      setEditingTicket(null);\r\n      // Mostrar modal de √©xito personalizado\r\n      setSuccessMessage('El ticket ha sido creado exitosamente y est√° listo para ser procesado por el equipo de soporte.');\r\n      setShowSuccessModal(true);\r\n    },\r\n    onError: (error) => {\r\n      console.error('Error creating ticket:', error);\r\n      alert('‚ùå Error al crear el ticket');\r\n    }\r\n  });\r\n\r\n  const updateMutation = useMutation(\r\n    ({ id, status }) => updateTicketStatus(id, status),\r\n    {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('tickets');\r\n        // Mostrar modal de √©xito personalizado\r\n        setSuccessMessage('El estado del ticket ha sido actualizado exitosamente.');\r\n        setShowSuccessModal(true);\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error updating ticket:', error);\r\n        alert('‚ùå Error al actualizar el ticket');\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleCreate = () => {\r\n    setEditingTicket(null);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCreateTicket = (formData) => {\r\n    createMutation.mutate(formData);\r\n  };\r\n\r\n  const handleEdit = (ticket) => {\r\n    setEditingTicket(ticket);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleViewHistory = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setShowHistory(true);\r\n  };\r\n\r\n  const handleSubmit = (formData) => {\r\n    if (editingTicket?.id) {\r\n      updateMutation.mutate({ id: editingTicket.id, ...formData });\r\n    } else {\r\n      createMutation.mutate(formData);\r\n    }\r\n  };\r\n\r\n  const handleStatusUpdate = (ticketId, newStatus) => {\r\n    updateMutation.mutate({ id: ticketId, status: newStatus });\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      'abierto': 'warning',\r\n      'en_progreso': 'info',\r\n      'resuelto': 'success',\r\n      'cerrado': 'secondary',\r\n      'cancelado': 'danger'\r\n    };\r\n    return colors[status] || 'secondary';\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    const labels = {\r\n      'abierto': 'Abierto',\r\n      'en_progreso': 'En Progreso',\r\n      'resuelto': 'Resuelto',\r\n      'cerrado': 'Cerrado',\r\n      'cancelado': 'Cancelado'\r\n    };\r\n    return labels[status] || status;\r\n  };\r\n\r\n  const getPriorityColor = (priority) => {\r\n    const colors = {\r\n      'baja': 'success',\r\n      'media': 'warning',\r\n      'alta': 'danger',\r\n      'critica': 'dark'\r\n    };\r\n    return colors[priority] || 'secondary';\r\n  };\r\n\r\n  const getPriorityLabel = (priority) => {\r\n    const labels = {\r\n      'baja': 'Baja',\r\n      'media': 'Media',\r\n      'alta': 'Alta',\r\n      'critica': 'Cr√≠tica'\r\n    };\r\n    return labels[priority] || priority;\r\n  };\r\n\r\n  const filteredTickets = useMemo(() => {\r\n    if (!tickets || !Array.isArray(tickets)) return [];\r\n    \r\n    return tickets.filter(ticket => {\r\n      const matchesSearch = ticket.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           ticket.description?.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesStatus = !statusFilter || ticket.status === statusFilter;\r\n      const matchesPriority = !priorityFilter || ticket.priority === priorityFilter;\r\n      \r\n      return matchesSearch && matchesStatus && matchesPriority;\r\n    });\r\n  }, [tickets, searchTerm, statusFilter, priorityFilter]);\r\n\r\n  const stats = useMemo(() => {\r\n    // Usar estad√≠sticas del servidor si est√°n disponibles, sino calcular localmente\r\n    if (ticketStats && Object.keys(ticketStats).length > 0) {\r\n    return {\r\n        total: ticketStats.total || 0,\r\n        open: ticketStats.abierto || 0,\r\n        inProgress: ticketStats.en_progreso || 0,\r\n        resolved: ticketStats.resuelto || 0\r\n      };\r\n    }\r\n    \r\n    if (!tickets || !Array.isArray(tickets)) return { total: 0, open: 0, inProgress: 0, resolved: 0 };\r\n    \r\n    const total = tickets.length;\r\n    const open = tickets.filter(t => t.status === 'abierto').length;\r\n    const inProgress = tickets.filter(t => t.status === 'en_progreso').length;\r\n    const resolved = tickets.filter(t => t.status === 'resuelto').length;\r\n    \r\n    return { total, open, inProgress, resolved };\r\n  }, [tickets, ticketStats]);\r\n\r\n  if (error) {\r\n    return (\r\n      <Container fluid className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          <FiAlertTriangle className=\"me-2\" />\r\n          Error al cargar los tickets: {error.message}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tickets-page\">\r\n    <Container fluid className=\"py-4\">\r\n        <PageHeader\r\n          title=\"üé´ Gesti√≥n de Tickets\"\r\n          subtitle=\"Administra y da seguimiento a los tickets de soporte\"\r\n        />\r\n\r\n        {/* Estad√≠sticas */}\r\n        <Row className=\"mb-4\">\r\n          <Col md={3}>\r\n            <StatsCard\r\n              title=\"Total Tickets\"\r\n              value={stats.total}\r\n              icon={FiMessageSquare}\r\n              color=\"primary\"\r\n            />\r\n          </Col>\r\n          <Col md={3}>\r\n            <StatsCard\r\n              title=\"Abiertos\"\r\n              value={stats.open}\r\n              icon={FiAlertTriangle}\r\n              color=\"warning\"\r\n            />\r\n          </Col>\r\n          <Col md={3}>\r\n            <StatsCard\r\n              title=\"En Progreso\"\r\n              value={stats.inProgress}\r\n              icon={FiClock}\r\n              color=\"info\"\r\n            />\r\n          </Col>\r\n          <Col md={3}>\r\n            <StatsCard\r\n              title=\"Resueltos\"\r\n              value={stats.resolved}\r\n              icon={FiCheckCircle}\r\n              color=\"success\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Filtros y B√∫squeda */}\r\n        <Card className=\"mb-4 tickets-filters-card\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center\">\r\n              <Col md={4}>\r\n                <InputGroup>\r\n                  <InputGroup.Text>\r\n                    <FiSearch />\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar tickets...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"tickets-search-input\"\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Form.Select\r\n                  value={statusFilter}\r\n                  onChange={(e) => setStatusFilter(e.target.value)}\r\n                  className=\"tickets-filter-select\"\r\n                >\r\n                  <option value=\"\">Todos los estados</option>\r\n                  <option value=\"abierto\">Abierto</option>\r\n                  <option value=\"en_progreso\">En Progreso</option>\r\n                  <option value=\"resuelto\">Resuelto</option>\r\n                  <option value=\"cerrado\">Cerrado</option>\r\n                  <option value=\"cancelado\">Cancelado</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Form.Select\r\n                  value={priorityFilter}\r\n                  onChange={(e) => setPriorityFilter(e.target.value)}\r\n                  className=\"tickets-filter-select\"\r\n                >\r\n                  <option value=\"\">Todas las prioridades</option>\r\n                  <option value=\"baja\">Baja</option>\r\n                  <option value=\"media\">Media</option>\r\n                  <option value=\"alta\">Alta</option>\r\n                  <option value=\"critica\">Cr√≠tica</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col md={2}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setStatusFilter('');\r\n                    setPriorityFilter('');\r\n                  }}\r\n                  className=\"w-100\"\r\n                >\r\n                  <FiRefreshCw className=\"me-1\" />\r\n                  Limpiar\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {/* Lista de Tickets */}\r\n        <Card className=\"tickets-list-card\">\r\n          <Card.Header className=\"tickets-list-header\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiMessageSquare className=\"me-2\" />\r\n                Tickets de Soporte ({filteredTickets.length})\r\n              </h5>\r\n              <Button variant=\"primary\" onClick={handleCreate} className=\"tickets-create-btn\">\r\n                <FiPlus className=\"me-2\" />\r\n                Nuevo Ticket\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"tickets-list-body\">\r\n            {isLoading ? (\r\n              <div className=\"text-center py-5\">\r\n                <Spinner animation=\"border\" variant=\"primary\" />\r\n                <p className=\"mt-3 text-muted\">Cargando tickets...</p>\r\n              </div>\r\n            ) : filteredTickets.length === 0 ? (\r\n              <div className=\"text-center py-5\">\r\n                <FiMessageSquare size={48} className=\"text-muted mb-3\" />\r\n                <h5 className=\"text-muted\">No hay tickets</h5>\r\n                <p className=\"text-muted\">No se encontraron tickets que coincidan con los filtros.</p>\r\n                <Button variant=\"primary\" onClick={handleCreate}>\r\n                  <FiPlus className=\"me-2\" />\r\n                  Crear Primer Ticket\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"tickets-grid\">\r\n                {filteredTickets.map((ticket) => (\r\n                  <Card key={ticket.id} className=\"ticket-card\">\r\n                    <Card.Body>\r\n                      <div className=\"ticket-header\">\r\n                        <div className=\"ticket-title\">\r\n                          <h6 className=\"mb-1\">#{ticket.id} - {ticket.title}</h6>\r\n                          <small className=\"text-muted\">\r\n                            {ticket.description?.substring(0, 100)}...\r\n                          </small>\r\n                        </div>\r\n                        <div className=\"ticket-badges\">\r\n                          <Badge bg={getStatusColor(ticket.status)} className=\"me-1\">\r\n                            {getStatusLabel(ticket.status)}\r\n                          </Badge>\r\n                          <Badge bg={getPriorityColor(ticket.priority)}>\r\n                            {getPriorityLabel(ticket.priority)}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"ticket-meta\">\r\n                        <div className=\"ticket-info\">\r\n                          <small className=\"text-muted\">\r\n                            <FiCalendar className=\"me-1\" />\r\n                            {new Date(ticket.created_at).toLocaleDateString()}\r\n                          </small>\r\n                          {ticket.module && (\r\n                            <small className=\"text-muted ms-3\">\r\n                              <FiLayers className=\"me-1\" />\r\n                              {ticket.module}\r\n                            </small>\r\n                          )}\r\n                          {ticket.category && (\r\n                            <small className=\"text-muted ms-3\">\r\n                              <FiTag className=\"me-1\" />\r\n                              {ticket.category}\r\n                            </small>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"ticket-actions\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleViewHistory(ticket)}\r\n                          className=\"me-2\"\r\n                        >\r\n                          <FiEye className=\"me-1\" />\r\n                          Ver\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleEdit(ticket)}\r\n                        >\r\n                          <FiEdit className=\"me-1\" />\r\n                          Editar\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {/* Modal de Formulario */}\r\n        <TicketFormUnified\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n          onSubmit={handleCreateTicket}\r\n          isLoading={createMutation.isLoading}\r\n        />\r\n\r\n        {/* Modal de Historial */}\r\n        <TicketHistoryWithChat\r\n          show={showHistory}\r\n          onHide={() => setShowHistory(false)}\r\n          ticket={selectedTicket}\r\n          onUpdateStatus={handleStatusUpdate}\r\n        />\r\n\r\n        {/* Modal de √âxito */}\r\n        <SuccessModal\r\n          show={showSuccessModal}\r\n          onHide={() => setShowSuccessModal(false)}\r\n          title=\"¬°Ticket Procesado!\"\r\n          message={successMessage}\r\n          buttonText=\"Continuar\"\r\n        />\r\n      </Container>\r\n      </div>\r\n  );\r\n}"],"names":["TicketChatHybrid","ticketId","newComment","setNewComment","useState","comments","setComments","isLoading","setIsLoading","isOnline","setIsOnline","syncStatus","setSyncStatus","messagesEndRef","useRef","user","useAuth","useEffect","checkConnection","response","interval","loadComments","backendComments","getCommentsByTicket","error","scrollToBottom","_a","handleSubmit","e","messageText","createComment","formatDate","dateString","isSystemComment","comment","getUserColor","userName","colors","hash","a","b","getSyncStatusIcon","jsx","FiCheck","FiWifiOff","FiWifi","jsxs","FiMessageSquare","userColor","isOwnMessage","FiUser","FiClock","FiSend","TicketHistoryWithChat","show","onHide","ticket","onUpdateStatus","newStatus","setNewStatus","activeTab","setActiveTab","getStatusColor","status","getStatusLabel","getPriorityColor","priority","getPriorityLabel","handleStatusUpdate","Modal","Tabs","k","Tab","Row","Col","Card","Badge","tag","index","FiEdit","Form","Button","FiCheckCircle","FiX","getUsersForAssignment","apiFetch","getModules","getCategories","getTypes","getTicketStats","Tickets","showModal","setShowModal","showHistory","setShowHistory","editingTicket","setEditingTicket","selectedTicket","setSelectedTicket","searchTerm","setSearchTerm","statusFilter","setStatusFilter","priorityFilter","setPriorityFilter","showSuccessModal","setShowSuccessModal","successMessage","setSuccessMessage","queryClient","useQueryClient","tickets","useQuery","listTickets","data","users","modules","categories","types","ticketStats","createMutation","useMutation","createTicket","updateMutation","id","updateTicketStatus","handleCreate","handleCreateTicket","formData","handleEdit","handleViewHistory","filteredTickets","useMemo","matchesSearch","_b","matchesStatus","matchesPriority","stats","total","open","t","inProgress","resolved","Container","Alert","FiAlertTriangle","PageHeader","StatsCard","InputGroup","FiSearch","FiRefreshCw","FiPlus","Spinner","FiCalendar","FiLayers","FiTag","FiEye","TicketFormUnified","SuccessModal"],"mappings":"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"}