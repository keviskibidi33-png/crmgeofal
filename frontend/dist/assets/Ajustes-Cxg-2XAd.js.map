{"version":3,"file":"Ajustes-Cxg-2XAd.js","sources":["../../src/pages/Ajustes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Row, Col, Card, Button, Form, Badge, Alert, Tab, Tabs, InputGroup, Spinner } from 'react-bootstrap';\r\nimport { \r\n  FiUser, FiMail, FiShield, FiLogOut, FiSettings, FiBell, \r\n  FiLock, FiEye, FiEyeOff, FiSave, FiEdit, FiCheck, FiX,\r\n  FiInfo, FiGlobe, FiDatabase, FiDownload\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport apiFetch from '../services/api';\r\n\r\nconst Ajustes = () => {\r\n  const { user, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [editingProfile, setEditingProfile] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [profileData, setProfileData] = useState({\r\n    name: user?.name || '',\r\n    apellido: user?.apellido || '',\r\n    email: user?.email || '',\r\n    area: user?.area || ''\r\n  });\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [notifications, setNotifications] = useState({\r\n    email: true,\r\n    push: false,\r\n    sms: false\r\n  });\r\n\r\n  // Cargar datos del perfil actual al montar el componente\r\n  useEffect(() => {\r\n    loadUserProfile();\r\n  }, []);\r\n\r\n  const loadUserProfile = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await apiFetch('/api/auth/me');\r\n      const userData = response.user;\r\n      setProfileData({\r\n        name: userData.name || '',\r\n        apellido: userData.apellido || '',\r\n        email: userData.email || '',\r\n        area: userData.area || ''\r\n      });\r\n    } catch (err) {\r\n      console.error('Error cargando perfil:', err);\r\n      setError('Error al cargar los datos del perfil');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getRoleBadgeColor = (role) => {\r\n    const colors = {\r\n      admin: 'danger',\r\n      jefa_comercial: 'warning',\r\n      vendedor_comercial: 'primary',\r\n      jefe_laboratorio: 'info',\r\n      usuario_laboratorio: 'secondary',\r\n      laboratorio: 'secondary',\r\n      facturacion: 'success',\r\n      soporte: 'success',\r\n      gerencia: 'dark'\r\n    };\r\n    return colors[role] || 'secondary';\r\n  };\r\n\r\n  const getRoleLabel = (role) => {\r\n    const labels = {\r\n      admin: 'Administrador',\r\n      jefa_comercial: 'Jefa Comercial',\r\n      vendedor_comercial: 'Vendedor',\r\n      jefe_laboratorio: 'Jefe Laboratorio',\r\n      usuario_laboratorio: 'Usuario Laboratorio',\r\n      laboratorio: 'Laboratorio',\r\n      facturacion: 'Facturación',\r\n      soporte: 'Soporte',\r\n      gerencia: 'Gerencia'\r\n    };\r\n    return labels[role] || role;\r\n  };\r\n\r\n  const handleProfileSave = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setSuccess(null);\r\n      \r\n      // Validar campos requeridos\r\n      if (!profileData.name.trim()) {\r\n        setError('El nombre es requerido');\r\n        return;\r\n      }\r\n      \r\n      if (!profileData.email.trim()) {\r\n        setError('El email es requerido');\r\n        return;\r\n      }\r\n      \r\n      // Validar formato de email\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(profileData.email)) {\r\n        setError('El formato del email no es válido');\r\n        return;\r\n      }\r\n      \r\n      const response = await apiFetch('/api/auth/me', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(profileData)\r\n      });\r\n      \r\n      setEditingProfile(false);\r\n      setSuccess('Perfil actualizado exitosamente');\r\n      console.log('Perfil actualizado:', response);\r\n      \r\n      // Limpiar mensaje de éxito después de 3 segundos\r\n      setTimeout(() => setSuccess(null), 3000);\r\n      \r\n    } catch (err) {\r\n      console.error('Error actualizando perfil:', err);\r\n      setError(err.response?.data?.error || 'Error al actualizar el perfil');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = () => {\r\n    // Aquí iría la lógica para cambiar la contraseña\r\n    setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });\r\n    console.log('Contraseña actualizada');\r\n  };\r\n\r\n  const handleNotificationChange = (key, value) => {\r\n    setNotifications(prev => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"fade-in\">\r\n      <PageHeader\r\n        title=\"Configuración y Ajustes\"\r\n        subtitle=\"Gestiona tu perfil, configuración y preferencias del sistema\"\r\n        icon={FiSettings}\r\n      />\r\n\r\n      <Row className=\"g-4\">\r\n        <Col lg={4}>\r\n          {/* Información del usuario */}\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"text-center\">\r\n              <div className=\"mb-3\">\r\n                <div className=\"bg-primary bg-opacity-10 rounded-circle p-4 d-inline-flex align-items-center justify-content-center\">\r\n                  <FiUser size={48} className=\"text-primary\" />\r\n                </div>\r\n              </div>\r\n              <h4 className=\"fw-bold\">{user?.name}</h4>\r\n              <p className=\"text-muted mb-2\">{user?.email}</p>\r\n              <Badge bg={getRoleBadgeColor(user?.role)} className=\"status-badge mb-3\">\r\n                {getRoleLabel(user?.role)}\r\n              </Badge>\r\n              {user?.area && (\r\n                <div className=\"text-muted small\">\r\n                  <FiGlobe className=\"me-1\" />\r\n                  Área: {user.area}\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Acciones rápidas */}\r\n          <Card className=\"mt-4\">\r\n            <Card.Header>\r\n              <h6 className=\"mb-0\">Acciones Rápidas</h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"d-grid gap-2\">\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  <FiDownload className=\"me-2\" />\r\n                  Exportar Datos\r\n                </Button>\r\n                <Button variant=\"outline-secondary\" size=\"sm\">\r\n                  <FiDatabase className=\"me-2\" />\r\n                  Historial de Actividad\r\n                </Button>\r\n                <Button variant=\"outline-danger\" size=\"sm\" onClick={logout}>\r\n                  <FiLogOut className=\"me-2\" />\r\n                  Cerrar Sesión\r\n                </Button>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={8}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey={activeTab}\r\n                onSelect={(k) => setActiveTab(k)}\r\n                className=\"mb-4\"\r\n              >\r\n                <Tab eventKey=\"profile\" title=\"Perfil\">\r\n                  <div className=\"p-3\">\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                      <h5>Información Personal</h5>\r\n                      <Button\r\n                        variant={editingProfile ? \"success\" : \"outline-primary\"}\r\n                        size=\"sm\"\r\n                        onClick={() => editingProfile ? handleProfileSave() : setEditingProfile(true)}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? (\r\n                          <>\r\n                            <Spinner size=\"sm\" className=\"me-1\" />\r\n                            Guardando...\r\n                          </>\r\n                        ) : editingProfile ? (\r\n                          <>\r\n                            <FiCheck className=\"me-1\" />\r\n                            Guardar\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <FiEdit className=\"me-1\" />\r\n                            Editar\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n\r\n                    {error && (\r\n                      <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\r\n                        {error}\r\n                      </Alert>\r\n                    )}\r\n\r\n                    {success && (\r\n                      <Alert variant=\"success\" dismissible onClose={() => setSuccess(null)}>\r\n                        {success}\r\n                      </Alert>\r\n                    )}\r\n\r\n                    <Row className=\"g-3\">\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Nombre</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            value={profileData.name}\r\n                            onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}\r\n                            disabled={!editingProfile || loading}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Apellido</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            value={profileData.apellido}\r\n                            onChange={(e) => setProfileData({ ...profileData, apellido: e.target.value })}\r\n                            disabled={!editingProfile || loading}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Email</Form.Label>\r\n                          <Form.Control\r\n                            type=\"email\"\r\n                            value={profileData.email}\r\n                            onChange={(e) => setProfileData({ ...profileData, email: e.target.value })}\r\n                            disabled={!editingProfile || loading}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Área</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            value={profileData.area}\r\n                            onChange={(e) => setProfileData({ ...profileData, area: e.target.value })}\r\n                            disabled={!editingProfile || loading}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    {editingProfile && (\r\n                      <div className=\"mt-3\">\r\n                        <Button \r\n                          variant=\"outline-secondary\" \r\n                          size=\"sm\" \r\n                          onClick={() => {\r\n                            setEditingProfile(false);\r\n                            setError(null);\r\n                            setSuccess(null);\r\n                            loadUserProfile(); // Recargar datos originales\r\n                          }}\r\n                          disabled={loading}\r\n                        >\r\n                          <FiX className=\"me-1\" />\r\n                          Cancelar\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Tab>\r\n\r\n                <Tab eventKey=\"security\" title=\"Seguridad\">\r\n                  <div className=\"p-3\">\r\n                    <h5 className=\"mb-4\">Cambiar Contraseña</h5>\r\n                    \r\n                    <Row className=\"g-3\">\r\n                      <Col md={12}>\r\n                        <Form.Group>\r\n                          <Form.Label>Contraseña Actual</Form.Label>\r\n                          <InputGroup>\r\n                            <Form.Control\r\n                              type={showPassword ? \"text\" : \"password\"}\r\n                              value={passwordData.currentPassword}\r\n                              onChange={(e) => setPasswordData({ ...passwordData, currentPassword: e.target.value })}\r\n                            />\r\n                            <Button\r\n                              variant=\"outline-secondary\"\r\n                              onClick={() => setShowPassword(!showPassword)}\r\n                            >\r\n                              {showPassword ? <FiEyeOff /> : <FiEye />}\r\n                            </Button>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Nueva Contraseña</Form.Label>\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            value={passwordData.newPassword}\r\n                            onChange={(e) => setPasswordData({ ...passwordData, newPassword: e.target.value })}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group>\r\n                          <Form.Label>Confirmar Contraseña</Form.Label>\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            value={passwordData.confirmPassword}\r\n                            onChange={(e) => setPasswordData({ ...passwordData, confirmPassword: e.target.value })}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <Button variant=\"primary\" onClick={handlePasswordChange}>\r\n                        <FiLock className=\"me-1\" />\r\n                        Cambiar Contraseña\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <Alert variant=\"info\" className=\"mt-4\">\r\n                      <FiInfo className=\"me-2\" />\r\n                      <strong>Recomendaciones de seguridad:</strong>\r\n                      <ul className=\"mb-0 mt-2\">\r\n                        <li>Usa al menos 8 caracteres</li>\r\n                        <li>Incluye mayúsculas, minúsculas y números</li>\r\n                        <li>Evita información personal</li>\r\n                      </ul>\r\n                    </Alert>\r\n                  </div>\r\n                </Tab>\r\n\r\n                <Tab eventKey=\"notifications\" title=\"Notificaciones\">\r\n                  <div className=\"p-3\">\r\n                    <h5 className=\"mb-4\">Preferencias de Notificaciones</h5>\r\n                    \r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"d-flex justify-content-between align-items-center p-3 border rounded\">\r\n                        <div>\r\n                          <div className=\"fw-medium\">\r\n                            <FiMail className=\"me-2\" />\r\n                            Notificaciones por Email\r\n                          </div>\r\n                          <small className=\"text-muted\">Recibe notificaciones importantes por correo electrónico</small>\r\n                        </div>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          checked={notifications.email}\r\n                          onChange={(e) => handleNotificationChange('email', e.target.checked)}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between align-items-center p-3 border rounded\">\r\n                        <div>\r\n                          <div className=\"fw-medium\">\r\n                            <FiBell className=\"me-2\" />\r\n                            Notificaciones Push\r\n                          </div>\r\n                          <small className=\"text-muted\">Recibe notificaciones en tiempo real en el navegador</small>\r\n                        </div>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          checked={notifications.push}\r\n                          onChange={(e) => handleNotificationChange('push', e.target.checked)}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between align-items-center p-3 border rounded\">\r\n                        <div>\r\n                          <div className=\"fw-medium\">\r\n                            <FiBell className=\"me-2\" />\r\n                            Notificaciones SMS\r\n                          </div>\r\n                          <small className=\"text-muted\">Recibe notificaciones críticas por mensaje de texto</small>\r\n                        </div>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          checked={notifications.sms}\r\n                          onChange={(e) => handleNotificationChange('sms', e.target.checked)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <Button variant=\"primary\">\r\n                        <FiSave className=\"me-1\" />\r\n                        Guardar Preferencias\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n\r\n                <Tab eventKey=\"system\" title=\"Sistema\">\r\n                  <div className=\"p-3\">\r\n                    <h5 className=\"mb-4\">Información del Sistema</h5>\r\n                    \r\n                    <Row className=\"g-3\">\r\n                      <Col md={6}>\r\n                        <div className=\"p-3 border rounded\">\r\n                          <h6>Versión del Sistema</h6>\r\n                          <p className=\"text-muted mb-0\">CRM GeoFal v1.0.0</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <div className=\"p-3 border rounded\">\r\n                          <h6>Última Actualización</h6>\r\n                          <p className=\"text-muted mb-0\">15 de Enero, 2025</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <div className=\"p-3 border rounded\">\r\n                          <h6>Base de Datos</h6>\r\n                          <p className=\"text-muted mb-0\">PostgreSQL 14.0</p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <div className=\"p-3 border rounded\">\r\n                          <h6>Servidor</h6>\r\n                          <p className=\"text-muted mb-0\">Node.js 18.0</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Alert variant=\"info\" className=\"mt-4\">\r\n                      <FiInfo className=\"me-2\" />\r\n                      Para más información sobre el sistema, contacta al administrador.\r\n                    </Alert>\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ajustes;\r\n"],"names":["Ajustes","user","logout","useAuth","activeTab","setActiveTab","useState","showPassword","setShowPassword","editingProfile","setEditingProfile","loading","setLoading","error","setError","success","setSuccess","profileData","setProfileData","passwordData","setPasswordData","notifications","setNotifications","useEffect","loadUserProfile","userData","apiFetch","err","getRoleBadgeColor","role","getRoleLabel","handleProfileSave","response","_b","_a","handlePasswordChange","handleNotificationChange","key","value","prev","jsxs","jsx","PageHeader","FiSettings","Row","Col","Card","FiUser","Badge","FiGlobe","Button","FiDownload","FiDatabase","FiLogOut","Tabs","k","Tab","Fragment","Spinner","FiCheck","FiEdit","Alert","Form","e","FiX","InputGroup","FiEyeOff","FiEye","FiLock","FiInfo","FiMail","FiBell","FiSave"],"mappings":"okBAWA,MAAMA,GAAU,IAAM,CACpB,KAAM,CAAE,KAAAC,EAAM,OAAAC,CAAA,EAAWC,EAAA,EACnB,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,SAAS,EAC9C,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,EAAK,EAChD,CAACG,EAAgBC,CAAiB,EAAIJ,EAAAA,SAAS,EAAK,EACpD,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAK,EACtC,CAACO,EAAOC,CAAQ,EAAIR,EAAAA,SAAS,IAAI,EACjC,CAACS,EAASC,CAAU,EAAIV,EAAAA,SAAS,IAAI,EACrC,CAACW,EAAaC,CAAc,EAAIZ,WAAS,CAC7C,MAAML,GAAA,YAAAA,EAAM,OAAQ,GACpB,UAAUA,GAAA,YAAAA,EAAM,WAAY,GAC5B,OAAOA,GAAA,YAAAA,EAAM,QAAS,GACtB,MAAMA,GAAA,YAAAA,EAAM,OAAQ,EAAA,CACrB,EACK,CAACkB,EAAcC,CAAe,EAAId,WAAS,CAC/C,gBAAiB,GACjB,YAAa,GACb,gBAAiB,EAAA,CAClB,EACK,CAACe,EAAeC,CAAgB,EAAIhB,WAAS,CACjD,MAAO,GACP,KAAM,GACN,IAAK,EAAA,CACN,EAGDiB,EAAAA,UAAU,IAAM,CACdC,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,MAAMA,EAAkB,SAAY,CAClC,GAAI,CACFZ,EAAW,EAAI,EACfE,EAAS,IAAI,EAEb,MAAMW,GADW,MAAMC,EAAS,cAAc,GACpB,KAC1BR,EAAe,CACb,KAAMO,EAAS,MAAQ,GACvB,SAAUA,EAAS,UAAY,GAC/B,MAAOA,EAAS,OAAS,GACzB,KAAMA,EAAS,MAAQ,EAAA,CACxB,CACH,OAASE,EAAK,CACZ,QAAQ,MAAM,yBAA0BA,CAAG,EAC3Cb,EAAS,sCAAsC,CACjD,QAAA,CACEF,EAAW,EAAK,CAClB,CACF,EAEMgB,EAAqBC,IACV,CACb,MAAO,SACP,eAAgB,UAChB,mBAAoB,UACpB,iBAAkB,OAClB,oBAAqB,YACrB,YAAa,YACb,YAAa,UACb,QAAS,UACT,SAAU,MAAA,GAEEA,CAAI,GAAK,YAGnBC,EAAgBD,IACL,CACb,MAAO,gBACP,eAAgB,iBAChB,mBAAoB,WACpB,iBAAkB,mBAClB,oBAAqB,sBACrB,YAAa,cACb,YAAa,cACb,QAAS,UACT,SAAU,UAAA,GAEEA,CAAI,GAAKA,EAGnBE,EAAoB,SAAY,SACpC,GAAI,CAMF,GALAnB,EAAW,EAAI,EACfE,EAAS,IAAI,EACbE,EAAW,IAAI,EAGX,CAACC,EAAY,KAAK,OAAQ,CAC5BH,EAAS,wBAAwB,EACjC,MACF,CAEA,GAAI,CAACG,EAAY,MAAM,OAAQ,CAC7BH,EAAS,uBAAuB,EAChC,MACF,CAIA,GAAI,CADe,6BACH,KAAKG,EAAY,KAAK,EAAG,CACvCH,EAAS,mCAAmC,EAC5C,MACF,CAEA,MAAMkB,EAAW,MAAMN,EAAS,eAAgB,CAC9C,OAAQ,MACR,QAAS,CACP,eAAgB,kBAAA,EAElB,KAAM,KAAK,UAAUT,CAAW,CAAA,CACjC,EAEDP,EAAkB,EAAK,EACvBM,EAAW,iCAAiC,EAC5C,QAAQ,IAAI,sBAAuBgB,CAAQ,EAG3C,WAAW,IAAMhB,EAAW,IAAI,EAAG,GAAI,CAEzC,OAASW,EAAK,CACZ,QAAQ,MAAM,6BAA8BA,CAAG,EAC/Cb,IAASmB,GAAAC,EAAAP,EAAI,WAAJ,YAAAO,EAAc,OAAd,YAAAD,EAAoB,QAAS,+BAA+B,CACvE,QAAA,CACErB,EAAW,EAAK,CAClB,CACF,EAEMuB,EAAuB,IAAM,CAEjCf,EAAgB,CAAE,gBAAiB,GAAI,YAAa,GAAI,gBAAiB,GAAI,EAC7E,QAAQ,IAAI,wBAAwB,CACtC,EAEMgB,EAA2B,CAACC,EAAKC,IAAU,CAC/ChB,EAAiBiB,IAAS,CAAE,GAAGA,EAAM,CAACF,CAAG,EAAGC,GAAQ,CACtD,EAEA,OACEE,EAAAA,KAAC,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAAA,IAACC,GAAA,CACC,MAAM,0BACN,SAAS,+DACT,KAAMC,CAAA,CAAA,EAGRH,EAAAA,KAACI,EAAA,CAAI,UAAU,MACb,SAAA,CAAAJ,EAAAA,KAACK,EAAA,CAAI,GAAI,EAEP,SAAA,CAAAJ,EAAAA,IAACK,EAAA,CAAK,UAAU,QACd,SAAAN,OAACM,EAAK,KAAL,CAAU,UAAU,cACnB,SAAA,CAAAL,MAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,OAAI,UAAU,sGACb,SAAAA,EAAAA,IAACM,EAAA,CAAO,KAAM,GAAI,UAAU,cAAA,CAAe,EAC7C,EACF,EACAN,EAAAA,IAAC,KAAA,CAAG,UAAU,UAAW,0BAAM,KAAK,EACpCA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAmB,0BAAM,MAAM,EAC5CA,EAAAA,IAACO,EAAA,CAAM,GAAIpB,EAAkB3B,GAAA,YAAAA,EAAM,IAAI,EAAG,UAAU,oBACjD,SAAA6B,EAAa7B,GAAA,YAAAA,EAAM,IAAI,CAAA,CAC1B,GACCA,GAAA,YAAAA,EAAM,OACLuC,OAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CAAQ,UAAU,MAAA,CAAO,EAAE,SACrBhD,EAAK,IAAA,CAAA,CACd,CAAA,CAAA,CAEJ,CAAA,CACF,EAGAuC,EAAAA,KAACM,EAAA,CAAK,UAAU,OACd,SAAA,CAAAL,EAAAA,IAACK,EAAK,OAAL,CACC,SAAAL,EAAAA,IAAC,MAAG,UAAU,OAAO,4BAAgB,CAAA,CACvC,QACCK,EAAK,KAAL,CACC,SAAAN,OAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,EAAAA,KAACU,EAAA,CAAO,QAAQ,kBAAkB,KAAK,KACrC,SAAA,CAAAT,EAAAA,IAACU,EAAA,CAAW,UAAU,MAAA,CAAO,EAAE,gBAAA,EAEjC,EACAX,EAAAA,KAACU,EAAA,CAAO,QAAQ,oBAAoB,KAAK,KACvC,SAAA,CAAAT,EAAAA,IAACW,EAAA,CAAW,UAAU,MAAA,CAAO,EAAE,wBAAA,EAEjC,SACCF,EAAA,CAAO,QAAQ,iBAAiB,KAAK,KAAK,QAAShD,EAClD,SAAA,CAAAuC,EAAAA,IAACY,EAAA,CAAS,UAAU,MAAA,CAAO,EAAE,eAAA,CAAA,CAE/B,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEAZ,EAAAA,IAACI,GAAI,GAAI,EACP,eAACC,EAAA,CACC,SAAAL,EAAAA,IAACK,EAAK,KAAL,CACC,SAAAN,EAAAA,KAACc,GAAA,CACC,UAAWlD,EACX,SAAWmD,GAAMlD,EAAakD,CAAC,EAC/B,UAAU,OAEV,SAAA,CAAAd,EAAAA,IAACe,EAAA,CAAI,SAAS,UAAU,MAAM,SAC5B,SAAAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,sBAAA,CAAoB,EACxBA,EAAAA,IAACS,EAAA,CACC,QAASzC,EAAiB,UAAY,kBACtC,KAAK,KACL,QAAS,IAAMA,EAAiBsB,EAAA,EAAsBrB,EAAkB,EAAI,EAC5E,SAAUC,EAET,WACC6B,EAAAA,KAAAiB,EAAAA,SAAA,CACE,SAAA,CAAAhB,EAAAA,IAACiB,GAAA,CAAQ,KAAK,KAAK,UAAU,OAAO,EAAE,cAAA,CAAA,CAExC,EACEjD,EACF+B,EAAAA,KAAAiB,EAAAA,SAAA,CACE,SAAA,CAAAhB,EAAAA,IAACkB,EAAA,CAAQ,UAAU,MAAA,CAAO,EAAE,SAAA,CAAA,CAE9B,EAEAnB,EAAAA,KAAAiB,EAAAA,SAAA,CACE,SAAA,CAAAhB,EAAAA,IAACmB,EAAA,CAAO,UAAU,MAAA,CAAO,EAAE,QAAA,CAAA,CAE7B,CAAA,CAAA,CAEJ,EACF,EAEC/C,GACC4B,EAAAA,IAACoB,EAAA,CAAM,QAAQ,SAAS,YAAW,GAAC,QAAS,IAAM/C,EAAS,IAAI,EAC7D,SAAAD,CAAA,CACH,EAGDE,GACC0B,EAAAA,IAACoB,EAAA,CAAM,QAAQ,UAAU,YAAW,GAAC,QAAS,IAAM7C,EAAW,IAAI,EAChE,SAAAD,CAAA,CACH,EAGFyB,EAAAA,KAACI,EAAA,CAAI,UAAU,MACb,SAAA,CAAAH,MAACI,GAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,QAAA,CAAM,EAClBrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,OACL,MAAO7C,EAAY,KACnB,SAAW8C,GAAM7C,EAAe,CAAE,GAAGD,EAAa,KAAM8C,EAAE,OAAO,MAAO,EACxE,SAAU,CAACtD,GAAkBE,EAC7B,SAAQ,EAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,QACCkC,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,UAAA,CAAQ,EACpBrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,OACL,MAAO7C,EAAY,SACnB,SAAW8C,GAAM7C,EAAe,CAAE,GAAGD,EAAa,SAAU8C,EAAE,OAAO,MAAO,EAC5E,SAAU,CAACtD,GAAkBE,CAAA,CAAA,CAC/B,CAAA,CACF,CAAA,CACF,QACCkC,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,OAAA,CAAK,EACjBrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,QACL,MAAO7C,EAAY,MACnB,SAAW8C,GAAM7C,EAAe,CAAE,GAAGD,EAAa,MAAO8C,EAAE,OAAO,MAAO,EACzE,SAAU,CAACtD,GAAkBE,EAC7B,SAAQ,EAAA,CAAA,CACV,CAAA,CACF,CAAA,CACF,QACCkC,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,MAAA,CAAI,EAChBrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,OACL,MAAO7C,EAAY,KACnB,SAAW8C,GAAM7C,EAAe,CAAE,GAAGD,EAAa,KAAM8C,EAAE,OAAO,MAAO,EACxE,SAAU,CAACtD,GAAkBE,CAAA,CAAA,CAC/B,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAECF,GACCgC,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAACU,EAAA,CACC,QAAQ,oBACR,KAAK,KACL,QAAS,IAAM,CACbxC,EAAkB,EAAK,EACvBI,EAAS,IAAI,EACbE,EAAW,IAAI,EACfQ,EAAA,CACF,EACA,SAAUb,EAEV,SAAA,CAAA8B,EAAAA,IAACuB,EAAA,CAAI,UAAU,MAAA,CAAO,EAAE,UAAA,CAAA,CAAA,CAE1B,CACF,CAAA,CAAA,CAEJ,CAAA,CACF,EAEAvB,EAAAA,IAACe,GAAI,SAAS,WAAW,MAAM,YAC7B,SAAAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,OAAO,SAAA,qBAAkB,EAEvCD,EAAAA,KAACI,EAAA,CAAI,UAAU,MACb,SAAA,CAAAH,MAACI,GAAI,GAAI,GACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,mBAAA,CAAiB,SAC5BG,GAAA,CACC,SAAA,CAAAxB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAMvD,EAAe,OAAS,WAC9B,MAAOY,EAAa,gBACpB,SAAW4C,GAAM3C,EAAgB,CAAE,GAAGD,EAAc,gBAAiB4C,EAAE,OAAO,KAAA,CAAO,CAAA,CAAA,EAEvFtB,EAAAA,IAACS,EAAA,CACC,QAAQ,oBACR,QAAS,IAAM1C,EAAgB,CAACD,CAAY,EAE3C,SAAAA,EAAekC,MAACyB,EAAA,CAAA,CAAS,QAAMC,GAAA,CAAA,CAAM,CAAA,CAAA,CACxC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QACCtB,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,kBAAA,CAAgB,EAC5BrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,WACL,MAAO3C,EAAa,YACpB,SAAW4C,GAAM3C,EAAgB,CAAE,GAAGD,EAAc,YAAa4C,EAAE,OAAO,KAAA,CAAO,CAAA,CAAA,CACnF,CAAA,CACF,CAAA,CACF,QACClB,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAACsB,EAAK,MAAL,CACC,SAAA,CAAArB,EAAAA,IAACqB,EAAK,MAAL,CAAW,SAAA,sBAAA,CAAoB,EAChCrB,EAAAA,IAACqB,EAAK,QAAL,CACC,KAAK,WACL,MAAO3C,EAAa,gBACpB,SAAW4C,GAAM3C,EAAgB,CAAE,GAAGD,EAAc,gBAAiB4C,EAAE,OAAO,KAAA,CAAO,CAAA,CAAA,CACvF,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAtB,EAAAA,IAAC,OAAI,UAAU,OACb,gBAACS,EAAA,CAAO,QAAQ,UAAU,QAASf,EACjC,SAAA,CAAAM,EAAAA,IAAC2B,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,oBAAA,CAAA,CAE7B,CAAA,CACF,EAEA5B,EAAAA,KAACqB,EAAA,CAAM,QAAQ,OAAO,UAAU,OAC9B,SAAA,CAAApB,EAAAA,IAAC4B,EAAA,CAAO,UAAU,MAAA,CAAO,EACzB5B,EAAAA,IAAC,UAAO,SAAA,+BAAA,CAA6B,EACrCD,EAAAA,KAAC,KAAA,CAAG,UAAU,YACZ,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,2BAAA,CAAyB,EAC7BA,EAAAA,IAAC,MAAG,SAAA,0CAAA,CAAwC,EAC5CA,EAAAA,IAAC,MAAG,SAAA,4BAAA,CAA0B,CAAA,CAAA,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAEAA,EAAAA,IAACe,GAAI,SAAS,gBAAgB,MAAM,iBAClC,SAAAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,OAAO,SAAA,iCAA8B,EAEnDD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC6B,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,0BAAA,EAE7B,EACA7B,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,0DAAA,CAAwD,CAAA,EACxF,EACAA,EAAAA,IAACqB,EAAK,MAAL,CACC,KAAK,SACL,QAASzC,EAAc,MACvB,SAAW0C,GAAM3B,EAAyB,QAAS2B,EAAE,OAAO,OAAO,CAAA,CAAA,CACrE,EACF,EAEAvB,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC8B,EAAA,CAAO,UAAU,MAAA,CAAO,EAAE,qBAAA,EAE7B,EACA9B,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,sDAAA,CAAoD,CAAA,EACpF,EACAA,EAAAA,IAACqB,EAAK,MAAL,CACC,KAAK,SACL,QAASzC,EAAc,KACvB,SAAW0C,GAAM3B,EAAyB,OAAQ2B,EAAE,OAAO,OAAO,CAAA,CAAA,CACpE,EACF,EAEAvB,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC8B,EAAA,CAAO,UAAU,MAAA,CAAO,EAAE,oBAAA,EAE7B,EACA9B,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,qDAAA,CAAmD,CAAA,EACnF,EACAA,EAAAA,IAACqB,EAAK,MAAL,CACC,KAAK,SACL,QAASzC,EAAc,IACvB,SAAW0C,GAAM3B,EAAyB,MAAO2B,EAAE,OAAO,OAAO,CAAA,CAAA,CACnE,CAAA,CACF,CAAA,EACF,QAEC,MAAA,CAAI,UAAU,OACb,SAAAvB,EAAAA,KAACU,EAAA,CAAO,QAAQ,UACd,SAAA,CAAAT,EAAAA,IAAC+B,GAAA,CAAO,UAAU,MAAA,CAAO,EAAE,sBAAA,CAAA,CAE7B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAEA/B,EAAAA,IAACe,GAAI,SAAS,SAAS,MAAM,UAC3B,SAAAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,OAAO,SAAA,0BAAuB,EAE5CD,EAAAA,KAACI,EAAA,CAAI,UAAU,MACb,SAAA,CAAAH,EAAAA,IAACI,GAAI,GAAI,EACP,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,qBAAA,CAAmB,EACvBA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAClD,CAAA,CACF,QACCI,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,sBAAA,CAAoB,EACxBA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAClD,CAAA,CACF,QACCI,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,eAAA,CAAa,EACjBA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,iBAAA,CAAe,CAAA,CAAA,CAChD,CAAA,CACF,QACCI,EAAA,CAAI,GAAI,EACP,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,UAAA,CAAQ,EACZA,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,cAAA,CAAY,CAAA,CAAA,CAC7C,CAAA,CACF,CAAA,EACF,EAEAD,EAAAA,KAACqB,EAAA,CAAM,QAAQ,OAAO,UAAU,OAC9B,SAAA,CAAApB,EAAAA,IAAC4B,EAAA,CAAO,UAAU,MAAA,CAAO,EAAE,mEAAA,CAAA,CAE7B,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}