{"version":3,"file":"CotizacionInteligente-Bbs_zxNC.js","sources":["../../src/utils/ensayoDependencies.js","../../src/components/SubserviceAutocompleteFinal.jsx","../../src/components/ProjectSelectionModal.jsx","../../src/pages/CotizacionInteligente.jsx"],"sourcesContent":["/**\r\n * Utilidades para manejar dependencias entre ensayos\r\n */\r\n\r\n/**\r\n * Extrae códigos de ensayos dependientes de un comentario\r\n * @param {string} comentario - El comentario del ensayo\r\n * @returns {Array<string>} - Array de códigos de ensayos dependientes\r\n */\r\nexport function extractDependenciesFromComment(comentario) {\r\n  if (!comentario || typeof comentario !== 'string') {\r\n    return [];\r\n  }\r\n\r\n  const dependencies = [];\r\n  \r\n  // Patrón más específico para encontrar códigos de ensayos\r\n  // Busca códigos como SU24, AG19, AG28, SU32, SU31, etc.\r\n  const pattern = /\\b([A-Z]{2}\\d{2,3})\\b/g;\r\n  \r\n  let match;\r\n  while ((match = pattern.exec(comentario)) !== null) {\r\n    const code = match[1];\r\n    if (code && !dependencies.includes(code)) {\r\n      dependencies.push(code);\r\n    }\r\n  }\r\n\r\n  return dependencies;\r\n}\r\n\r\n/**\r\n * Mapea códigos de ensayos a sus nombres/descripciones\r\n * @param {Array<string>} codigos - Array de códigos\r\n * @param {Array} ensayosData - Array de datos de ensayos\r\n * @returns {Array<Object>} - Array de objetos con código y descripción\r\n */\r\nexport function mapCodesToEnsayos(codigos, ensayosData) {\r\n  return codigos.map(codigo => {\r\n    const ensayo = ensayosData.find(e => e.codigo === codigo);\r\n    return {\r\n      codigo,\r\n      descripcion: ensayo?.descripcion || `Ensayo ${codigo}`,\r\n      precio: ensayo?.precio || 0,\r\n      norma: ensayo?.norma || '',\r\n      ubicacion: ensayo?.ubicacion || 'LABORATORIO'\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * Analiza un ensayo y extrae sus dependencias\r\n * @param {Object} ensayo - Objeto del ensayo\r\n * @param {Array} ensayosData - Array completo de ensayos\r\n * @returns {Object} - Objeto con el ensayo y sus dependencias\r\n */\r\nexport function analyzeEnsayoDependencies(ensayo, ensayosData) {\r\n  const dependencies = extractDependenciesFromComment(ensayo.comentarios);\r\n  const mappedDependencies = mapCodesToEnsayos(dependencies, ensayosData);\r\n  \r\n  return {\r\n    ensayo,\r\n    dependencies: mappedDependencies,\r\n    hasDependencies: mappedDependencies.length > 0\r\n  };\r\n}\r\n\r\n/**\r\n * Formatea las dependencias para mostrar en la UI\r\n * @param {Array} dependencies - Array de dependencias\r\n * @returns {string} - Texto formateado para mostrar\r\n */\r\nexport function formatDependenciesForDisplay(dependencies) {\r\n  if (!dependencies || dependencies.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  if (dependencies.length === 1) {\r\n    return `Requiere: ${dependencies[0].codigo}`;\r\n  }\r\n\r\n  if (dependencies.length <= 3) {\r\n    const codes = dependencies.map(d => d.codigo).join(', ');\r\n    return `Requiere: ${codes}`;\r\n  }\r\n\r\n  const firstThree = dependencies.slice(0, 3).map(d => d.codigo).join(', ');\r\n  const remaining = dependencies.length - 3;\r\n  return `Requiere: ${firstThree} y ${remaining} más`;\r\n}\r\n\r\n/**\r\n * Verifica si un ensayo tiene dependencias específicas\r\n * @param {string} codigo - Código del ensayo\r\n * @param {Array} ensayosData - Array completo de ensayos\r\n * @returns {boolean} - True si tiene dependencias\r\n */\r\nexport function hasDependencies(codigo, ensayosData) {\r\n  const ensayo = ensayosData.find(e => e.codigo === codigo);\r\n  if (!ensayo) return false;\r\n  \r\n  const dependencies = extractDependenciesFromComment(ensayo.comentarios);\r\n  return dependencies.length > 0;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Badge, Spinner } from 'react-bootstrap';\r\nimport { FiSearch, FiX, FiDollarSign, FiFileText, FiLink, FiPlus } from 'react-icons/fi';\r\nimport { useQuery } from 'react-query';\r\nimport { searchSubservices } from '../services/subservices';\r\nimport { extractDependenciesFromComment, formatDependenciesForDisplay } from '../utils/ensayoDependencies';\r\n\r\nconst SubserviceAutocompleteFinal = ({ \r\n  value = '', \r\n  onChange, \r\n  onSelect, \r\n  onDependenciesSelect,\r\n  placeholder = 'Buscar servicio...',\r\n  disabled = false,\r\n  size = 'sm'\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(value);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\r\n  const inputRef = useRef(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  // Debounce\r\n  const [debouncedTerm, setDebouncedTerm] = useState(searchTerm);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedTerm(searchTerm), 400);\r\n    return () => clearTimeout(timer);\r\n  }, [searchTerm]);\r\n\r\n  // Query\r\n  const { data, isLoading } = useQuery(\r\n    ['subservices', debouncedTerm],\r\n    () => searchSubservices(debouncedTerm),\r\n    {\r\n      enabled: debouncedTerm.length >= 2,\r\n      staleTime: 10 * 60 * 1000,\r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const results = data?.data || [];\r\n\r\n  // Actualizar posición del dropdown\r\n  const updatePosition = () => {\r\n    if (inputRef.current && isOpen) {\r\n      const rect = inputRef.current.getBoundingClientRect();\r\n      setDropdownPosition({\r\n        top: rect.bottom + window.scrollY + 2,\r\n        left: rect.left + window.scrollX,\r\n        width: rect.width\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      updatePosition();\r\n      \r\n      const handleScroll = () => {\r\n        if (isOpen) updatePosition();\r\n      };\r\n      \r\n      const handleResize = () => {\r\n        if (isOpen) updatePosition();\r\n      };\r\n\r\n      window.addEventListener('scroll', handleScroll, true);\r\n      window.addEventListener('resize', handleResize);\r\n      \r\n      return () => {\r\n        window.removeEventListener('scroll', handleScroll, true);\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handlers\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setSearchTerm(newValue);\r\n    onChange?.(newValue);\r\n    \r\n    if (newValue.length >= 2) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    if (searchTerm.length >= 2) {\r\n      setIsOpen(true);\r\n      updatePosition();\r\n    }\r\n  };\r\n\r\n  const handleItemSelect = (item) => {\r\n    setSearchTerm(item.display_text);\r\n    setIsOpen(false);\r\n    onSelect?.(item);\r\n    \r\n    // Manejar dependencias si existen\r\n    if (onDependenciesSelect && item.comentarios) {\r\n      console.log('🔍 Analizando dependencias para:', item.codigo);\r\n      console.log('📝 Comentario:', item.comentarios);\r\n      \r\n      const dependencies = extractDependenciesFromComment(item.comentarios);\r\n      console.log('🔗 Dependencias encontradas:', dependencies);\r\n      \r\n      if (dependencies.length > 0) {\r\n        // Buscar los ensayos dependientes en los resultados actuales\r\n        const dependencyItems = results.filter(result => \r\n          dependencies.includes(result.codigo)\r\n        );\r\n        \r\n        console.log('📋 Items dependientes encontrados:', dependencyItems);\r\n        \r\n        if (dependencyItems.length > 0) {\r\n          onDependenciesSelect(dependencyItems);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSearchTerm('');\r\n    setIsOpen(false);\r\n    onChange?.('');\r\n    onSelect?.(null);\r\n  };\r\n\r\n  // Click outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (\r\n        inputRef.current && !inputRef.current.contains(e.target) &&\r\n        dropdownRef.current && !dropdownRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const formatPrice = (precio) => {\r\n    if (precio === 0) return 'Sujeto a evaluación';\r\n    return `S/ ${precio.toFixed(2)}`;\r\n  };\r\n\r\n  const getServiceColor = (serviceName) => {\r\n    const colors = {\r\n      'ENSAYO ESTÁNDAR': 'primary',\r\n      'ENSAYOS ESPECIALES': 'success',\r\n      'ENSAYOS DE CAMPO': 'info',\r\n      'ENSAYO AGREGADO': 'warning',\r\n    };\r\n    return colors[serviceName] || 'secondary';\r\n  };\r\n\r\n  // Dropdown Portal\r\n  const dropdownContent = isOpen && searchTerm.length >= 2 && (\r\n    <div \r\n      ref={dropdownRef}\r\n      style={{ \r\n        position: 'absolute',\r\n        top: `${dropdownPosition.top}px`,\r\n        left: `${dropdownPosition.left}px`,\r\n        width: `${dropdownPosition.width}px`,\r\n        zIndex: 999999,\r\n        maxHeight: '300px',\r\n        overflowY: 'auto',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #dee2e6',\r\n        borderRadius: '4px',\r\n        boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n      }}\r\n      onMouseDown={(e) => e.preventDefault()}\r\n    >\r\n      {isLoading && (\r\n        <div className=\"p-3 text-center text-muted\">\r\n          <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n          <small>Buscando...</small>\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && results.length === 0 && (\r\n        <div className=\"p-3 text-center text-muted\">\r\n          <small>No se encontraron resultados</small>\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && results.length > 0 && results.map((item) => {\r\n        // Extraer dependencias del comentario\r\n        const dependencies = extractDependenciesFromComment(item.comentarios);\r\n        const hasDependencies = dependencies.length > 0;\r\n        \r\n        return (\r\n          <div\r\n            key={item.id}\r\n            className=\"p-2 border-bottom\"\r\n            onClick={() => handleItemSelect(item)}\r\n            style={{ \r\n              cursor: 'pointer',\r\n              transition: 'background-color 0.15s'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f8f9fa'}\r\n            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'white'}\r\n          >\r\n            <div className=\"d-flex justify-content-between align-items-start\">\r\n              <div className=\"flex-grow-1\">\r\n                <div className=\"d-flex align-items-center gap-2 mb-1\">\r\n                  <Badge bg={getServiceColor(item.service_name)} className=\"small\">\r\n                    {item.codigo}\r\n                  </Badge>\r\n                  {hasDependencies && (\r\n                    <Badge bg=\"warning\" text=\"dark\" className=\"small\">\r\n                      <FiLink size={10} className=\"me-1\" />\r\n                      Con dependencias\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n                <div className=\"fw-bold small text-dark\">\r\n                  {item.descripcion}\r\n                </div>\r\n                {item.norma && item.norma !== '-' && (\r\n                  <div className=\"text-muted\" style={{ fontSize: '0.75rem' }}>\r\n                    <FiFileText size={10} className=\"me-1\" />\r\n                    {item.norma}\r\n                  </div>\r\n                )}\r\n                {hasDependencies && (\r\n                  <div className=\"text-info mt-1\" style={{ fontSize: '0.7rem' }}>\r\n                    <FiPlus size={8} className=\"me-1\" />\r\n                    {formatDependenciesForDisplay(dependencies.map(code => ({ codigo: code })))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"text-end ms-2\">\r\n                <div className=\"fw-bold text-success small\">\r\n                  <FiDollarSign size={12} />\r\n                  {formatPrice(item.precio)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"position-relative\">\r\n        <Form.Group className=\"mb-0\">\r\n          <div className=\"position-relative\">\r\n            <Form.Control\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleInputChange}\r\n              onFocus={handleFocus}\r\n              placeholder={placeholder}\r\n              disabled={disabled}\r\n              size={size}\r\n              className=\"pe-5\"\r\n              autoComplete=\"off\"\r\n            />\r\n            \r\n            <div className=\"position-absolute top-50 end-0 translate-middle-y pe-3 d-flex align-items-center gap-2\">\r\n              {isLoading && <Spinner animation=\"border\" size=\"sm\" variant=\"primary\" />}\r\n              {!isLoading && searchTerm && (\r\n                <FiX \r\n                  className=\"text-muted\" \r\n                  onClick={handleClear}\r\n                  onMouseDown={(e) => e.preventDefault()}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              )}\r\n              {!isLoading && !searchTerm && <FiSearch className=\"text-muted\" />}\r\n            </div>\r\n          </div>\r\n        </Form.Group>\r\n      </div>\r\n\r\n      {/* Renderizar dropdown usando Portal para evitar overflow de tabla */}\r\n      {typeof document !== 'undefined' && dropdownContent && ReactDOM.createPortal(\r\n        dropdownContent,\r\n        document.body\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubserviceAutocompleteFinal;","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, ListGroup, Badge, Alert, Spinner } from 'react-bootstrap';\r\nimport { FiFolder, FiPlus, FiCalendar, FiUser, FiMapPin, FiEdit3 } from 'react-icons/fi';\r\nimport { searchProjectsByName } from '../services/projects';\r\n\r\nconst ProjectSelectionModal = ({ \r\n  show, \r\n  onHide, \r\n  projectName, \r\n  companyId, \r\n  onSelectExisting, \r\n  onCreateNew \r\n}) => {\r\n  const [existingProjects, setExistingProjects] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('🔍 ProjectSelectionModal - useEffect triggered:', { show, projectName, companyId });\r\n    if (show && projectName && projectName.trim().length >= 2) {\r\n      searchExistingProjects();\r\n    }\r\n  }, [show, projectName, companyId]);\r\n\r\n  const searchExistingProjects = async () => {\r\n    try {\r\n      console.log('🔍 ProjectSelectionModal - Iniciando búsqueda:', { projectName, companyId });\r\n      setLoading(true);\r\n      setError(null);\r\n      const projects = await searchProjectsByName(projectName, companyId);\r\n      console.log('✅ ProjectSelectionModal - Proyectos encontrados:', projects);\r\n      setExistingProjects(projects || []);\r\n    } catch (err) {\r\n      console.error('❌ ProjectSelectionModal - Error searching projects:', err);\r\n      setError('Error al buscar proyectos existentes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectExisting = (project) => {\r\n    onSelectExisting(project);\r\n    onHide();\r\n  };\r\n\r\n  const handleCreateNew = () => {\r\n    onCreateNew();\r\n    onHide();\r\n  };\r\n\r\n  const handleCreateDifferentiated = () => {\r\n    // Calcular el siguiente número para diferenciación\r\n    const nextNumber = existingProjects.length + 1;\r\n    const differentiatedName = `${projectName} (${nextNumber})`;\r\n    \r\n    // Llamar a la función con el nombre diferenciado\r\n    onCreateNew(differentiatedName);\r\n    onHide();\r\n  };\r\n\r\n  const handleEditProject = (project) => {\r\n    // Permitir editar el nombre del proyecto para unificación\r\n    const newName = prompt(`Editar nombre del proyecto \"${project.name}\":`, project.name);\r\n    if (newName && newName.trim() !== project.name) {\r\n      // Aquí podrías implementar la lógica para actualizar el proyecto\r\n      console.log('Editar proyecto:', project.id, 'nuevo nombre:', newName);\r\n      alert(`Funcionalidad de edición en desarrollo. Proyecto: ${project.name} → ${newName}`);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('es-PE');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered style={{ zIndex: 9999 }}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <FiFolder className=\"me-2\" />\r\n          Proyectos Existentes: \"{projectName}\"\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body>\r\n        {loading && (\r\n          <div className=\"text-center py-4\">\r\n            <Spinner animation=\"border\" />\r\n            <p className=\"mt-2\">Buscando proyectos existentes...</p>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <Alert variant=\"danger\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {!loading && !error && existingProjects.length > 0 && (\r\n          <>\r\n            <Alert variant=\"warning\" className=\"mb-3\">\r\n              <div>\r\n                <strong>⚠️ Se encontraron {existingProjects.length} proyecto(s) con el nombre \"{projectName}\" en esta empresa.</strong>\r\n                <br />\r\n                Para evitar confusiones, el sistema sugiere diferenciarlos automáticamente.\r\n              </div>\r\n            </Alert>\r\n            \r\n            <Alert variant=\"info\" className=\"mb-3\">\r\n              <div>\r\n                <strong>💡 Opciones disponibles:</strong>\r\n                <ul className=\"mb-0 mt-2\">\r\n                  <li><strong>Continuar con proyecto existente:</strong> Usar uno de los proyectos listados</li>\r\n                  <li><strong>Crear nuevo diferenciado:</strong> El sistema agregará automáticamente \"(2)\", \"(3)\", etc.</li>\r\n                  <li><strong>Editar manualmente:</strong> Puedes cambiar el nombre después de crear el proyecto</li>\r\n                </ul>\r\n              </div>\r\n            </Alert>\r\n\r\n            <ListGroup>\r\n              {existingProjects.map((project) => (\r\n                <ListGroup.Item \r\n                  key={project.id}\r\n                  className=\"d-flex justify-content-between align-items-start\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => handleSelectExisting(project)}\r\n                >\r\n                  <div className=\"ms-2 me-auto\">\r\n                    <div className=\"fw-bold\">\r\n                      <FiFolder className=\"me-1\" />\r\n                      {project.name}\r\n                    </div>\r\n                    <div className=\"text-muted small\">\r\n                      <strong>Empresa:</strong> {project.company_name} (RUC: {project.company_ruc})\r\n                    </div>\r\n                    <div className=\"text-muted small\">\r\n                      <FiMapPin className=\"me-1\" />\r\n                      {project.location || 'Sin ubicación'}\r\n                    </div>\r\n                    <div className=\"text-muted small\">\r\n                      <FiUser className=\"me-1\" />\r\n                      Vendedor: {project.vendedor_name || 'No asignado'}\r\n                    </div>\r\n                    <div className=\"text-muted small\">\r\n                      <FiCalendar className=\"me-1\" />\r\n                      Creado: {formatDate(project.created_at)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-end\">\r\n                    <div className=\"mb-2\">\r\n                      <Button \r\n                        variant=\"outline-secondary\" \r\n                        size=\"sm\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditProject(project);\r\n                        }}\r\n                        title=\"Editar nombre para unificar proyectos\"\r\n                      >\r\n                        <FiEdit3 className=\"me-1\" />\r\n                        Editar\r\n                      </Button>\r\n                    </div>\r\n                    <div>\r\n                      <Badge bg=\"secondary\" className=\"me-2\">\r\n                        {project.quotes_count} cotización(es)\r\n                      </Badge>\r\n                      <Badge bg={project.status === 'activo' ? 'success' : 'warning'}>\r\n                        {project.status}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </>\r\n        )}\r\n\r\n        {!loading && !error && existingProjects.length === 0 && (\r\n          <Alert variant=\"success\">\r\n            <strong>No se encontraron proyectos con ese nombre.</strong>\r\n            <br />\r\n            Puedes crear un nuevo proyecto sin problemas.\r\n          </Alert>\r\n        )}\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-secondary\" onClick={onHide}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={handleCreateDifferentiated}>\r\n          <FiPlus className=\"me-1\" />\r\n          Crear \"{projectName} ({existingProjects.length + 1})\"\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleCreateNew}>\r\n          <FiPlus className=\"me-1\" />\r\n          Crear Nuevo (Nombre Original)\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProjectSelectionModal;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\nimport ModuloBase from '../components/ModuloBase';\r\nimport { createQuote, getQuote, updateQuote } from '../services/quotes';\r\nimport { getExistingServices, listProjects, createProject, searchProjectsByName } from '../services/projects';\r\nimport { getOrCreateCompany, listCompanies } from '../services/companies';\r\nimport CompanyProjectPicker from '../components/CompanyProjectPicker';\r\nimport SubserviceAutocompleteFinal from '../components/SubserviceAutocompleteFinal';\r\nimport SuccessModal from '../components/SuccessModal';\r\nimport ProjectSelectionModal from '../components/ProjectSelectionModal';\r\nimport './CotizacionInteligente.css';\r\nimport '../styles/autocomplete.css';\r\n\r\nconst emptyClient = {\r\n  company_name: '', ruc: '', contact_name: '', contact_phone: '', contact_email: '',\r\n  project_location: '', project_name: '',\r\n};\r\n\r\nconst emptyQuote = {\r\n  request_date: '', issue_date: '', commercial_name: '', commercial_phone: '', \r\n  payment_terms: 'adelantado', reference: '', reference_type: ['email', 'phone'], \r\n  igv: true, delivery_days: 4, category_main: 'laboratorio',\r\n};\r\n\r\nconst emptyItem = { code: '', description: '', norm: '', unit_price: 0, quantity: 1 };\r\n\r\nfunction computePartial(item) {\r\n  const u = Number(item.unit_price || 0);\r\n  const q = Number(item.quantity || 0);\r\n  return Number((u * q).toFixed(2));\r\n}\r\n\r\nfunction suggestedFileName(seq = 'xxx-XX', client = '') {\r\n  const clientName = (client || '').toUpperCase().trim() || 'NOMBRE DEL CLIENTE';\r\n  return `Cotización ${seq} LEM-GEOFAL-${clientName}`;\r\n}\r\n\r\nfunction generateQuoteCode() {\r\n  const year = new Date().getFullYear();\r\n  const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n  const day = String(new Date().getDate()).padStart(2, '0');\r\n  const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\r\n  return `COT-${year}${month}${day}-${random}`;\r\n}\r\n\r\nconst normalizeKey = (s = '') => (s || '')\r\n  .normalize('NFD')\r\n  .replace(/[\\u0300-\\u036f]/g, '')\r\n  .toUpperCase()\r\n  .trim();\r\n\r\nconst VARIANT_TEXTS = {\r\n  [normalizeKey('MUESTRA DE SUELO Y AGREGADO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('PROBETAS')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe proporcionar las probetas antes del ingreso a obra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('DENSIDAD DE CAMPO Y MUESTREO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- Para el ensayo de Densidad de campo, la cantidad de puntos/salida minimo 4 und.\\n- El cliente deberá de programar el servicio, Densidad de campo, con 24 horas de anticipación.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('EXTRACCIÓN DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  [normalizeKey('DIAMANTINA PARA PASES')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Extracción diamantina, con 24 horas de anticipación.\\n- El area de trabajo, zona de extraccion de diamantina, debera estar libre de interferencia.\\n- Para extraer la diamantina, se ubicara el acero con un escaneador.\\n- Movilizacion y desmovilizacion de equipos y del personal tecnico, estara a cargo de Geofal.`,\r\n  [normalizeKey('ALBAÑILERÍA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  [normalizeKey('VIGA BECKELMAN')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Ensayo de Deflexión, con 24 horas de anticipación.\\n- El area de trabajo tiene que estar habilitado.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP o MTC vigente de acuerdo con el alcance del laboratorio.\\n- Especificar las caracteristicas del camion`,\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n};\r\n\r\nconst getVariantText = (v) => {\r\n  const t = normalizeKey(v?.title || '');\r\n  if (VARIANT_TEXTS[t]) return VARIANT_TEXTS[t];\r\n  const entry = Object.entries(VARIANT_TEXTS).find(([k]) => t.includes(k) || k.includes(t));\r\n  return entry ? entry[1] : '';\r\n};\r\n\r\nexport default function CotizacionInteligente() {\r\n  const [searchParams] = useSearchParams();\r\n  const location = useLocation();\r\n  const editQuoteId = searchParams.get('edit');\r\n  \r\n  const [variants, setVariants] = useState([]);\r\n  const [variantId, setVariantId] = useState('');\r\n  const [client, setClient] = useState(emptyClient);\r\n  const [selection, setSelection] = useState({ company_id: null, project_id: null, company: null, project: null });\r\n  const [quote, setQuote] = useState(emptyQuote);\r\n  const [items, setItems] = useState([{ ...emptyItem }]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [conditionsText, setConditionsText] = useState('');\r\n  const [lastSavedId, setLastSavedId] = useState(null);\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [projectSuggestions, setProjectSuggestions] = useState([]);\r\n  const [showProjectSuggestions, setShowProjectSuggestions] = useState(false);\r\n  const [suggestedFileName, setSuggestedFileName] = useState('');\r\n  const [loadingQuote, setLoadingQuote] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  \r\n  // Estados para el buscador de clientes\r\n  const [clients, setClients] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n  const [clientSearch, setClientSearch] = useState('');\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [showClientDropdown, setShowClientDropdown] = useState(false);\r\n  \r\n  // Estado para el modal de éxito\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successData, setSuccessData] = useState(null);\r\n  \r\n  // Estados para el modal de selección de proyecto\r\n  const [showProjectSelectionModal, setShowProjectSelectionModal] = useState(false);\r\n  const [pendingProjectName, setPendingProjectName] = useState('');\r\n  const [pendingCompanyId, setPendingCompanyId] = useState(null);\r\n  const [searchTimeout, setSearchTimeout] = useState(null);\r\n  const [duplicateWarning, setDuplicateWarning] = useState(null);\r\n  \r\n  // Etiquetas predefinidas para referencia\r\n  const referenceTypes = [\r\n    { value: 'email', label: '📧 Correo electrónico', icon: '📧' },\r\n    { value: 'phone', label: '📞 Llamada telefónica', icon: '📞' },\r\n    { value: 'ticket', label: '🎯 Sistema de tickets', icon: '🎯' },\r\n    { value: 'meeting', label: '🤝 Reunión presencial', icon: '🤝' },\r\n    { value: 'form', label: '📋 Formulario web', icon: '📋' },\r\n    { value: 'referral', label: '👥 Referido', icon: '👥' },\r\n    { value: 'other', label: '📝 Otro', icon: '📝' }\r\n  ];\r\n\r\n  // Cargar variantes\r\n  useEffect(() => {\r\n    const fallback = [\r\n      { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n      { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n      { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n      { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n      { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n      { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n      { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n      { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n    ];\r\n    setVariants(fallback);\r\n  }, []);\r\n\r\n  // Cargar proyectos existentes\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await listProjects({ page: 1, limit: 100 });\r\n        const projects = response.data || [];\r\n        setAllProjects(projects);\r\n        setProjectSuggestions(projects);\r\n      } catch (e) {\r\n        console.warn('No se pudieron cargar proyectos existentes:', e);\r\n        setAllProjects([]);\r\n        setProjectSuggestions([]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Auto-completar datos del cliente cuando se selecciona\r\n  useEffect(() => {\r\n    if (selection.company) {\r\n      setClient(prev => ({\r\n        ...prev,\r\n        company_name: selection.company.name || prev.company_name,\r\n        ruc: selection.company.ruc || prev.ruc,\r\n        contact_name: selection.company.contact_name || prev.contact_name,\r\n        contact_phone: selection.company.phone || prev.contact_phone,\r\n        contact_email: selection.company.email || prev.contact_email,\r\n        project_location: selection.project?.location || prev.project_location,\r\n        project_name: selection.project?.name || prev.project_name\r\n      }));\r\n    }\r\n  }, [selection.company, selection.project]);\r\n\r\n  // Auto-completar datos del asesor comercial desde el API\r\n  useEffect(() => {\r\n    const loadUserData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n        \r\n        const response = await fetch('http://localhost:4000/api/auth/me', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.user) {\r\n            setCurrentUser(data.user); // Guardar usuario actual\r\n            setQuote(prev => ({\r\n              ...prev,\r\n              commercial_name: data.user.name || prev.commercial_name,\r\n              commercial_phone: data.user.phone || prev.commercial_phone,\r\n              // Inicializar fecha de emisión con la fecha actual si está vacía\r\n              issue_date: prev.issue_date || new Date().toISOString().slice(0, 10),\r\n              // Inicializar fecha de solicitud con la fecha actual si está vacía\r\n              request_date: prev.request_date || new Date().toISOString().slice(0, 10)\r\n            }));\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.warn('No se pudo obtener datos del usuario:', e);\r\n      }\r\n    };\r\n    \r\n    loadUserData();\r\n  }, []);\r\n\r\n\r\n  // Autocompletar desde la variante seleccionada\r\n  useEffect(() => {\r\n    if (!variantId) return;\r\n    const v = (variants || []).find(x => String(x.id) === String(variantId));\r\n    if (!v) return;\r\n    const c = v.conditions || {};\r\n    setQuote(prev => ({\r\n      ...prev,\r\n      payment_terms: c.default_payment_terms || prev.payment_terms,\r\n      igv: typeof c.default_igv === 'boolean' ? c.default_igv : prev.igv,\r\n      reference: c.default_reference || prev.reference,\r\n    }));\r\n    const extra = getVariantText(v) || v.description || '';\r\n    if (extra) setConditionsText(extra);\r\n  }, [variantId]);\r\n\r\n  const subtotal = useMemo(() => items.reduce((acc, it) => acc + computePartial(it), 0), [items]);\r\n  const igvAmount = useMemo(() => (quote.igv ? Number((subtotal * 0.18).toFixed(2)) : 0), [subtotal, quote.igv]);\r\n  const total = useMemo(() => Number((subtotal + igvAmount).toFixed(2)), [subtotal, igvAmount]);\r\n\r\n  const onAddItem = () => setItems([...items, { ...emptyItem }]);\r\n  const onRemoveItem = (idx) => setItems(items.filter((_, i) => i !== idx));\r\n  const onChangeItem = (idx, patch) => setItems(items.map((it, i) => (i === idx ? { ...it, ...patch } : it)));\r\n\r\n  // Funciones para el buscador de clientes\r\n  const fetchClients = async () => {\r\n    try {\r\n      console.log('🔍 fetchClients - Llamando a /api/companies');\r\n      const clientsData = await listCompanies({ limit: 500 });\r\n      console.log('🔍 fetchClients - Respuesta recibida:', clientsData);\r\n      \r\n      const clientsList = clientsData?.data || clientsData || [];\r\n      console.log('🔍 fetchClients - Lista de clientes:', clientsList.length, 'clientes');\r\n      \r\n      setClients(clientsList);\r\n    } catch (err) {\r\n      console.error('❌ Error fetching clients:', err);\r\n      setError('Error al cargar los clientes: ' + (err.message || 'Error desconocido'));\r\n      setClients([]);\r\n    }\r\n  };\r\n\r\n  const handleClientSearch = (searchTerm) => {\r\n    console.log('🔍 handleClientSearch - Término de búsqueda:', searchTerm);\r\n    setClientSearch(searchTerm);\r\n    \r\n    if (!searchTerm.trim()) {\r\n      setFilteredClients([]);\r\n      setShowClientDropdown(false);\r\n      return;\r\n    }\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    console.log('🔍 handleClientSearch - Búsqueda en minúsculas:', searchLower);\r\n    \r\n    const filtered = clients.filter(client => {\r\n      const nameMatch = client.name?.toLowerCase().includes(searchLower);\r\n      const rucMatch = client.ruc?.toLowerCase().includes(searchLower);\r\n      const emailMatch = client.email?.toLowerCase().includes(searchLower);\r\n      const phoneMatch = client.phone?.toLowerCase().includes(searchLower);\r\n      \r\n      // Búsqueda por palabras individuales\r\n      const nameWordsMatch = client.name?.toLowerCase().split(' ').some(word => \r\n        word.includes(searchLower)\r\n      );\r\n      \r\n      const match = nameMatch || rucMatch || emailMatch || phoneMatch || nameWordsMatch;\r\n      \r\n      if (match) {\r\n        console.log('✅ Cliente encontrado:', client.name, '- Match:', { nameMatch, nameWordsMatch, rucMatch, emailMatch, phoneMatch });\r\n      }\r\n      \r\n      return match;\r\n    });\r\n    \r\n    console.log('🔍 handleClientSearch - Resultados encontrados:', filtered.length);\r\n    setFilteredClients(filtered);\r\n    setShowClientDropdown(true);\r\n  };\r\n\r\n  const handleClientSelect = (client) => {\r\n    console.log('🔍 handleClientSelect - Cliente seleccionado:', client.name, 'ID:', client.id);\r\n    setSelectedClient(client);\r\n    setClientSearch(client.name);\r\n    setShowClientDropdown(false);\r\n    \r\n    // Llenar automáticamente los campos del cliente\r\n    setClient(prev => ({\r\n      ...prev,\r\n      company_name: client.name || '',\r\n      ruc: client.ruc || '',\r\n      contact_name: client.contact_name || '',\r\n      contact_phone: client.phone || '',\r\n      contact_email: client.email || '',\r\n      project_location: client.address || ''\r\n    }));\r\n    \r\n    console.log('✅ Campos del cliente llenados automáticamente:', {\r\n      company_name: client.name,\r\n      ruc: client.ruc,\r\n      contact_name: client.contact_name,\r\n      contact_phone: client.phone,\r\n      contact_email: client.email,\r\n      project_location: client.address\r\n    });\r\n  };\r\n\r\n  const handleClientClear = () => {\r\n    console.log('🔍 handleClientClear - Limpiando selección de cliente');\r\n    setSelectedClient(null);\r\n    setClientSearch('');\r\n    setShowClientDropdown(false);\r\n    setClient(emptyClient);\r\n  };\r\n\r\n\r\n  // Cargar cotización existente para edición\r\n  useEffect(() => {\r\n    if (editQuoteId && clients.length > 0) {\r\n      loadExistingQuote(editQuoteId);\r\n    }\r\n  }, [editQuoteId, clients]);\r\n\r\n  const loadExistingQuote = async (quoteId) => {\r\n    setLoadingQuote(true);\r\n    try {\r\n      console.log('🔄 Cargando cotización existente:', quoteId);\r\n      const existingQuote = await getQuote(quoteId);\r\n      console.log('✅ Cotización cargada:', existingQuote);\r\n      \r\n      // Si no tenemos datos del usuario, cargarlos\r\n      if (!currentUser) {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            const response = await fetch('http://localhost:4000/api/auth/me', {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              }\r\n            });\r\n            \r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              if (data.user) {\r\n                setCurrentUser(data.user);\r\n                console.log('✅ Usuario cargado para edición:', data.user);\r\n              }\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.warn('No se pudo obtener datos del usuario para edición:', e);\r\n        }\r\n      }\r\n      \r\n      // Parsear meta si viene como string JSON\r\n      if (existingQuote.meta && typeof existingQuote.meta === 'string') {\r\n        try {\r\n          existingQuote.meta = JSON.parse(existingQuote.meta);\r\n          console.log('✅ Meta parseado correctamente:', existingQuote.meta);\r\n        } catch (error) {\r\n          console.error('❌ Error parseando meta:', error);\r\n          existingQuote.meta = {};\r\n        }\r\n      }\r\n      \r\n      // Cargar datos del cliente\r\n      if (existingQuote.client_contact || existingQuote.company_name) {\r\n        // Usar company_name del JOIN con companies (razón social real) como prioridad\r\n        const companyName = existingQuote.company_name || existingQuote.client_company || existingQuote.client_contact || '';\r\n        const contactName = existingQuote.client_contact || '';\r\n        \r\n        setClient(prev => ({\r\n          ...prev,\r\n          company_name: companyName, // ✅ Usar la razón social real de la empresa\r\n          ruc: existingQuote.company_ruc || existingQuote.client_ruc || '', // ✅ Usar RUC de la empresa\r\n          contact_name: contactName,\r\n          contact_phone: existingQuote.client_phone || '',\r\n          contact_email: existingQuote.client_email || '',\r\n          project_location: existingQuote.project_location || '',\r\n          project_name: existingQuote.project_name || ''\r\n        }));\r\n        \r\n        // Configurar el campo de búsqueda de clientes con la razón social\r\n        setClientSearch(companyName);\r\n        console.log('🔍 Configurando búsqueda de cliente:', companyName);\r\n        console.log('🔍 RUC del cliente:', existingQuote.company_ruc || existingQuote.client_ruc);\r\n        console.log('🔍 Teléfono del cliente:', existingQuote.client_phone);\r\n        \r\n        // Si hay RUC, buscar el cliente en la lista\r\n        const rucToSearch = existingQuote.company_ruc || existingQuote.client_ruc;\r\n        if (rucToSearch) {\r\n          console.log('🔍 Buscando cliente por RUC:', rucToSearch);\r\n          const foundClient = clients.find(c => c.ruc === rucToSearch);\r\n          if (foundClient) {\r\n            console.log('✅ Cliente encontrado:', foundClient);\r\n            setSelectedClient(foundClient);\r\n          } else {\r\n            console.log('❌ Cliente no encontrado en la lista, creando cliente simulado');\r\n            // Si no se encuentra el cliente, crear un objeto simulado con los datos de la cotización\r\n            const simulatedClient = {\r\n              id: 'existing',\r\n              name: companyName,\r\n              ruc: rucToSearch || '',\r\n              email: existingQuote.client_email || '',\r\n              phone: existingQuote.client_phone || '',\r\n              contact_name: contactName,\r\n              address: existingQuote.project_location || ''\r\n            };\r\n            setSelectedClient(simulatedClient);\r\n            console.log('✅ Cliente simulado creado:', simulatedClient);\r\n          }\r\n        } else {\r\n          // Si no hay RUC pero hay nombre de cliente, crear cliente simulado\r\n          const simulatedClient = {\r\n            id: 'existing',\r\n            name: companyName,\r\n            ruc: '',\r\n            email: existingQuote.client_email || '',\r\n            phone: existingQuote.client_phone || '',\r\n            contact_name: contactName,\r\n            address: existingQuote.project_location || ''\r\n          };\r\n          setSelectedClient(simulatedClient);\r\n          console.log('✅ Cliente simulado creado (sin RUC):', simulatedClient);\r\n        }\r\n      }\r\n      \r\n      // Cargar datos de la cotización\r\n      const deliveryDaysValue = existingQuote.meta?.quote?.delivery_days || existingQuote.delivery_days || 4;\r\n      \r\n      setQuote(prev => ({\r\n        ...prev,\r\n        request_date: existingQuote.meta?.quote?.request_date || existingQuote.request_date || new Date().toISOString().slice(0, 10),\r\n        issue_date: existingQuote.issue_date || new Date().toISOString().slice(0, 10), // Mantener fecha original o usar actual\r\n        commercial_name: existingQuote.commercial_name || currentUser?.name || '',\r\n        commercial_phone: existingQuote.commercial_phone || currentUser?.phone || '',\r\n        payment_terms: existingQuote.payment_terms || 'adelantado',\r\n        reference: existingQuote.reference || '',\r\n        reference_type: existingQuote.reference_type || ['email', 'phone'],\r\n        igv: existingQuote.igv !== false,\r\n        delivery_days: deliveryDaysValue, // Mantener días hábiles originales\r\n        category_main: existingQuote.category_main || 'laboratorio'\r\n      }));\r\n      \r\n      // Cargar items si existen (desde meta.items)\r\n      let itemsToLoad = [];\r\n      if (existingQuote.meta && existingQuote.meta.items && existingQuote.meta.items.length > 0) {\r\n        itemsToLoad = existingQuote.meta.items;\r\n        console.log('✅ Cargando ítems desde meta.items:', itemsToLoad.length);\r\n      } else if (existingQuote.items && existingQuote.items.length > 0) {\r\n        itemsToLoad = existingQuote.items;\r\n        console.log('✅ Cargando ítems desde items directo:', itemsToLoad.length);\r\n      }\r\n      \r\n      if (itemsToLoad.length > 0) {\r\n        setItems(itemsToLoad);\r\n        console.log('📦 Ítems cargados para edición:', itemsToLoad);\r\n      } else {\r\n        console.log('📦 No hay ítems para cargar, usando ítem vacío por defecto');\r\n        setItems([{ ...emptyItem }]);\r\n      }\r\n      \r\n      // Cargar variante si existe\r\n      if (existingQuote.variant_id) {\r\n        setVariantId(existingQuote.variant_id);\r\n        console.log('🔄 Variante cargada:', existingQuote.variant_id);\r\n      }\r\n      \r\n      // Cargar condiciones específicas si existen\r\n      if (existingQuote.meta && existingQuote.meta.conditions_text) {\r\n        setConditionsText(existingQuote.meta.conditions_text);\r\n        console.log('📝 Condiciones específicas cargadas');\r\n      }\r\n      \r\n      // ✅ NUEVO: Cargar project_id para preservar el proyecto original\r\n      if (existingQuote.project_id) {\r\n        setSelection(prev => ({\r\n          ...prev,\r\n          project_id: existingQuote.project_id\r\n        }));\r\n        console.log('✅ Project ID cargado para edición:', existingQuote.project_id);\r\n      }\r\n      \r\n      console.log('✅ Datos de cotización cargados para edición');\r\n    } catch (error) {\r\n      console.error('❌ Error cargando cotización:', error);\r\n      setError('Error al cargar la cotización existente: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoadingQuote(false);\r\n    }\r\n  };\r\n\r\n  // Cargar clientes al montar el componente\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // Manejar cliente pre-seleccionado desde la navegación\r\n  useEffect(() => {\r\n    if (location.state?.selectedClient && clients.length > 0) {\r\n      const preSelectedClient = location.state.selectedClient;\r\n      console.log('🎯 Cliente pre-seleccionado desde navegación:', preSelectedClient);\r\n      \r\n      // Buscar el cliente en la lista cargada\r\n      const foundClient = clients.find(c => c.id === preSelectedClient.id);\r\n      if (foundClient) {\r\n        console.log('✅ Cliente encontrado en la lista, pre-llenando datos');\r\n        setSelectedClient(foundClient);\r\n        setClientSearch(foundClient.name);\r\n        \r\n        // Pre-llenar los campos del cliente\r\n        setClient(prev => ({\r\n          ...prev,\r\n          company_name: foundClient.name || '',\r\n          ruc: foundClient.ruc || foundClient.dni || '',\r\n          contact_name: foundClient.contact_name || '',\r\n          contact_phone: foundClient.phone || '',\r\n          contact_email: foundClient.email || '',\r\n          project_location: foundClient.address || ''\r\n        }));\r\n      } else {\r\n        console.log('⚠️ Cliente no encontrado en la lista, usando datos de navegación');\r\n        // Si no se encuentra en la lista, usar los datos de navegación\r\n        setSelectedClient(preSelectedClient);\r\n        setClientSearch(preSelectedClient.name);\r\n        \r\n        // Pre-llenar los campos del cliente\r\n        setClient(prev => ({\r\n          ...prev,\r\n          company_name: preSelectedClient.name || '',\r\n          ruc: preSelectedClient.ruc || preSelectedClient.dni || '',\r\n          contact_name: preSelectedClient.contact_name || '',\r\n          contact_phone: preSelectedClient.phone || '',\r\n          contact_email: preSelectedClient.email || '',\r\n          project_location: preSelectedClient.address || ''\r\n        }));\r\n      }\r\n    }\r\n  }, [location.state?.selectedClient, clients]);\r\n\r\n  // Cleanup timeout al desmontar el componente\r\n  useEffect(() => {\r\n    return () => {\r\n      if (searchTimeout) {\r\n        clearTimeout(searchTimeout);\r\n      }\r\n    };\r\n  }, [searchTimeout]);\r\n\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      if (!client.company_name) {\r\n        throw new Error('Debe ingresar al menos el nombre de la empresa');\r\n      }\r\n      \r\n      let projectId = selection.project?.id || selection.project_id;\r\n      let companyId = selection.company?.id;\r\n      \r\n      // Si no hay empresa seleccionada, crear una automáticamente\r\n      if (!companyId) {\r\n        if (!client.ruc) {\r\n          throw new Error('Debe ingresar el RUC de la empresa');\r\n        }\r\n        \r\n        // Obtener o crear empresa automáticamente\r\n        const newCompany = await getOrCreateCompany({\r\n          type: 'empresa',\r\n          ruc: client.ruc,\r\n          name: client.company_name,\r\n          address: client.project_location || '',\r\n          email: client.contact_email || '',\r\n          phone: client.contact_phone || '',\r\n          contact_name: client.contact_name || '',\r\n          city: client.project_location || '',\r\n          sector: 'servicios'\r\n        });\r\n        \r\n        companyId = newCompany.id;\r\n        console.log('✅ Empresa obtenida/creada:', newCompany);\r\n      }\r\n      \r\n      // Si no hay proyecto seleccionado, crear uno automáticamente\r\n      if (!projectId) {\r\n        // Crear proyecto automáticamente con vendedor asignado\r\n        const newProject = await createProject({\r\n          company_id: companyId,\r\n          name: client.project_name || `Proyecto ${client.company_name}`,\r\n          location: client.project_location || 'Por definir',\r\n          contact_name: client.contact_name,\r\n          contact_phone: client.contact_phone,\r\n          contact_email: client.contact_email,\r\n          status: 'activo',\r\n          priority: 'normal',\r\n          // Asignar automáticamente el vendedor que creó la cotización\r\n          vendedor_id: currentUser?.id || null,\r\n          // Si es categoría laboratorio, permitir asignar usuario de laboratorio\r\n          requiere_laboratorio: quote.category_main === 'laboratorio',\r\n          laboratorio_status: quote.category_main === 'laboratorio' ? 'pendiente' : 'no_requerido'\r\n        });\r\n        \r\n        projectId = newProject.id;\r\n        console.log('✅ Proyecto creado automáticamente:', newProject);\r\n        console.log('👤 Vendedor asignado:', currentUser?.name);\r\n      }\r\n      \r\n      const quoteCode = generateQuoteCode();\r\n      \r\n      const payload = {\r\n        project_id: projectId,\r\n        variant_id: variantId || null,\r\n        client_contact: client.contact_name,\r\n        client_email: client.contact_email,\r\n        client_phone: client.contact_phone,\r\n        client_company: client.company_name, // ✅ NUEVO: Razón social de la empresa\r\n        client_ruc: client.ruc, // ✅ NUEVO: RUC de la empresa\r\n        project_name: client.project_name, // ✅ NUEVO: Nombre del proyecto\r\n        project_location: client.project_location, // ✅ NUEVO: Ubicación del proyecto\r\n        request_date: quote.request_date || new Date().toISOString().slice(0, 10), // ✅ NUEVO: Fecha de solicitud\r\n        issue_date: quote.issue_date || new Date().toISOString().slice(0, 10),\r\n        subtotal,\r\n        igv: igvAmount,\r\n        total,\r\n        status: 'borrador',\r\n        reference: quote.reference,\r\n        reference_type: JSON.stringify(quote.reference_type),\r\n        category_main: quote.category_main, // ✅ NUEVO: Categoría principal\r\n        quote_code: quoteCode, // ✅ NUEVO: Código único\r\n        meta: JSON.stringify({\r\n          customer: client,\r\n          quote: {\r\n            ...quote,\r\n            request_date: quote.request_date || new Date().toISOString().slice(0, 10),\r\n            delivery_days: quote.delivery_days || 4,\r\n            reference: quote.reference,\r\n            category_main: quote.category_main, // ✅ NUEVO: Categoría en meta\r\n            quote_code: quoteCode // ✅ NUEVO: Código en meta\r\n          },\r\n          items: items, // Agregar ítems al meta\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms,\r\n          file_name: suggestedFileName || `Cotización ${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}${String(new Date().getDate()).padStart(2, '0')} LEM-GEOFAL-${client.company_name?.toUpperCase() || 'CLIENTE'}`,\r\n        })\r\n      };\r\n      \r\n      let saved;\r\n      let successMessage;\r\n      \r\n      if (editQuoteId) {\r\n        // Actualizar cotización existente\r\n        saved = await updateQuote(editQuoteId, payload);\r\n        successMessage = 'Cotización actualizada exitosamente';\r\n        console.log('✅ Cotización actualizada:', saved);\r\n      } else {\r\n        // Crear nueva cotización\r\n        saved = await createQuote(payload);\r\n        successMessage = 'Cotización creada exitosamente';\r\n        console.log('✅ Nueva cotización creada:', saved);\r\n      }\r\n      \r\n      // Mostrar modal de éxito con los datos\r\n      setSuccessData({\r\n        code: quoteCode,\r\n        category: quote.category_main === 'laboratorio' ? '🧪 Laboratorio' : '⚙️ Ingeniería',\r\n        itemsCount: items.length,\r\n        total: total.toLocaleString(),\r\n        isEdit: !!editQuoteId,\r\n        message: successMessage\r\n      });\r\n      setShowSuccessModal(true);\r\n      setLastSavedId(saved.id);\r\n    } catch (e) {\r\n      console.error('Error:', e);\r\n      setError(e.message || 'Error al crear cotización');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const exportFile = async (type) => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de exportar');\r\n      \r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/${type}`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      \r\n      // Obtener token de autenticación\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No se encontró token de autenticación');\r\n      }\r\n      \r\n      // Preparar datos del formulario actual\r\n      const formData = {\r\n        variant_id: variantId,\r\n        delivery_days: quote.delivery_days,\r\n        meta: {\r\n          customer: client,\r\n          quote: {\r\n            ...quote,\r\n            delivery_days: quote.delivery_days,\r\n            variant_id: variantId\r\n          },\r\n          items: items,\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms\r\n        },\r\n        items: items\r\n      };\r\n      \r\n      console.log('🔍 exportFile - Enviando datos:', formData);\r\n      \r\n      // Realizar la petición con los datos del formulario\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Obtener el blob del archivo\r\n      const blob = await response.blob();\r\n      \r\n      // Crear URL temporal y descargar\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.download = `cotizacion-${id}.${type === 'excel' ? 'xlsx' : 'pdf'}`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n      \r\n    } catch (e) {\r\n      console.error('Error al exportar:', e);\r\n      alert(`No se pudo exportar: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  const exportDraft = async () => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de generar el borrador');\r\n      \r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/pdf-draft`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      \r\n      // Obtener token de autenticación\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No se encontró token de autenticación');\r\n      }\r\n      \r\n      // Preparar datos del formulario actual\r\n      const formData = {\r\n        variant_id: variantId,\r\n        delivery_days: quote.delivery_days,\r\n        meta: {\r\n          customer: client,\r\n          quote: {\r\n            ...quote,\r\n            delivery_days: quote.delivery_days,\r\n            variant_id: variantId\r\n          },\r\n          items: items,\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms\r\n        },\r\n        items: items\r\n      };\r\n      \r\n      console.log('🔍 exportDraft - Enviando datos:', formData);\r\n      \r\n      // Realizar la petición con los datos del formulario\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Obtener el blob del archivo\r\n      const blob = await response.blob();\r\n      \r\n      // Crear URL temporal y descargar\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      // Generar nombre en formato COT-DDMMYY-YY\r\n      const now = new Date();\r\n      const day = String(now.getDate()).padStart(2, '0');\r\n      const month = String(now.getMonth() + 1).padStart(2, '0');\r\n      const year = String(now.getFullYear()).slice(-2);\r\n      const fileName = `COT-${day}${month}${year}-${year}.pdf`;\r\n      \r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n      \r\n    } catch (e) {\r\n      console.error('Error al exportar borrador:', e);\r\n      alert(`No se pudo exportar borrador: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  // Función para detectar proyectos existentes cuando el usuario termina de escribir\r\n  const handleProjectNameChange = (value) => {\r\n    setClient({...client, project_name: value});\r\n    \r\n    // Detectar automáticamente si hay proyectos duplicados\r\n    if (value && value.trim().length >= 3) {\r\n      const companyId = selection.company?.id || selectedClient?.id;\r\n      if (companyId) {\r\n        // Verificar si hay proyectos existentes con este nombre\r\n        checkForDuplicateProjects(value.trim(), companyId);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para verificar proyectos duplicados automáticamente\r\n  const checkForDuplicateProjects = async (projectName, companyId) => {\r\n    try {\r\n      const projects = await searchProjectsByName(projectName, companyId);\r\n      if (projects && projects.length > 0) {\r\n        // Mostrar advertencia visual\r\n        setDuplicateWarning({\r\n          count: projects.length,\r\n          suggestedName: `${projectName} (${projects.length + 1})`\r\n        });\r\n      } else {\r\n        setDuplicateWarning(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verificando proyectos duplicados:', error);\r\n      setDuplicateWarning(null);\r\n    }\r\n  };\r\n\r\n  // Función para verificar proyectos existentes manualmente\r\n  const checkExistingProjects = async () => {\r\n    const projectName = client.project_name?.trim();\r\n    \r\n    if (!projectName || projectName.length < 3) {\r\n      alert('Por favor ingresa al menos 3 caracteres en el nombre del proyecto');\r\n      return;\r\n    }\r\n    \r\n    // Buscar la empresa seleccionada en diferentes lugares\r\n    let companyId = selection.company?.id;\r\n    \r\n    // Si no está en selection, buscar en selectedClient\r\n    if (!companyId && selectedClient) {\r\n      companyId = selectedClient.id;\r\n    }\r\n    \r\n    // Si aún no hay companyId, mostrar error más específico\r\n    if (!companyId) {\r\n      alert('Por favor selecciona una empresa primero usando el buscador de clientes');\r\n      return;\r\n    }\r\n    \r\n    console.log('🔍 Verificando proyectos existentes para:', projectName, 'empresa:', companyId);\r\n    console.log('🔍 selectedClient:', selectedClient);\r\n    console.log('🔍 selection.company:', selection.company);\r\n    \r\n    setPendingProjectName(projectName);\r\n    setPendingCompanyId(companyId);\r\n    setShowProjectSelectionModal(true);\r\n  };\r\n\r\n  // Función para continuar con un proyecto existente\r\n  const handleSelectExistingProject = (project) => {\r\n    console.log('🔄 Seleccionando proyecto existente:', project);\r\n    \r\n    setSelection(prev => ({\r\n      ...prev,\r\n      project: project,\r\n      project_id: project.id\r\n    }));\r\n    \r\n    // Actualizar los datos del cliente con la información del proyecto\r\n    setClient(prev => ({\r\n      ...prev,\r\n      project_name: project.name,\r\n      project_location: project.location || prev.project_location\r\n    }));\r\n    \r\n    // Limpiar la advertencia de duplicados\r\n    setDuplicateWarning(null);\r\n    \r\n    console.log('✅ Proyecto existente seleccionado y estado actualizado:', project);\r\n  };\r\n\r\n  // Función para crear un nuevo proyecto\r\n  const handleCreateNewProject = (differentiatedName = null) => {\r\n    console.log('🔄 Creando nuevo proyecto:', differentiatedName);\r\n    \r\n    // Limpiar la selección de proyecto para que se cree uno nuevo\r\n    setSelection(prev => ({\r\n      ...prev,\r\n      project: null,\r\n      project_id: null\r\n    }));\r\n    \r\n    // Si se proporciona un nombre diferenciado, actualizarlo en el campo\r\n    if (differentiatedName) {\r\n      setClient(prev => ({\r\n        ...prev,\r\n        project_name: differentiatedName\r\n      }));\r\n      console.log('✅ Se creará un nuevo proyecto con nombre diferenciado:', differentiatedName);\r\n    } else {\r\n      console.log('✅ Se creará un nuevo proyecto con nombre original');\r\n    }\r\n    \r\n    // Limpiar la advertencia de duplicados\r\n    setDuplicateWarning(null);\r\n  };\r\n\r\n  return (\r\n    <ModuloBase \r\n      titulo={editQuoteId ? \"📝 Editar Cotización\" : \"📋 Cotización Inteligente\"} \r\n      descripcion={editQuoteId ? \"Edita una cotización existente con nueva fecha\" : \"Formulario unificado para crear cotizaciones de forma rápida e intuitiva\"}\r\n    >\r\n      {loadingQuote && (\r\n        <div className=\"alert alert-info\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"spinner-border spinner-border-sm me-2\" role=\"status\">\r\n              <span className=\"visually-hidden\">Cargando...</span>\r\n            </div>\r\n            Cargando cotización existente...\r\n          </div>\r\n        </div>\r\n      )}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n      <form onSubmit={onSubmit} className=\"intelligent-quote-form\">\r\n        <div className=\"alert alert-light border mt-3 intelligent-intro\">\r\n          <h5>🚀 Flujo Simplificado</h5>\r\n          <p className=\"mb-0\">Completa los datos del cliente, proyecto y cotización. Usa el botón \"💾 GUARDAR COTIZACIÓN\" para guardar tu trabajo.</p>\r\n        </div>\r\n\r\n        {/* Sección Cliente */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">🏢</span>\r\n            <h4>CLIENTE</h4>\r\n            <span className=\"section-status\">\r\n              {client.company_name ? '✅ Cliente configurado' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            {/* Buscador de Clientes */}\r\n            <div className=\"row g-3 mb-4\">\r\n              <div className=\"col-md-12\">\r\n                <label className=\"form-label\">Buscar Cliente Existente</label>\r\n                <div className=\"position-relative\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\" \r\n                    value={clientSearch}\r\n                    onChange={(e) => handleClientSearch(e.target.value)}\r\n                    onFocus={() => setShowClientDropdown(true)}\r\n                    placeholder=\"Buscar por nombre, RUC, email o teléfono...\"\r\n                  />\r\n                  {selectedClient && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-secondary btn-sm position-absolute end-0 top-50 translate-middle-y me-2\"\r\n                      onClick={handleClientClear}\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {clientSearch && showClientDropdown && filteredClients.length > 0 && (\r\n                  <div className=\"border rounded mt-2\" style={{maxHeight: '200px', overflowY: 'auto'}}>\r\n                    <div className=\"p-2 bg-light border-bottom\">\r\n                      <small className=\"text-muted\">\r\n                        {filteredClients.length} cliente{filteredClients.length !== 1 ? 's' : ''} encontrado{filteredClients.length !== 1 ? 's' : ''}\r\n                      </small>\r\n                    </div>\r\n                    {filteredClients.map((clientItem) => (\r\n                      <div\r\n                        key={clientItem.id}\r\n                        className=\"p-2 border-bottom cursor-pointer hover-bg-light\"\r\n                        onClick={() => handleClientSelect(clientItem)}\r\n                        style={{cursor: 'pointer'}}\r\n                      >\r\n                        <div className=\"fw-bold\">{clientItem.name}</div>\r\n                        <small className=\"text-muted\">\r\n                          RUC: {clientItem.ruc} | Email: {clientItem.email}\r\n                          {clientItem.phone && ` | Tel: ${clientItem.phone}`}\r\n                        </small>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {clientSearch && showClientDropdown && filteredClients.length === 0 && (\r\n                  <div className=\"border rounded mt-2 p-3 text-center\">\r\n                    <small className=\"text-muted\">\r\n                      No se encontraron clientes con \"{clientSearch}\"\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {selectedClient && (\r\n                  <div className=\"mt-2 p-2 bg-light rounded\">\r\n                    <strong>Cliente seleccionado:</strong> {selectedClient.name}\r\n                    <br />\r\n                    <small className=\"text-muted\">\r\n                      RUC: {selectedClient.ruc} | Email: {selectedClient.email}\r\n                      {selectedClient.phone && ` | Tel: ${selectedClient.phone}`}\r\n                    </small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Campos del Cliente */}\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Empresa</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.company_name} \r\n                  onChange={e => setClient({...client, company_name: e.target.value})} \r\n                  required \r\n                  placeholder=\"Nombre de la empresa\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">R.U.C. *</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.ruc} \r\n                  onChange={e => setClient({...client, ruc: e.target.value})} \r\n                  placeholder=\"RUC de la empresa\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Contacto</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.contact_name} \r\n                  onChange={e => setClient({...client, contact_name: e.target.value})} \r\n                  required \r\n                  placeholder=\"Nombre del contacto\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Teléfono</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.contact_phone} \r\n                  onChange={e => setClient({...client, contact_phone: e.target.value})} \r\n                  placeholder=\"Teléfono del contacto\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"form-label\">Correo</label>\r\n                <input \r\n                  type=\"email\" \r\n                  className=\"form-control\" \r\n                  value={client.contact_email} \r\n                  onChange={e => setClient({...client, contact_email: e.target.value})} \r\n                  placeholder=\"Correo del contacto\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sección Proyecto */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">📁</span>\r\n            <h4>PROYECTO</h4>\r\n            <span className=\"section-status\">\r\n              {client.project_name ? '✅ Proyecto configurado' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">\r\n                  Nombre del Proyecto\r\n                  {selection.project && (\r\n                    <span className=\"badge bg-success ms-2\">\r\n                      ✅ Proyecto existente seleccionado\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <input \r\n                    className={`form-control ${duplicateWarning ? 'is-warning' : selection.project ? 'is-success' : ''}`}\r\n                    value={client.project_name} \r\n                    onChange={e => handleProjectNameChange(e.target.value)} \r\n                    required \r\n                    placeholder=\"Nombre del proyecto\"\r\n                  />\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={checkExistingProjects}\r\n                    title=\"Verificar si ya existen proyectos con este nombre\"\r\n                  >\r\n                    🔍 Verificar\r\n                  </button>\r\n                </div>\r\n                {duplicateWarning && (\r\n                  <div className=\"alert alert-warning mt-2 mb-0\">\r\n                    <strong>⚠️ Advertencia:</strong> Se encontraron {duplicateWarning.count} proyecto(s) con este nombre.\r\n                    <br />\r\n                    <small>\r\n                      Sugerencia: <code>{duplicateWarning.suggestedName}</code>\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-sm btn-outline-warning ms-2\"\r\n                        onClick={() => {\r\n                          setClient(prev => ({\r\n                            ...prev,\r\n                            project_name: duplicateWarning.suggestedName\r\n                          }));\r\n                          setDuplicateWarning(null);\r\n                        }}\r\n                      >\r\n                        Usar sugerencia\r\n                      </button>\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {selection.project && (\r\n                  <div className=\"alert alert-success mt-2 mb-0\">\r\n                    <div className=\"d-flex justify-content-between align-items-start\">\r\n                      <div>\r\n                        <strong>✅ Proyecto existente seleccionado:</strong> {selection.project.name}\r\n                        <br />\r\n                        <small>\r\n                          Ubicación: {selection.project.location || 'No especificada'} | \r\n                          Vendedor: {selection.project.vendedor_name || 'No asignado'} |\r\n                          Cotizaciones: {selection.project.quotes_count || 0}\r\n                        </small>\r\n                      </div>\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-sm btn-outline-danger\"\r\n                        onClick={() => {\r\n                          setSelection(prev => ({\r\n                            ...prev,\r\n                            project: null,\r\n                            project_id: null\r\n                          }));\r\n                          console.log('🔄 Proyecto existente deseleccionado');\r\n                        }}\r\n                        title=\"Deseleccionar proyecto existente\"\r\n                      >\r\n                        ✕\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Ubicación</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={client.project_location} \r\n                  onChange={e => setClient({...client, project_location: e.target.value})} \r\n                  placeholder=\"Ubicación del proyecto\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sección Cotización */}\r\n        <div className=\"intelligent-section\">\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">📋</span>\r\n            <h4>COTIZACIÓN</h4>\r\n            <span className=\"section-status\">\r\n              {variantId ? '✅ Variante seleccionada' : '⏳ Pendiente'}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Fecha de Solicitud</label>\r\n                <input \r\n                  type=\"date\" \r\n                  className=\"form-control\" \r\n                  value={quote.request_date} \r\n                  onChange={e => setQuote({...quote, request_date: e.target.value})} \r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Fecha de Emisión</label>\r\n                <input \r\n                  type=\"date\" \r\n                  className=\"form-control\" \r\n                  value={quote.issue_date} \r\n                  onChange={e => setQuote({...quote, issue_date: e.target.value})} \r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Comercial</label>\r\n                <input \r\n                  className=\"form-control\" \r\n                  value={quote.commercial_name} \r\n                  onChange={e => setQuote({...quote, commercial_name: e.target.value})} \r\n                  placeholder=\"Nombre del comercial\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Teléfono Comercial</label>\r\n                <input \r\n                  type=\"tel\" \r\n                  className=\"form-control\" \r\n                  value={quote.commercial_phone} \r\n                  onChange={e => setQuote({...quote, commercial_phone: e.target.value})} \r\n                  required \r\n                  placeholder=\"Teléfono del comercial\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Variante</label>\r\n                <select \r\n                  className=\"form-select\" \r\n                  value={variantId} \r\n                  onChange={e => setVariantId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Seleccionar variante</option>\r\n                  {(variants || []).map(v => (\r\n                    <option key={v.id} value={v.id}>{v.code} - {v.title}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Forma de Pago</label>\r\n                <select \r\n                  className=\"form-select\" \r\n                  value={quote.payment_terms} \r\n                  onChange={e => setQuote({...quote, payment_terms: e.target.value})}\r\n                >\r\n                  <option value=\"adelantado\">Adelantado</option>\r\n                  <option value=\"50%\">Adelanto 50% y saldo previo al informe</option>\r\n                  <option value=\"credito7\">Crédito 7 días con OS</option>\r\n                  <option value=\"credito15\">Crédito 15 días con OS</option>\r\n                  <option value=\"credito30\">Crédito 30 días con OS</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Días Hábiles</label>\r\n                <input \r\n                  key={`delivery-days-${quote.delivery_days}`}\r\n                  type=\"number\" \r\n                  className=\"form-control\" \r\n                  value={quote.delivery_days || 4} \r\n                  onChange={e => {\r\n                    const newValue = parseInt(e.target.value) || 4;\r\n                    setQuote(prev => ({...prev, delivery_days: newValue}));\r\n                  }} \r\n                  min=\"1\"\r\n                  max=\"30\"\r\n                />\r\n                <small className=\"text-muted\">Estado actual: {quote.delivery_days}</small>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-check mt-4\">\r\n                  <input \r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    id=\"igv\" \r\n                    checked={quote.igv} \r\n                    onChange={e => setQuote({...quote, igv: e.target.checked})}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"igv\">\r\n                    Aplicar IGV 18%\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Referencia */}\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label\">Referencia</label>\r\n              <input \r\n                className=\"form-control\" \r\n                value={quote.reference} \r\n                onChange={e => setQuote({...quote, reference: e.target.value})} \r\n                placeholder=\"SEGÚN LO SOLICITADO VÍA CORREO ELECTRÓNICO / LLAMADA TELEFÓNICA\"\r\n              />\r\n            </div>\r\n\r\n            {/* Selector de Categoría Principal */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"form-label\">Categoría Principal</label>\r\n              <div className=\"row g-3\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-check\">\r\n                    <input \r\n                      className=\"form-check-input\" \r\n                      type=\"radio\" \r\n                      name=\"categoryMain\" \r\n                      id=\"laboratorio\" \r\n                      value=\"laboratorio\"\r\n                      checked={quote.category_main === 'laboratorio'}\r\n                      onChange={e => setQuote({...quote, category_main: e.target.value})}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"laboratorio\">\r\n                      🧪 Laboratorio\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-check\">\r\n                    <input \r\n                      className=\"form-check-input\" \r\n                      type=\"radio\" \r\n                      name=\"categoryMain\" \r\n                      id=\"ingenieria\" \r\n                      value=\"ingenieria\"\r\n                      checked={quote.category_main === 'ingenieria'}\r\n                      onChange={e => setQuote({...quote, category_main: e.target.value})}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"ingenieria\">\r\n                      ⚙️ Ingeniería\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"alert alert-info mt-2\">\r\n                <small>\r\n                  <strong>💡 Importante:</strong> Selecciona la categoría principal para que el sistema pueda categorizar automáticamente los ítems y alimentar el embudo de ventas.\r\n                </small>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Condiciones específicas */}\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label\">Condiciones Específicas</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows={4}\r\n                placeholder=\"Las condiciones se auto-completan según la variante seleccionada\"\r\n                value={conditionsText}\r\n                onChange={e => setConditionsText(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            {/* Ítems */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"form-label\">Ítems de la Cotización</label>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped\">\r\n                  <thead className=\"table-dark\">\r\n                    <tr>\r\n                      <th style={{width: '10%'}}>Código</th>\r\n                      <th style={{width: '35%'}}>Descripción</th>\r\n                      <th style={{width: '15%'}}>Norma</th>\r\n                      <th style={{width: '12%'}}>Precio Unit.</th>\r\n                      <th style={{width: '10%'}}>Cantidad</th>\r\n                      <th style={{width: '12%'}}>Parcial</th>\r\n                      <th style={{width: '6%'}}></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items.map((it, idx) => (\r\n                      <tr key={idx}>\r\n                        <td>\r\n                          <input \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.code} \r\n                            onChange={e => onChangeItem(idx, { code: e.target.value })}\r\n                            placeholder=\"Código\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <SubserviceAutocompleteFinal\r\n                            value={it.description}\r\n                            onChange={(value) => onChangeItem(idx, { description: value })}\r\n                            onSelect={(subservice) => {\r\n                              if (subservice) {\r\n                                onChangeItem(idx, {\r\n                                  code: subservice.codigo,\r\n                                  description: subservice.descripcion,\r\n                                  norm: subservice.norma,\r\n                                  unit_price: subservice.precio\r\n                                });\r\n                              }\r\n                            }}\r\n                            onDependenciesSelect={(dependencyItems) => {\r\n                              console.log('🚀 Agregando dependencias automáticamente:', dependencyItems);\r\n                              \r\n                              // Agregar ensayos dependientes automáticamente\r\n                              const newItems = dependencyItems.map(dep => ({\r\n                                ...emptyItem,\r\n                                code: dep.codigo,\r\n                                description: dep.descripcion,\r\n                                norm: dep.norma,\r\n                                unit_price: dep.precio,\r\n                                quantity: 1\r\n                              }));\r\n                              \r\n                              console.log('📦 Nuevos items a agregar:', newItems);\r\n                              \r\n                              // Agregar los nuevos items después del item actual\r\n                              const currentItems = [...items];\r\n                              currentItems.splice(idx + 1, 0, ...newItems);\r\n                              setItems(currentItems);\r\n                              \r\n                              console.log('✅ Items actualizados:', currentItems);\r\n                            }}\r\n                            placeholder=\"Buscar servicio...\"\r\n                            size=\"sm\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.norm} \r\n                            onChange={e => onChangeItem(idx, { norm: e.target.value })}\r\n                            placeholder=\"Norma\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            type=\"number\" \r\n                            step=\"0.01\" \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.unit_price} \r\n                            onChange={e => onChangeItem(idx, { unit_price: e.target.value })}\r\n                            placeholder=\"0.00\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input \r\n                            type=\"number\" \r\n                            className=\"form-control form-control-sm\" \r\n                            value={it.quantity} \r\n                            onChange={e => onChangeItem(idx, { quantity: e.target.value })}\r\n                            min=\"1\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"fw-bold text-success\">S/ {computePartial(it).toFixed(2)}</span>\r\n                        </td>\r\n                        <td>\r\n                          <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-sm btn-outline-danger\" \r\n                            onClick={() => onRemoveItem(idx)} \r\n                            disabled={items.length === 1}\r\n                            title=\"Eliminar ítem\"\r\n                          >\r\n                            🗑️\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onAddItem}>\r\n                  ➕ Agregar ítem\r\n                </button>\r\n                <div className=\"text-end\">\r\n                  <div className=\"h6 mb-1\">Subtotal: <span className=\"text-primary\">S/ {subtotal.toFixed(2)}</span></div>\r\n                  <div className=\"h6 mb-1\">IGV 18%: <span className=\"text-primary\">S/ {igvAmount.toFixed(2)}</span></div>\r\n                  <div className=\"h5 mb-0\">Total: <span className=\"text-success fw-bold\">S/ {total.toFixed(2)}</span></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Botones de acción */}\r\n        <div className=\"intelligent-actions\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-success btn-lg\"\r\n            disabled={saving || !client.company_name || !client.ruc}\r\n          >\r\n            {saving ? (editQuoteId ? '🔄 Actualizando...' : '💾 Guardando...') : (editQuoteId ? '🔄 GUARDAR CAMBIOS' : '💾 CREAR COTIZACIÓN')}\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-warning btn-lg\"\r\n            onClick={exportDraft}\r\n            disabled={!lastSavedId}\r\n          >\r\n            📄 Generar cotización\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      {/* Modal de éxito */}\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        data={successData}\r\n        buttonText=\"Aceptar\"\r\n      />\r\n\r\n      {/* Modal de selección de proyecto */}\r\n      <ProjectSelectionModal\r\n        show={showProjectSelectionModal}\r\n        onHide={() => setShowProjectSelectionModal(false)}\r\n        projectName={pendingProjectName}\r\n        companyId={pendingCompanyId}\r\n        onSelectExisting={handleSelectExistingProject}\r\n        onCreateNew={handleCreateNewProject}\r\n      />\r\n    </ModuloBase>\r\n  );\r\n}\r\n"],"names":["extractDependenciesFromComment","comentario","dependencies","pattern","match","code","formatDependenciesForDisplay","d","firstThree","remaining","SubserviceAutocompleteFinal","value","onChange","onSelect","onDependenciesSelect","placeholder","disabled","size","searchTerm","setSearchTerm","useState","isOpen","setIsOpen","dropdownPosition","setDropdownPosition","inputRef","useRef","dropdownRef","debouncedTerm","setDebouncedTerm","useEffect","timer","data","isLoading","useQuery","searchSubservices","results","updatePosition","rect","handleScroll","handleResize","handleInputChange","e","newValue","handleFocus","handleItemSelect","item","dependencyItems","result","handleClear","handleClickOutside","formatPrice","precio","getServiceColor","serviceName","dropdownContent","jsxs","jsx","Spinner","hasDependencies","Badge","FiLink","FiFileText","FiPlus","FiDollarSign","Fragment","Form","FiX","FiSearch","ReactDOM","ProjectSelectionModal","show","onHide","projectName","companyId","onSelectExisting","onCreateNew","existingProjects","setExistingProjects","loading","setLoading","error","setError","searchExistingProjects","projects","searchProjectsByName","err","handleSelectExisting","project","handleCreateNew","handleCreateDifferentiated","nextNumber","differentiatedName","handleEditProject","newName","formatDate","dateString","Modal","FiFolder","Alert","ListGroup","FiMapPin","FiUser","FiCalendar","Button","FiEdit3","emptyClient","emptyQuote","emptyItem","computePartial","u","q","generateQuoteCode","year","month","day","random","normalizeKey","s","VARIANT_TEXTS","getVariantText","v","t","entry","k","CotizacionInteligente","searchParams","useSearchParams","location","useLocation","editQuoteId","variants","setVariants","variantId","setVariantId","client","setClient","selection","setSelection","quote","setQuote","items","setItems","saving","setSaving","conditionsText","setConditionsText","lastSavedId","setLastSavedId","allProjects","setAllProjects","projectSuggestions","setProjectSuggestions","showProjectSuggestions","setShowProjectSuggestions","suggestedFileName","setSuggestedFileName","loadingQuote","setLoadingQuote","currentUser","setCurrentUser","clients","setClients","filteredClients","setFilteredClients","clientSearch","setClientSearch","selectedClient","setSelectedClient","showClientDropdown","setShowClientDropdown","showSuccessModal","setShowSuccessModal","successData","setSuccessData","showProjectSelectionModal","setShowProjectSelectionModal","pendingProjectName","setPendingProjectName","pendingCompanyId","setPendingCompanyId","searchTimeout","setSearchTimeout","duplicateWarning","setDuplicateWarning","fallback","listProjects","prev","_a","_b","token","response","x","c","extra","subtotal","useMemo","acc","it","igvAmount","total","onAddItem","onRemoveItem","idx","_","i","onChangeItem","patch","fetchClients","clientsData","listCompanies","clientsList","handleClientSearch","searchLower","filtered","nameMatch","rucMatch","emailMatch","phoneMatch","nameWordsMatch","word","handleClientSelect","handleClientClear","loadExistingQuote","quoteId","existingQuote","getQuote","companyName","contactName","rucToSearch","foundClient","simulatedClient","deliveryDaysValue","itemsToLoad","preSelectedClient","onSubmit","projectId","newCompany","getOrCreateCompany","newProject","createProject","quoteCode","payload","_c","saved","successMessage","updateQuote","createQuote","exportDraft","id","base","path","url","formData","blob","downloadUrl","link","now","fileName","handleProjectNameChange","checkForDuplicateProjects","checkExistingProjects","handleSelectExistingProject","handleCreateNewProject","ModuloBase","clientItem","subservice","newItems","dep","currentItems","SuccessModal"],"mappings":"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"}