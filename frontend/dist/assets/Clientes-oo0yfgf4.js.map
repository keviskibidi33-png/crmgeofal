{"version":3,"file":"Clientes-oo0yfgf4.js","sources":["../../src/pages/Clientes.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Badge, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { FiPlus, FiEdit, FiTrash2, FiUser, FiHome, FiMail, FiPhone, FiMapPin, FiUsers, FiHome as FiBuilding, FiFolderPlus } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport ModalForm from '../components/common/ModalForm';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport { listCompanies, createCompany, updateCompany, deleteCompany, getCompanyStats } from '../services/companies';\r\n\r\nconst emptyForm = {\r\n  type: 'empresa',\r\n  ruc: '',\r\n  dni: '',\r\n  name: '',\r\n  address: '',\r\n  email: '',\r\n  phone: '',\r\n  contact_name: '',\r\n};\r\n\r\nexport default function Clientes() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingClient, setEditingClient] = useState(null);\r\n  const [deletingClient, setDeletingClient] = useState(null);\r\n  \r\n  // Estado para paginación y filtros\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [selectedSector, setSelectedSector] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['clients', currentPage, searchTerm, selectedType, selectedCity, selectedSector],\r\n    () => listCompanies({ \r\n      page: currentPage, \r\n      limit: 20, \r\n      search: searchTerm, \r\n      type: selectedType,\r\n      city: selectedCity,\r\n      sector: selectedSector\r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 0,\r\n      cacheTime: 0\r\n    }\r\n  );\r\n\r\n  // Consulta separada para estadísticas reales\r\n  const { data: statsData, isLoading: statsLoading } = useQuery(\r\n    ['clientStats'],\r\n    getCompanyStats,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 30000, // 30 segundos\r\n      cacheTime: 60000  // 1 minuto\r\n    }\r\n  );\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    queryClient.invalidateQueries('clients');\r\n    queryClient.invalidateQueries('clientStats'); // Invalidar también las estadísticas\r\n    setShowModal(false);\r\n    setEditingClient(null);\r\n    setDeletingClient(null);\r\n  };\r\n\r\n  // Función para manejar búsqueda\r\n  const handleSearch = (searchValue) => {\r\n    console.log('🔍 handleSearch - Búsqueda:', searchValue);\r\n    setSearchTerm(searchValue);\r\n    setCurrentPage(1); // Resetear a la primera página\r\n    setIsSearching(true);\r\n    \r\n    // La consulta se actualizará automáticamente por el useQuery\r\n    setTimeout(() => setIsSearching(false), 1000);\r\n  };\r\n\r\n  // Función para manejar filtros\r\n  const handleFilter = (filters) => {\r\n    console.log('🔍 handleFilter - Filtros:', filters);\r\n    setSelectedType(filters.type || '');\r\n    setSelectedCity(filters.city || '');\r\n    setSelectedSector(filters.sector || '');\r\n    setCurrentPage(1); // Resetear a la primera página\r\n  };\r\n\r\n  // Opciones de filtros específicas para clientes\r\n  const clientFilterOptions = [\r\n    {\r\n      title: 'Por Tipo de Cliente',\r\n      options: [\r\n        { label: 'Empresas', filter: { type: 'empresa' } },\r\n        { label: 'Personas Naturales', filter: { type: 'persona' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Por Sector',\r\n      options: [\r\n        { label: 'General', filter: { sector: 'General' } },\r\n        { label: 'Construcción', filter: { sector: 'Construcción' } },\r\n        { label: 'Minería', filter: { sector: 'Minería' } },\r\n        { label: 'Ingeniería', filter: { sector: 'Ingeniería' } },\r\n        { label: 'Laboratorio', filter: { sector: 'Laboratorio' } },\r\n        { label: 'Consultoría', filter: { sector: 'Consultoría' } },\r\n        { label: 'Tecnología', filter: { sector: 'Tecnología' } },\r\n        { label: 'Ambiental', filter: { sector: 'Ambiental' } },\r\n        { label: 'Geología', filter: { sector: 'Geología' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Por Ciudad',\r\n      options: [\r\n        { label: 'Lima', filter: { city: 'Lima' } },\r\n        { label: 'Arequipa', filter: { city: 'Arequipa' } },\r\n        { label: 'Cusco', filter: { city: 'Cusco' } },\r\n        { label: 'Trujillo', filter: { city: 'Trujillo' } },\r\n        { label: 'Piura', filter: { city: 'Piura' } },\r\n        { label: 'Chiclayo', filter: { city: 'Chiclayo' } },\r\n        { label: 'Iquitos', filter: { city: 'Iquitos' } },\r\n        { label: 'Huancayo', filter: { city: 'Huancayo' } }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const createMutation = useMutation(createCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente creado exitosamente'),\r\n    onError: (error) => console.error('Error creating client:', error)\r\n  });\r\n\r\n  const updateMutation = useMutation(updateCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente actualizado exitosamente'),\r\n    onError: (error) => console.error('Error updating client:', error)\r\n  });\r\n\r\n  const deleteMutation = useMutation(deleteCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente eliminado exitosamente'),\r\n    onError: (error) => console.error('Error deleting client:', error)\r\n  });\r\n\r\n  const handleCreate = () => {\r\n    setEditingClient(emptyForm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditingClient(client);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (client) => {\r\n    if (window.confirm(`¿Estás seguro de que quieres eliminar el cliente \"${client.name}\"?`)) {\r\n      deleteMutation.mutate(client.id);\r\n    }\r\n  };\r\n\r\n  const handleCreateProject = (client) => {\r\n    // Navegar al módulo de proyectos con el cliente pre-seleccionado\r\n    navigate('/proyectos', { \r\n      state: { \r\n        selectedClient: {\r\n          id: client.id,\r\n          name: client.name,\r\n          type: client.type,\r\n          sector: client.sector,\r\n          city: client.city\r\n        }\r\n      } \r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (editingClient.id) {\r\n      await updateMutation.mutateAsync({ id: editingClient.id, ...formData });\r\n    } else {\r\n      await createMutation.mutateAsync(formData);\r\n    }\r\n  };\r\n\r\n  const getTypeBadge = (type) => {\r\n    const typeConfig = {\r\n      'empresa': { bg: 'primary', text: 'Empresa', icon: FiHome },\r\n      'persona': { bg: 'info', text: 'Persona Natural', icon: FiUser }\r\n    };\r\n    \r\n    const config = typeConfig[type] || { bg: 'secondary', text: type, icon: FiUser };\r\n    const Icon = config.icon;\r\n    \r\n    return (\r\n      <Badge bg={config.bg} className=\"status-badge d-flex align-items-center\">\r\n        <Icon size={12} className=\"me-1\" />\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'ID',\r\n      accessor: 'id',\r\n      width: '80px'\r\n    },\r\n    {\r\n      header: 'Cliente',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name}</div>\r\n          <div className=\"d-flex align-items-center gap-2 mt-1\">\r\n            {getTypeBadge(row.type)}\r\n            {row.ruc && (\r\n              <small className=\"text-muted\">RUC: {row.ruc}</small>\r\n            )}\r\n            {row.dni && (\r\n              <small className=\"text-muted\">DNI: {row.dni}</small>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Contacto',\r\n      accessor: 'contact',\r\n      render: (value, row) => (\r\n        <div>\r\n          {row.contact_name && (\r\n            <div className=\"fw-medium\">{row.contact_name}</div>\r\n          )}\r\n          {row.email && (\r\n            <div className=\"d-flex align-items-center mt-1\">\r\n              <FiMail size={12} className=\"me-1 text-muted\" />\r\n              <small className=\"text-muted\">{row.email}</small>\r\n            </div>\r\n          )}\r\n          {row.phone && (\r\n            <div className=\"d-flex align-items-center mt-1\">\r\n              <FiPhone size={12} className=\"me-1 text-muted\" />\r\n              <small className=\"text-muted\">{row.phone}</small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Ciudad',\r\n      accessor: 'city',\r\n      render: (value) => {\r\n        const city = value || 'No especificada';\r\n        let cityColor = 'secondary';\r\n        \r\n        // Asignar colores según la ciudad\r\n        switch (city) {\r\n          case 'Lima':\r\n            cityColor = 'primary';\r\n            break;\r\n          case 'Arequipa':\r\n            cityColor = 'info';\r\n            break;\r\n          case 'Cusco':\r\n            cityColor = 'success';\r\n            break;\r\n          case 'Trujillo':\r\n            cityColor = 'warning';\r\n            break;\r\n          case 'Piura':\r\n            cityColor = 'danger';\r\n            break;\r\n          case 'Chiclayo':\r\n            cityColor = 'info';\r\n            break;\r\n          case 'Iquitos':\r\n            cityColor = 'success';\r\n            break;\r\n          case 'Huancayo':\r\n            cityColor = 'warning';\r\n            break;\r\n          default:\r\n            cityColor = 'secondary';\r\n        }\r\n        \r\n        return (\r\n          <Badge bg={cityColor} className=\"px-2 py-1\">\r\n            {city}\r\n          </Badge>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Sector',\r\n      accessor: 'sector',\r\n      render: (value) => {\r\n        const sector = value || 'General';\r\n        let sectorColor = 'secondary';\r\n        \r\n        // Asignar colores según el sector\r\n        switch (sector) {\r\n          case 'Construcción':\r\n            sectorColor = 'warning';\r\n            break;\r\n          case 'Minería':\r\n            sectorColor = 'dark';\r\n            break;\r\n          case 'Ingeniería':\r\n            sectorColor = 'primary';\r\n            break;\r\n          case 'Laboratorio':\r\n            sectorColor = 'info';\r\n            break;\r\n          case 'Consultoría':\r\n            sectorColor = 'success';\r\n            break;\r\n          case 'Tecnología':\r\n            sectorColor = 'primary';\r\n            break;\r\n          case 'Ambiental':\r\n            sectorColor = 'success';\r\n            break;\r\n          case 'Geología':\r\n            sectorColor = 'info';\r\n            break;\r\n          default:\r\n            sectorColor = 'secondary';\r\n        }\r\n        \r\n        return (\r\n          <Badge bg={sectorColor} className=\"px-2 py-1\">\r\n            {sector}\r\n          </Badge>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Dirección',\r\n      accessor: 'address',\r\n      render: (value) => (\r\n        value ? (\r\n          <div className=\"d-flex align-items-center\">\r\n            <FiMapPin size={12} className=\"me-1 text-muted\" />\r\n            <small className=\"text-muted\">{value}</small>\r\n          </div>\r\n        ) : (\r\n          <small className=\"text-muted\">Sin dirección</small>\r\n        )\r\n      )\r\n    },\r\n    {\r\n      header: 'Fecha Registro',\r\n      accessor: 'created_at',\r\n      type: 'date'\r\n    },\r\n    {\r\n      header: 'Acciones',\r\n      accessor: 'actions',\r\n      render: (value, row) => (\r\n        <div className=\"d-flex gap-1\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            size=\"sm\"\r\n            onClick={() => handleEdit(row)}\r\n            title=\"Editar cliente\"\r\n          >\r\n            <FiEdit size={14} />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-success\"\r\n            size=\"sm\"\r\n            onClick={() => handleCreateProject(row)}\r\n            title=\"Crear proyecto para este cliente\"\r\n          >\r\n            <FiFolderPlus size={14} />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => handleDelete(row)}\r\n            title=\"Eliminar cliente\"\r\n          >\r\n            <FiTrash2 size={14} />\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const formFields = [\r\n    {\r\n      name: 'type',\r\n      label: 'Tipo de Cliente',\r\n      type: 'select',\r\n      required: true,\r\n      options: [\r\n        { value: 'empresa', label: 'Empresa' },\r\n        { value: 'persona', label: 'Persona Natural' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'name',\r\n      label: 'Nombre/Razón Social',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el nombre o razón social'\r\n    },\r\n    {\r\n      name: 'ruc',\r\n      label: 'RUC',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el RUC (solo para empresas)',\r\n      help: 'Solo para empresas'\r\n    },\r\n    {\r\n      name: 'dni',\r\n      label: 'DNI',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el DNI (solo para personas)',\r\n      help: 'Solo para personas naturales'\r\n    },\r\n    {\r\n      name: 'contact_name',\r\n      label: 'Nombre de Contacto',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el nombre del contacto'\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeholder: 'contacto@empresa.com'\r\n    },\r\n    {\r\n      name: 'phone',\r\n      label: 'Teléfono',\r\n      type: 'text',\r\n      placeholder: '+51 999 999 999'\r\n    },\r\n    {\r\n      name: 'address',\r\n      label: 'Dirección',\r\n      type: 'textarea',\r\n      placeholder: 'Ingresa la dirección completa'\r\n    }\r\n  ];\r\n\r\n  // Calcular estadísticas\r\n  const stats = useMemo(() => {\r\n    // Usar estadísticas reales del backend si están disponibles\r\n    if (statsData) {\r\n      console.log('📊 Stats - Usando estadísticas reales del backend:', statsData);\r\n      return {\r\n        total: statsData.total || 0,\r\n        empresas: statsData.empresas || 0,\r\n        personas: statsData.personas || 0,\r\n        conEmail: statsData.withEmail || 0,\r\n        conTelefono: statsData.withPhone || 0\r\n      };\r\n    }\r\n    \r\n    // Fallback: calcular desde los datos de la página actual\r\n    const companies = data?.data || [];\r\n    console.log('📊 Stats - Fallback: calculando desde página actual:', companies);\r\n    return {\r\n      total: companies.length,\r\n      empresas: companies.filter(c => c.type === 'empresa').length,\r\n      personas: companies.filter(c => c.type === 'persona').length,\r\n      conEmail: companies.filter(c => c.email).length,\r\n      conTelefono: companies.filter(c => c.phone).length\r\n    };\r\n  }, [statsData, data]);\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <div className=\"fade-in\">\r\n        <PageHeader\r\n          title=\"Gestión de Clientes\"\r\n          subtitle=\"Crear, editar y gestionar clientes del sistema\"\r\n          icon={FiUsers}\r\n          actions={\r\n            <Button variant=\"primary\" onClick={handleCreate}>\r\n              <FiPlus className=\"me-2\" />\r\n              Nuevo Cliente\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        {/* Estadísticas */}\r\n        <Row className=\"g-4 mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Clientes\"\r\n              value={stats.total}\r\n              icon={FiUsers}\r\n              color=\"primary\"\r\n              subtitle=\"Clientes registrados\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Empresas\"\r\n              value={stats.empresas}\r\n              icon={FiBuilding}\r\n              color=\"success\"\r\n              subtitle=\"Clientes corporativos\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Personas\"\r\n              value={stats.personas}\r\n              icon={FiUser}\r\n              color=\"info\"\r\n              subtitle=\"Clientes individuales\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Con Contacto\"\r\n              value={stats.conEmail}\r\n              icon={FiMail}\r\n              color=\"warning\"\r\n              subtitle=\"Con email registrado\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Tabla de clientes */}\r\n        <Card className=\"shadow-sm border-0\">\r\n          <Card.Header className=\"bg-white border-bottom\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiUsers className=\"me-2 text-primary\" />\r\n                Lista de Clientes\r\n              </h5>\r\n              <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\r\n                {stats.total} clientes\r\n              </Badge>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              data={data?.data || []}\r\n              columns={columns}\r\n              loading={isLoading || isSearching}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              emptyMessage=\"No hay clientes registrados\"\r\n              // Props para paginación del backend\r\n              totalItems={data?.total || 0}\r\n              itemsPerPage={20}\r\n              currentPage={currentPage}\r\n              onPageChange={setCurrentPage}\r\n              onSearch={handleSearch}\r\n              onFilter={handleFilter}\r\n              // Filtros específicos para clientes\r\n              filterOptions={clientFilterOptions}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      <ModalForm\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        title={editingClient?.id ? 'Editar Cliente' : 'Nuevo Cliente'}\r\n        data={editingClient || emptyForm}\r\n        fields={formFields}\r\n        onSubmit={handleSubmit}\r\n        loading={createMutation.isLoading || updateMutation.isLoading}\r\n        submitText={editingClient?.id ? 'Actualizar' : 'Crear'}\r\n      />\r\n      </div>\r\n    </Container>\r\n  );\r\n};"],"names":["emptyForm","Clientes","showModal","setShowModal","useState","editingClient","setEditingClient","deletingClient","setDeletingClient","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedType","setSelectedType","selectedCity","setSelectedCity","selectedSector","setSelectedSector","isSearching","setIsSearching","queryClient","useQueryClient","navigate","useNavigate","data","isLoading","refetch","useQuery","listCompanies","statsData","statsLoading","getCompanyStats","handleMutationSuccess","message","handleSearch","searchValue","handleFilter","filters","clientFilterOptions","createMutation","useMutation","createCompany","error","updateMutation","updateCompany","deleteMutation","deleteCompany","handleCreate","handleEdit","client","handleDelete","handleCreateProject","handleSubmit","formData","getTypeBadge","type","config","FiHome","FiUser","Icon","Badge","jsx","columns","value","row","jsxs","FiMail","FiPhone","city","cityColor","sector","sectorColor","FiMapPin","Button","FiEdit","FiFolderPlus","FiTrash2","formFields","stats","useMemo","companies","c","Container","PageHeader","FiUsers","FiPlus","Row","Col","StatsCard","FiBuilding","Card","DataTable","ModalForm"],"mappings":"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"}