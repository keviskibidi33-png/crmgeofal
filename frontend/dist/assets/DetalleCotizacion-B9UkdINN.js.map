{"version":3,"file":"DetalleCotizacion-B9UkdINN.js","sources":["../../src/components/QuoteEvidences.jsx","../../src/pages/DetalleCotizacion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Alert, Spinner, Badge, Form, Modal } from 'react-bootstrap';\r\nimport { FiUpload, FiDownload, FiTrash2, FiFile, FiImage, FiFileText, FiCheckCircle, FiEye, FiPaperclip, FiXCircle, FiClock } from 'react-icons/fi';\r\nimport './QuoteEvidences.css';\r\n\r\nconst QuoteEvidences = ({ quoteId }) => {\r\n  const [evidences, setEvidences] = useState({ primer_contacto: [], aceptacion: [], finalizacion: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [stats, setStats] = useState({ total: 0, primer_contacto: 0, aceptacion: 0, finalizacion: 0 });\r\n\r\n  // Estados para el modal de subida\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [uploadType, setUploadType] = useState('');\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [uploadNotes, setUploadNotes] = useState('');\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [viewType, setViewType] = useState('');\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [evidenceToDelete, setEvidenceToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (quoteId) {\r\n      loadEvidences();\r\n      loadStats();\r\n    }\r\n  }, [quoteId]);\r\n\r\n  const loadEvidences = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const apiUrl = import.meta.env?.VITE_API_URL || 'http://localhost:4000';\r\n      const baseUrl = apiUrl.replace(/\\/api$/, '');\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${baseUrl}/api/quotes/${quoteId}/evidences`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al cargar evidencias');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setEvidences(data.grouped || { primer_contacto: [], aceptacion: [], finalizacion: [] });\r\n    } catch (err) {\r\n      console.error('Error cargando evidencias:', err);\r\n      setError('No se pudieron cargar las evidencias: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadStats = async () => {\r\n    try {\r\n      const apiUrl = import.meta.env?.VITE_API_URL || 'http://localhost:4000';\r\n      const baseUrl = apiUrl.replace(/\\/api$/, '');\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${baseUrl}/api/quotes/${quoteId}/evidences/stats`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStats({\r\n          total: parseInt(data.total) || 0,\r\n          primer_contacto: parseInt(data.primer_contacto) || 0,\r\n          aceptacion: parseInt(data.aceptacion) || 0,\r\n          finalizacion: parseInt(data.finalizacion) || 0\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error('Error cargando estadísticas:', err);\r\n    }\r\n  };\r\n\r\n  const handleUploadClick = (type) => {\r\n    setUploadType(type);\r\n    setUploadFile(null);\r\n    setUploadNotes('');\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleViewClick = (type) => {\r\n    setViewType(type);\r\n    setShowViewModal(true);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validar tipo de archivo\r\n      const allowedTypes = [\r\n        'application/pdf',\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'image/png',\r\n        'image/jpeg',\r\n        'image/jpg'\r\n      ];\r\n\r\n      if (!allowedTypes.includes(file.type)) {\r\n        setError('Tipo de archivo no permitido. Solo se aceptan PDF, Excel (.xlsx) e imágenes (PNG, JPG)');\r\n        e.target.value = '';\r\n        return;\r\n      }\r\n\r\n      // Validar tamaño (10MB máximo)\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        setError('El archivo es demasiado grande. Tamaño máximo: 10MB');\r\n        e.target.value = '';\r\n        return;\r\n      }\r\n\r\n      setUploadFile(file);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleUploadSubmit = async () => {\r\n    if (!uploadFile) {\r\n      setError('Por favor selecciona un archivo');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setError('');\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', uploadFile);\r\n      formData.append('evidence_type', uploadType);\r\n      if (uploadNotes) {\r\n        formData.append('notes', uploadNotes);\r\n      }\r\n\r\n      const apiUrl = import.meta.env?.VITE_API_URL || 'http://localhost:4000';\r\n      const baseUrl = apiUrl.replace(/\\/api$/, '');\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${baseUrl}/api/quotes/${quoteId}/evidences`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Error al subir evidencia');\r\n      }\r\n\r\n      setSuccess('Evidencia subida correctamente');\r\n      setShowUploadModal(false);\r\n      loadEvidences();\r\n      loadStats();\r\n\r\n      // Limpiar el mensaje de éxito después de 3 segundos\r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      console.error('Error subiendo evidencia:', err);\r\n      setError('Error al subir evidencia: ' + err.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (evidenceId, fileName) => {\r\n    try {\r\n      const apiUrl = import.meta.env?.VITE_API_URL || 'http://localhost:4000';\r\n      const baseUrl = apiUrl.replace(/\\/api$/, '');\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${baseUrl}/api/quotes/evidences/${evidenceId}/download`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al descargar archivo');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (err) {\r\n      console.error('Error descargando evidencia:', err);\r\n      setError('Error al descargar archivo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (evidence) => {\r\n    setEvidenceToDelete(evidence);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!evidenceToDelete) return;\r\n\r\n    try {\r\n      const apiUrl = import.meta.env?.VITE_API_URL || 'http://localhost:4000';\r\n      const baseUrl = apiUrl.replace(/\\/api$/, '');\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${baseUrl}/api/quotes/evidences/${evidenceToDelete.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar evidencia');\r\n      }\r\n\r\n      setSuccess('Evidencia eliminada correctamente');\r\n      setShowDeleteModal(false);\r\n      setEvidenceToDelete(null);\r\n      loadEvidences();\r\n      loadStats();\r\n\r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      console.error('Error eliminando evidencia:', err);\r\n      setError('Error al eliminar evidencia: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setShowDeleteModal(false);\r\n    setEvidenceToDelete(null);\r\n  };\r\n\r\n  const getFileIcon = (fileType) => {\r\n    if (fileType.includes('pdf')) return <FiFileText className=\"text-danger\" size={24} />;\r\n    if (fileType.includes('image')) return <FiImage className=\"text-success\" size={24} />;\r\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return <FiFile className=\"text-success\" size={24} />;\r\n    return <FiFile className=\"text-secondary\" size={24} />;\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (!bytes) return 'Desconocido';\r\n    if (bytes < 1024) return bytes + ' B';\r\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';\r\n    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const renderEvidenceSection = (title, type, icon, color, evidenceList) => {\r\n    const count = evidenceList.length;\r\n\r\n    return (\r\n      <Card className=\"mb-3 shadow-sm\">\r\n        <Card.Header className={`bg-${color} text-dark d-flex justify-content-between align-items-center`}>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            {icon}\r\n            <strong>{title}</strong>\r\n            <Badge bg=\"light\" text=\"dark\">{count}</Badge>\r\n          </div>\r\n          <div className=\"d-flex gap-2\">\r\n            {count > 0 && (\r\n              <Button \r\n                variant=\"outline-secondary\" \r\n                size=\"sm\"\r\n                onClick={() => handleViewClick(type)}\r\n              >\r\n                <FiEye className=\"me-1\" />\r\n                Ver evidencias\r\n              </Button>\r\n            )}\r\n            <Button \r\n              variant=\"light\" \r\n              size=\"sm\"\r\n              onClick={() => handleUploadClick(type)}\r\n            >\r\n              <FiUpload className=\"me-1\" />\r\n              Subir archivo\r\n            </Button>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {evidenceList.length === 0 ? (\r\n            <div className=\"text-center text-muted py-3\">\r\n              <FiFile size={48} className=\"mb-2 opacity-25\" />\r\n              <p>No hay evidencias cargadas</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"evidence-list\">\r\n              {evidenceList.map((evidence) => (\r\n                <div key={evidence.id} className=\"evidence-item d-flex align-items-center justify-content-between p-3 border-bottom\">\r\n                  <div className=\"d-flex align-items-center gap-3 flex-grow-1\">\r\n                    {getFileIcon(evidence.file_type)}\r\n                    <div className=\"flex-grow-1\">\r\n                      <div className=\"fw-bold\">{evidence.file_name}</div>\r\n                      <div className=\"text-muted small\">\r\n                        <span>{formatFileSize(evidence.file_size)}</span>\r\n                        <span className=\"mx-2\">•</span>\r\n                        <span>{formatDate(evidence.uploaded_at)}</span>\r\n                        {evidence.uploaded_by_name && (\r\n                          <>\r\n                            <span className=\"mx-2\">•</span>\r\n                            <span>Por: {evidence.uploaded_by_name}</span>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                      {evidence.notes && (\r\n                        <div className=\"text-muted small mt-1\">\r\n                          <em>Nota: {evidence.notes}</em>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleDownload(evidence.id, evidence.file_name)}\r\n                      title=\"Descargar\"\r\n                    >\r\n                      <FiDownload />\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleDeleteClick(evidence)}\r\n                      title=\"Eliminar\"\r\n                    >\r\n                      <FiTrash2 />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-5\">\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n        <p className=\"mt-2\">Cargando evidencias...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quote-evidences\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h4 className=\"mb-0\">📋 Evidencias de la Cotización</h4>\r\n        <Badge bg=\"info\" className=\"fs-6\">\r\n          Total: {stats.total} archivo{stats.total !== 1 ? 's' : ''}\r\n        </Badge>\r\n      </div>\r\n\r\n      {error && <Alert variant=\"danger\" dismissible onClose={() => setError('')}>{error}</Alert>}\r\n      {success && <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>{success}</Alert>}\r\n\r\n      {renderEvidenceSection(\r\n        ' Evidencia de Primer Contacto',\r\n        'primer_contacto',\r\n        '📸',\r\n        'primary',\r\n        evidences.primer_contacto\r\n      )}\r\n\r\n      {renderEvidenceSection(\r\n        'Evidencias de Aceptación',\r\n        'aceptacion',\r\n        '✅',\r\n        'success',\r\n        evidences.aceptacion\r\n      )}\r\n\r\n      {renderEvidenceSection(\r\n        'Evidencias de Finalización',\r\n        'finalizacion',\r\n        '🏁',\r\n        'warning',\r\n        evidences.finalizacion\r\n      )}\r\n\r\n      {/* Modal de subida de archivos */}\r\n      <Modal show={showUploadModal} onHide={() => setShowUploadModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Subir Evidencia\r\n            {uploadType === 'primer_contacto' && ' - Primer Contacto 📸'}\r\n            {uploadType === 'aceptacion' && ' - Aceptación ✅'}\r\n            {uploadType === 'finalizacion' && ' - Finalización 🏁'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Archivo *</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n                accept=\".pdf,.xlsx,.xls,.png,.jpg,.jpeg\"\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Formatos permitidos: PDF, Excel (.xlsx), imágenes (PNG, JPG). Tamaño máximo: 10MB\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            {uploadFile && (\r\n              <Alert variant=\"info\">\r\n                <FiCheckCircle className=\"me-2\" />\r\n                Archivo seleccionado: <strong>{uploadFile.name}</strong> ({formatFileSize(uploadFile.size)})\r\n              </Alert>\r\n            )}\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Notas (opcional)</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={uploadNotes}\r\n                onChange={(e) => setUploadNotes(e.target.value)}\r\n                placeholder=\"Agrega notas o comentarios sobre esta evidencia...\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowUploadModal(false)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleUploadSubmit}\r\n            disabled={!uploadFile || uploading}\r\n          >\r\n            {uploading ? (\r\n              <>\r\n                <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                Subiendo...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiUpload className=\"me-2\" />\r\n                Subir Evidencia\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Modal para visualizar evidencias */}\r\n      <Modal show={showViewModal} onHide={() => setShowViewModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Ver Evidencias\r\n            {viewType === 'primer_contacto' && ' - Primer Contacto 📸'}\r\n            {viewType === 'aceptacion' && ' - Aceptación ✅'}\r\n            {viewType === 'finalizacion' && ' - Finalización 🏁'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {evidences[viewType] && evidences[viewType].length > 0 ? (\r\n            <div className=\"evidences-view\">\r\n              {evidences[viewType].map((evidence) => (\r\n                <div key={evidence.id} className=\"evidence-item-view border rounded p-3 mb-3\">\r\n                  <div className=\"d-flex align-items-start justify-content-between\">\r\n                    <div className=\"d-flex align-items-start gap-3 flex-grow-1\">\r\n                      {getFileIcon(evidence.file_type)}\r\n                      <div className=\"flex-grow-1\">\r\n                        <h6 className=\"mb-1\">{evidence.file_name}</h6>\r\n                        <div className=\"text-muted small mb-2\">\r\n                          <span className=\"me-3\">📏 {formatFileSize(evidence.file_size)}</span>\r\n                          <span className=\"me-3\">📅 {formatDate(evidence.uploaded_at)}</span>\r\n                          {evidence.uploaded_by_name && (\r\n                            <span>👤 Por: {evidence.uploaded_by_name}</span>\r\n                          )}\r\n                        </div>\r\n                        {evidence.notes && (\r\n                          <div className=\"alert alert-light p-2 mb-0\">\r\n                            <strong className=\"small\">Notas:</strong>\r\n                            <div className=\"small mt-1\">{evidence.notes}</div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2\">\r\n                      <Button\r\n                        variant=\"outline-primary\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDownload(evidence.id, evidence.file_name)}\r\n                        title=\"Descargar\"\r\n                      >\r\n                        <FiDownload />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outline-danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDeleteClick(evidence)}\r\n                        title=\"Eliminar\"\r\n                      >\r\n                        <FiTrash2 />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <FiFile size={48} className=\"text-muted mb-3\" />\r\n              <p className=\"text-muted\">No hay evidencias de este tipo</p>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowViewModal(false)}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Modal de confirmación para eliminar evidencia */}\r\n      <Modal show={showDeleteModal} onHide={handleDeleteCancel} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-danger\">\r\n            <FiTrash2 className=\"me-2\" />\r\n            Confirmar Eliminación\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"text-center\">\r\n            <FiTrash2 size={48} className=\"text-danger mb-3\" />\r\n            <h5>¿Estás seguro de que quieres eliminar esta evidencia?</h5>\r\n            {evidenceToDelete && (\r\n              <div className=\"mt-3 p-3 bg-light rounded\">\r\n                <strong>Archivo:</strong> {evidenceToDelete.file_name}\r\n                <br />\r\n                <small className=\"text-muted\">\r\n                  Tamaño: {formatFileSize(evidenceToDelete.file_size)}\r\n                </small>\r\n                {evidenceToDelete.notes && (\r\n                  <>\r\n                    <br />\r\n                    <small className=\"text-muted\">\r\n                      <strong>Notas:</strong> {evidenceToDelete.notes}\r\n                    </small>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n            <p className=\"text-muted mt-3\">\r\n              Esta acción no se puede deshacer.\r\n            </p>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleDeleteCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleDeleteConfirm}>\r\n            <FiTrash2 className=\"me-1\" />\r\n            Eliminar Evidencia\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteEvidences;\r\n\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ModuloBase from '../components/ModuloBase';\r\nimport { getQuote, updateQuote } from '../services/quotes';\r\nimport QuoteEvidences from '../components/QuoteEvidences';\r\n\r\nexport default function DetalleCotizacion() {\r\n  const { id } = useParams();\r\n  const [row, setRow] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [saving, setSaving] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [showItems, setShowItems] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        const q = await getQuote(id);\r\n        \r\n        // Parsear meta para extraer datos del cliente y de items\r\n        let meta = null;\r\n        if (q.meta && typeof q.meta === 'string') {\r\n          try {\r\n            meta = JSON.parse(q.meta);\r\n          } catch (e) {\r\n            meta = null;\r\n          }\r\n        } else if (q.meta && typeof q.meta === 'object') {\r\n          meta = q.meta;\r\n        }\r\n        \r\n        // Enriquecer la cotización con datos del meta\r\n        if (meta) {\r\n          // Agregar razón social y RUC desde meta.customer\r\n          if (meta.customer) {\r\n            q.client_company = meta.customer.company_name || q.company_name;\r\n            q.client_ruc = meta.customer.ruc || q.company_ruc;\r\n          }\r\n          \r\n          // Cargar ítems\r\n          if (meta.items) {\r\n            setItems(meta.items);\r\n          } else {\r\n            setItems([]);\r\n          }\r\n        } else {\r\n          setItems([]);\r\n        }\r\n        \r\n        setRow(q);\r\n      } catch (e) {\r\n        setError(e.message || 'No se pudo cargar la cotización');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [id]);\r\n\r\n  const subtotal = useMemo(() => {\r\n    if (row && row.subtotal) return Number(row.subtotal);\r\n    return items.reduce((acc, it) => {\r\n      const partial = it.partial_price || (Number(it.unit_price || 0) * Number(it.quantity || 0));\r\n      return acc + Number(partial);\r\n    }, 0);\r\n  }, [items, row]);\r\n  \r\n  const derivedIgv = useMemo(() => Number((subtotal * 0.18).toFixed(2)), [subtotal]);\r\n  const igvAmount = useMemo(() => {\r\n    if (!row) return 0;\r\n    if (typeof row.igv === 'number') return Number(row.igv);\r\n    return derivedIgv;\r\n  }, [row, derivedIgv]);\r\n  const total = useMemo(() => Number((subtotal + igvAmount).toFixed(2)), [subtotal, igvAmount]);\r\n\r\n  const exportUrl = (type) => {\r\n    const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n    const path = `/api/quotes/${id}/export/${type}`;\r\n    return base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n  };\r\n\r\n  const onItemChange = (idx, field, value) => {\r\n    setItems((prev) => {\r\n      const next = [...prev];\r\n      const cur = { ...next[idx], [field]: field === 'quantity' || field === 'unit_price' ? Number(value) : value };\r\n      const qty = Number(cur.quantity || 0);\r\n      const unit = Number(cur.unit_price || 0);\r\n      cur.partial_price = Number((qty * unit).toFixed(2));\r\n      next[idx] = cur;\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const onHeaderChange = (field, value) => {\r\n    setRow((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const saveAll = async () => {\r\n    try {\r\n      setSaving(true);\r\n      setError('');\r\n      setMessage('');\r\n      // Los ítems se manejan en el frontend, no se guardan en el backend\r\n      const payload = {\r\n        client_contact: row?.client_contact || null,\r\n        client_email: row?.client_email || null,\r\n        client_phone: row?.client_phone || null,\r\n        issue_date: row?.issue_date || null,\r\n        subtotal: Number(subtotal || 0),\r\n        igv: Number(igvAmount || 0),\r\n        total: Number(total || 0),\r\n        status: row?.status || 'en_proceso',\r\n        reference: row?.reference || null,\r\n        meta: row?.meta || null,\r\n      };\r\n      const updated = await updateQuote(id, payload);\r\n      setRow(updated);\r\n      setMessage('Cambios guardados correctamente.');\r\n    } catch (e) {\r\n      setError(e.message || 'No se pudo guardar los cambios');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModuloBase titulo={`📋 Evidencias - Cotización #${id}`} descripcion=\"Gestión de evidencias de la cotización\">\r\n      {loading && (\r\n        <div className=\"text-center py-5\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"visually-hidden\">Cargando...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {row && (\r\n        <>\r\n          {/* Información Resumida de la Cotización */}\r\n          <div className=\"card mb-4 shadow-sm\">\r\n            <div className=\"card-header bg-light\">\r\n              <h5 className=\"mb-0\">📄 Información de la Cotización</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row g-3\">\r\n                <div className=\"col-md-4\">\r\n                  <strong className=\"text-muted d-block small\">Razón Social</strong>\r\n                  <div className=\"fs-6 fw-bold\">{row.client_company || row.client_contact || 'No especificado'}</div>\r\n                  {row.client_ruc && <small className=\"text-muted\">RUC: {row.client_ruc}</small>}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <strong className=\"text-muted d-block small\">Contacto</strong>\r\n                  <div className=\"fs-6\">{row.client_contact || 'No especificado'}</div>\r\n                  {row.client_email && <small className=\"text-muted d-block\">{row.client_email}</small>}\r\n                  {row.client_phone && <small className=\"text-muted\">📞 {row.client_phone}</small>}\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <strong className=\"text-muted d-block small\">Fecha de Emisión</strong>\r\n                  <div className=\"fs-6\">{row.issue_date ? new Date(row.issue_date).toLocaleDateString('es-ES') : 'No especificada'}</div>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <strong className=\"text-muted d-block small\">Estado</strong>\r\n                  <div className=\"fs-6\">\r\n                    <span className={`badge ${\r\n                      row.status === 'aprobado' ? 'bg-success' :\r\n                      row.status === 'enviado' ? 'bg-primary' :\r\n                      row.status === 'rechazado' ? 'bg-danger' : 'bg-secondary'\r\n                    }`}>\r\n                      {row.status === 'en_proceso' ? 'En proceso' :\r\n                       row.status === 'enviado' ? 'Enviado' :\r\n                       row.status === 'aprobado' ? 'Aprobado' :\r\n                       row.status === 'rechazado' ? 'Rechazado' : row.status}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"row g-3 mt-2\">\r\n                <div className=\"col-md-3\">\r\n                  <strong className=\"text-muted d-block small\">Cantidad de Ítems</strong>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <div className=\"fs-6\">{items.length} ítem{items.length !== 1 ? 's' : ''}</div>\r\n                    {items.length > 0 && (\r\n                      <div className=\"form-check\">\r\n                        <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"showItems\" \r\n                          checked={showItems}\r\n                          onChange={(e) => setShowItems(e.target.checked)}\r\n                        />\r\n                        <label className=\"form-check-label small\" htmlFor=\"showItems\">\r\n                          Ver detalles\r\n                        </label>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <strong className=\"text-muted d-block small\">Total</strong>\r\n                  <div className=\"fs-5 fw-bold text-success\">S/ {total.toFixed(2)}</div>\r\n                  <small className=\"text-muted\">IGV: S/ {igvAmount.toFixed(2)}</small>\r\n                </div>\r\n                {row.reference && (\r\n                  <div className=\"col-md-7\">\r\n                    <strong className=\"text-muted d-block small\">Referencia</strong>\r\n                    <div className=\"fs-6\">{row.reference}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Listado de Ítems - Solo se muestra si está marcado el checkbox */}\r\n              {items.length > 0 && showItems && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <strong className=\"text-muted small\">Ítems de la Cotización</strong>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"btn btn-sm btn-outline-secondary\"\r\n                      onClick={() => setShowItems(false)}\r\n                    >\r\n                      Ocultar\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-sm table-hover\">\r\n                      <thead className=\"table-light\">\r\n                        <tr>\r\n                          <th style={{width: '10%'}}>Código</th>\r\n                          <th style={{width: '40%'}}>Descripción</th>\r\n                          <th style={{width: '15%'}}>Norma</th>\r\n                          <th style={{width: '12%'}}>P. Unit.</th>\r\n                          <th style={{width: '8%'}}>Cant.</th>\r\n                          <th style={{width: '15%'}} className=\"text-end\">Parcial</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {items.map((item, idx) => (\r\n                          <tr key={idx}>\r\n                            <td><small>{item.code || '-'}</small></td>\r\n                            <td><small>{item.description || '-'}</small></td>\r\n                            <td><small>{item.norm || '-'}</small></td>\r\n                            <td><small>S/ {Number(item.unit_price || 0).toFixed(2)}</small></td>\r\n                            <td><small>{item.quantity || 0}</small></td>\r\n                            <td className=\"text-end\">\r\n                              <small className=\"fw-bold\">\r\n                                S/ {(Number(item.unit_price || 0) * Number(item.quantity || 0)).toFixed(2)}\r\n                              </small>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                      <tfoot className=\"table-light\">\r\n                        <tr>\r\n                          <td colSpan=\"5\" className=\"text-end\"><strong>Subtotal:</strong></td>\r\n                          <td className=\"text-end\"><strong>S/ {subtotal.toFixed(2)}</strong></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\" className=\"text-end\"><strong>IGV 18%:</strong></td>\r\n                          <td className=\"text-end\"><strong>S/ {igvAmount.toFixed(2)}</strong></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\" className=\"text-end\"><strong>Total:</strong></td>\r\n                          <td className=\"text-end\"><strong className=\"text-success fs-5\">S/ {total.toFixed(2)}</strong></td>\r\n                        </tr>\r\n                      </tfoot>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sección de Evidencias */}\r\n          <QuoteEvidences quoteId={id} />\r\n        </>\r\n      )}\r\n    </ModuloBase>\r\n  );\r\n}"],"names":["QuoteEvidences","quoteId","evidences","setEvidences","useState","loading","setLoading","uploading","setUploading","error","setError","success","setSuccess","stats","setStats","showUploadModal","setShowUploadModal","uploadType","setUploadType","uploadFile","setUploadFile","uploadNotes","setUploadNotes","showViewModal","setShowViewModal","viewType","setViewType","showDeleteModal","setShowDeleteModal","evidenceToDelete","setEvidenceToDelete","useEffect","loadEvidences","loadStats","baseUrl","token","response","data","err","handleUploadClick","type","handleViewClick","handleFileChange","e","file","handleUploadSubmit","formData","errorData","handleDownload","evidenceId","fileName","blob","url","link","handleDeleteClick","evidence","handleDeleteConfirm","handleDeleteCancel","getFileIcon","fileType","FiFileText","FiImage","jsx","FiFile","formatFileSize","bytes","formatDate","dateString","renderEvidenceSection","title","icon","color","evidenceList","count","jsxs","Card","Badge","Button","FiEye","FiUpload","Fragment","FiDownload","FiTrash2","Spinner","Alert","Modal","Form","FiCheckCircle","DetalleCotizacion","id","useParams","row","setRow","items","setItems","saving","setSaving","message","setMessage","showItems","setShowItems","q","getQuote","meta","subtotal","useMemo","acc","it","partial","derivedIgv","igvAmount","total","ModuloBase","item","idx"],"mappings":"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"}