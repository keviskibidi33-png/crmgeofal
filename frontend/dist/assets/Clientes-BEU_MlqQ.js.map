{"version":3,"file":"Clientes-BEU_MlqQ.js","sources":["../../src/utils/authHelper.js","../../src/pages/Clientes.jsx"],"sourcesContent":["// Utilidad para manejar la autenticación y roles de usuario\r\nexport const getCurrentUser = () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return null;\r\n    \r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    return {\r\n      id: payload.id,\r\n      name: payload.name,\r\n      role: payload.role,\r\n      email: payload.email\r\n    };\r\n  } catch (error) {\r\n    console.error('Error decodificando token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const hasRole = (requiredRoles) => {\r\n  const user = getCurrentUser();\r\n  if (!user) return false;\r\n  \r\n  if (typeof requiredRoles === 'string') {\r\n    requiredRoles = [requiredRoles];\r\n  }\r\n  \r\n  return requiredRoles.includes(user.role);\r\n};\r\n\r\nexport const canCreateClient = () => {\r\n  return hasRole(['admin', 'jefa_comercial', 'vendedor_comercial']);\r\n};\r\n\r\nexport const canEditClient = () => {\r\n  return hasRole(['admin', 'jefa_comercial', 'vendedor_comercial']);\r\n};\r\n\r\nexport const canDeleteClient = () => {\r\n  return hasRole(['admin', 'jefa_comercial']);\r\n};\r\n\r\nexport const logUserInfo = () => {\r\n  const user = getCurrentUser();\r\n  if (user) {\r\n    console.log('👤 Usuario actual:', {\r\n      id: user.id,\r\n      name: user.name,\r\n      role: user.role,\r\n      email: user.email\r\n    });\r\n    console.log('🔐 Permisos:', {\r\n      canCreateClient: canCreateClient(),\r\n      canEditClient: canEditClient(),\r\n      canDeleteClient: canDeleteClient()\r\n    });\r\n  } else {\r\n    console.log('❌ No hay usuario autenticado');\r\n  }\r\n};\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Badge, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { FiPlus, FiEdit, FiTrash2, FiUser, FiHome, FiMail, FiPhone, FiMapPin, FiUsers, FiHome as FiBuilding, FiFolderPlus } from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport ModalForm from '../components/common/ModalForm';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport ConfirmModal from '../components/common/ConfirmModal';\r\nimport { listCompanies, createCompany, updateCompany, deleteCompany, getCompanyStats, getCompanyFilterOptions } from '../services/companies';\r\nimport { getCurrentUser, canCreateClient, logUserInfo } from '../utils/authHelper';\r\n\r\nconst emptyForm = {\r\n  type: 'empresa',\r\n  ruc: '',\r\n  dni: '',\r\n  name: '',\r\n  address: '',\r\n  email: '',\r\n  phone: '',\r\n  contact_name: '',\r\n  city: '',\r\n  sector: '',\r\n};\r\n\r\nexport default function Clientes() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingClient, setEditingClient] = useState(null);\r\n  const [deletingClient, setDeletingClient] = useState(null);\r\n  \r\n  // Información del usuario actual\r\n  const currentUser = getCurrentUser();\r\n  const userCanCreateClient = canCreateClient();\r\n  \r\n  // Log de información de usuario al cargar el componente\r\n  React.useEffect(() => {\r\n    logUserInfo();\r\n  }, []);\r\n  \r\n  // Estado para paginación y filtros\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [selectedSector, setSelectedSector] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    ['clients', currentPage, searchTerm, selectedType, selectedCity, selectedSector],\r\n    () => listCompanies({ \r\n      page: currentPage, \r\n      limit: 20, \r\n      search: searchTerm, \r\n      type: selectedType,\r\n      city: selectedCity,\r\n      sector: selectedSector\r\n    }),\r\n    { \r\n      keepPreviousData: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 0,\r\n      cacheTime: 0\r\n    }\r\n  );\r\n\r\n  // Consulta separada para estadísticas reales\r\n  const { data: statsData, isLoading: statsLoading, error: statsError } = useQuery(\r\n    ['clientStats'],\r\n    getCompanyStats,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 30000, // 30 segundos\r\n      cacheTime: 60000  // 1 minuto\r\n    }\r\n  );\r\n\r\n  // Debug: Log de estadísticas (simplificado)\r\n  React.useEffect(() => {\r\n    if (statsData && statsData.data) {\r\n      console.log('✅ Estadísticas cargadas correctamente:', {\r\n        total: statsData.data.total,\r\n        empresas: statsData.data.empresas,\r\n        personas: statsData.data.personas\r\n      });\r\n    }\r\n  }, [statsData]);\r\n\r\n  // Consulta para opciones de filtros dinámicos\r\n  const { data: filterOptionsData, isLoading: filterOptionsLoading } = useQuery(\r\n    ['clientFilterOptions'],\r\n    getCompanyFilterOptions,\r\n    {\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      staleTime: 60000, // 1 minuto\r\n      cacheTime: 300000  // 5 minutos\r\n    }\r\n  );\r\n\r\n  const handleMutationSuccess = (message) => {\r\n    queryClient.invalidateQueries('clients');\r\n    queryClient.invalidateQueries('clientStats'); // Invalidar también las estadísticas\r\n    queryClient.invalidateQueries('clientFilterOptions'); // Invalidar también las opciones de filtros\r\n    setShowModal(false);\r\n    setEditingClient(null);\r\n    setDeletingClient(null);\r\n  };\r\n\r\n  // Función para manejar búsqueda\r\n  const handleSearch = (searchValue) => {\r\n    console.log('🔍 handleSearch - Búsqueda:', searchValue);\r\n    setSearchTerm(searchValue);\r\n    setCurrentPage(1); // Resetear a la primera página\r\n    setIsSearching(true);\r\n    \r\n    // La consulta se actualizará automáticamente por el useQuery\r\n    setTimeout(() => setIsSearching(false), 1000);\r\n  };\r\n\r\n  // Función para manejar filtros\r\n  const handleFilter = (filters) => {\r\n    console.log('🔍 handleFilter - Filtros:', filters);\r\n    setSelectedType(filters.type || '');\r\n    setSelectedCity(filters.city || '');\r\n    setSelectedSector(filters.sector || '');\r\n    setCurrentPage(1); // Resetear a la primera página\r\n  };\r\n\r\n  // Opciones de filtros dinámicas basadas en datos reales\r\n  const clientFilterOptions = useMemo(() => {\r\n    if (!filterOptionsData) {\r\n      return [\r\n        {\r\n          title: 'Por Tipo de Cliente',\r\n          options: [\r\n            { label: 'Empresas', filter: { type: 'empresa' } },\r\n            { label: 'Personas Naturales', filter: { type: 'persona' } }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n\r\n    return [\r\n      {\r\n        title: 'Por Tipo de Cliente',\r\n        options: filterOptionsData.types?.map(type => ({\r\n          label: `${type.label} (${type.count})`,\r\n          filter: { type: type.value }\r\n        })) || []\r\n      },\r\n      {\r\n        title: 'Por Sector',\r\n        options: filterOptionsData.sectors?.map(sector => ({\r\n          label: `${sector.label} (${sector.count})`,\r\n          filter: { sector: sector.value }\r\n        })) || []\r\n      },\r\n      {\r\n        title: 'Por Ciudad',\r\n        options: filterOptionsData.cities?.map(city => ({\r\n          label: `${city.label} (${city.count})`,\r\n          filter: { city: city.value }\r\n        })) || []\r\n      }\r\n    ];\r\n  }, [filterOptionsData]);\r\n\r\n  const createMutation = useMutation(createCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente creado exitosamente'),\r\n    onError: (error) => {\r\n      console.error('Error creating client:', error);\r\n      console.error('Error details:', {\r\n        message: error.message,\r\n        status: error.status,\r\n        body: error.body\r\n      });\r\n    }\r\n  });\r\n\r\n  const updateMutation = useMutation(updateCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente actualizado exitosamente'),\r\n    onError: (error) => console.error('Error updating client:', error)\r\n  });\r\n\r\n  const deleteMutation = useMutation(deleteCompany, {\r\n    onSuccess: () => handleMutationSuccess('Cliente eliminado exitosamente'),\r\n    onError: (error) => console.error('Error deleting client:', error)\r\n  });\r\n\r\n  const handleCreate = () => {\r\n    setEditingClient(emptyForm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditingClient(client);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (client) => {\r\n    setDeletingClient(client);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await deleteMutation.mutateAsync(deletingClient.id);\r\n      setDeletingClient(null);\r\n    } catch (error) {\r\n      console.error('Error eliminando cliente:', error);\r\n      setDeletingClient(null);\r\n    }\r\n  };\r\n\r\n  const handleCreateProject = (client) => {\r\n    // Navegar al módulo de proyectos con el cliente pre-seleccionado\r\n    navigate('/proyectos', { \r\n      state: { \r\n        selectedClient: {\r\n          id: client.id,\r\n          name: client.name,\r\n          type: client.type,\r\n          sector: client.sector,\r\n          city: client.city\r\n        }\r\n      } \r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (editingClient.id) {\r\n      await updateMutation.mutateAsync({ id: editingClient.id, ...formData });\r\n    } else {\r\n      await createMutation.mutateAsync(formData);\r\n    }\r\n  };\r\n\r\n  const getTypeBadge = (type) => {\r\n    const typeConfig = {\r\n      'empresa': { bg: 'primary', text: 'Empresa', icon: FiHome },\r\n      'persona': { bg: 'info', text: 'Persona Natural', icon: FiUser }\r\n    };\r\n    \r\n    const config = typeConfig[type] || { bg: 'secondary', text: type, icon: FiUser };\r\n    const Icon = config.icon;\r\n    \r\n    return (\r\n      <Badge bg={config.bg} className=\"status-badge d-flex align-items-center\">\r\n        <Icon size={12} className=\"me-1\" />\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'ID',\r\n      accessor: 'id',\r\n      width: '80px'\r\n    },\r\n    {\r\n      header: 'Cliente',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name}</div>\r\n          <div className=\"d-flex align-items-center gap-2 mt-1\">\r\n            {getTypeBadge(row.type)}\r\n            {row.ruc && (\r\n              <small className=\"text-muted\">RUC: {row.ruc}</small>\r\n            )}\r\n            {row.dni && (\r\n              <small className=\"text-muted\">DNI: {row.dni}</small>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Contacto',\r\n      accessor: 'contact',\r\n      render: (value, row) => (\r\n        <div>\r\n          {row.contact_name && (\r\n            <div className=\"fw-medium\">{row.contact_name}</div>\r\n          )}\r\n          {row.email && (\r\n            <div className=\"d-flex align-items-center mt-1\">\r\n              <FiMail size={12} className=\"me-1 text-muted\" />\r\n              <small className=\"text-muted\">{row.email}</small>\r\n            </div>\r\n          )}\r\n          {row.phone && (\r\n            <div className=\"d-flex align-items-center mt-1\">\r\n              <FiPhone size={12} className=\"me-1 text-muted\" />\r\n              <small className=\"text-muted\">{row.phone}</small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Ciudad',\r\n      accessor: 'city',\r\n      render: (value) => {\r\n        const city = value || 'No especificada';\r\n        let cityColor = 'secondary';\r\n        \r\n        // Asignar colores según la ciudad\r\n        switch (city) {\r\n          case 'Lima':\r\n            cityColor = 'primary';\r\n            break;\r\n          case 'Arequipa':\r\n            cityColor = 'info';\r\n            break;\r\n          case 'Cusco':\r\n            cityColor = 'success';\r\n            break;\r\n          case 'Trujillo':\r\n            cityColor = 'warning';\r\n            break;\r\n          case 'Piura':\r\n            cityColor = 'danger';\r\n            break;\r\n          case 'Chiclayo':\r\n            cityColor = 'info';\r\n            break;\r\n          case 'Iquitos':\r\n            cityColor = 'success';\r\n            break;\r\n          case 'Huancayo':\r\n            cityColor = 'warning';\r\n            break;\r\n          default:\r\n            cityColor = 'secondary';\r\n        }\r\n        \r\n        return (\r\n          <Badge bg={cityColor} className=\"px-2 py-1\">\r\n            {city}\r\n          </Badge>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Sector',\r\n      accessor: 'sector',\r\n      render: (value) => {\r\n        const sector = value || 'General';\r\n        let sectorColor = 'secondary';\r\n        \r\n        // Asignar colores según el sector\r\n        switch (sector) {\r\n          case 'Construcción':\r\n            sectorColor = 'warning';\r\n            break;\r\n          case 'Minería':\r\n            sectorColor = 'dark';\r\n            break;\r\n          case 'Ingeniería':\r\n            sectorColor = 'primary';\r\n            break;\r\n          case 'Laboratorio':\r\n            sectorColor = 'info';\r\n            break;\r\n          case 'Consultoría':\r\n            sectorColor = 'success';\r\n            break;\r\n          case 'Tecnología':\r\n            sectorColor = 'primary';\r\n            break;\r\n          case 'Ambiental':\r\n            sectorColor = 'success';\r\n            break;\r\n          case 'Geología':\r\n            sectorColor = 'info';\r\n            break;\r\n          default:\r\n            sectorColor = 'secondary';\r\n        }\r\n        \r\n        return (\r\n          <Badge bg={sectorColor} className=\"px-2 py-1\">\r\n            {sector}\r\n          </Badge>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      header: 'Dirección',\r\n      accessor: 'address',\r\n      render: (value) => (\r\n        value ? (\r\n          <div className=\"d-flex align-items-center\">\r\n            <FiMapPin size={12} className=\"me-1 text-muted\" />\r\n            <small className=\"text-muted\">{value}</small>\r\n          </div>\r\n        ) : (\r\n          <small className=\"text-muted\">Sin dirección</small>\r\n        )\r\n      )\r\n    },\r\n    {\r\n      header: 'Fecha Registro',\r\n      accessor: 'created_at',\r\n      type: 'date'\r\n    },\r\n    {\r\n      header: 'Acciones',\r\n      accessor: 'actions',\r\n      render: (value, row) => (\r\n        <div className=\"d-flex gap-1\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            size=\"sm\"\r\n            onClick={() => handleEdit(row)}\r\n            title=\"Editar cliente\"\r\n          >\r\n            <FiEdit size={14} />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-success\"\r\n            size=\"sm\"\r\n            onClick={() => handleCreateProject(row)}\r\n            title=\"Crear proyecto para este cliente\"\r\n          >\r\n            <FiFolderPlus size={14} />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => handleDelete(row)}\r\n            title=\"Eliminar cliente\"\r\n          >\r\n            <FiTrash2 size={14} />\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const formFields = [\r\n    {\r\n      name: 'type',\r\n      label: 'Tipo de Cliente',\r\n      type: 'select',\r\n      required: true,\r\n      options: [\r\n        { value: 'empresa', label: 'Empresa' },\r\n        { value: 'persona', label: 'Persona Natural' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'name',\r\n      label: 'Nombre/Razón Social',\r\n      type: 'text',\r\n      required: true,\r\n      placeholder: 'Ingresa el nombre o razón social'\r\n    },\r\n    {\r\n      name: 'ruc',\r\n      label: 'RUC',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el RUC (solo para empresas)',\r\n      help: 'Solo para empresas'\r\n    },\r\n    {\r\n      name: 'dni',\r\n      label: 'DNI',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el DNI (solo para personas)',\r\n      help: 'Solo para personas naturales'\r\n    },\r\n    {\r\n      name: 'contact_name',\r\n      label: 'Nombre de Contacto',\r\n      type: 'text',\r\n      placeholder: 'Ingresa el nombre del contacto'\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeholder: 'contacto@empresa.com'\r\n    },\r\n    {\r\n      name: 'phone',\r\n      label: 'Teléfono',\r\n      type: 'text',\r\n      placeholder: '+51 999 999 999'\r\n    },\r\n    {\r\n      name: 'address',\r\n      label: 'Dirección',\r\n      type: 'textarea',\r\n      placeholder: 'Ingresa la dirección completa'\r\n    },\r\n    {\r\n      name: 'city',\r\n      label: 'Ciudad',\r\n      type: 'text',\r\n      placeholder: 'Escribe la ciudad (ej: Lima, Arequipa, Cusco...)',\r\n      autocomplete: true,\r\n      suggestions: [\r\n        'Lima', 'Arequipa', 'Cusco', 'Trujillo', 'Piura', 'Chiclayo', 'Iquitos', 'Huancayo',\r\n        'Tacna', 'Cajamarca', 'Ayacucho', 'Puno', 'Juliaca', 'Chimbote', 'Huaraz', 'Abancay',\r\n        'Andahuaylas', 'Tumbes', 'Pucallpa', 'Tarapoto', 'Moyobamba', 'Cerro de Pasco', 'Huánuco',\r\n        'Ica', 'Nazca', 'Chincha', 'Cañete', 'Barranca', 'Huaral', 'Callao', 'Ventanilla',\r\n        'San Juan de Miraflores', 'Villa El Salvador', 'San Martín de Porres', 'Comas',\r\n        'Los Olivos', 'San Miguel', 'Pueblo Libre', 'Jesús María', 'Magdalena', 'San Isidro',\r\n        'Miraflores', 'Surco', 'La Molina', 'Ate', 'Santa Anita', 'El Agustino', 'San Juan de Lurigancho',\r\n        'Lurigancho', 'Chosica', 'Chaclacayo', 'Cieneguilla', 'Pachacámac', 'Punta Hermosa',\r\n        'Punta Negra', 'San Bartolo', 'Santa María del Mar', 'Pucusana', 'Asia', 'Mala',\r\n        'San Vicente de Cañete', 'Imperial', 'Nuevo Imperial', 'Quilmaná', 'San Luis',\r\n        'San Pedro de Lloc', 'Pacasmayo', 'Guadalupe', 'Jequetepeque', 'Chepén', 'Cascas',\r\n        'Contumazá', 'Cupisnique', 'Guzmango', 'San Benito', 'San Diego', 'San José',\r\n        'San Pablo', 'Tembladera', 'Yonán', 'Zaña', 'Cajabamba', 'Cajamarca', 'Celendín',\r\n        'Chota', 'Contumazá', 'Cutervo', 'Hualgayoc', 'Jaén', 'San Ignacio', 'San Marcos',\r\n        'San Miguel', 'San Pablo', 'Santa Cruz', 'Bagua', 'Bongará', 'Condorcanqui',\r\n        'Luya', 'Rodríguez de Mendoza', 'Utcubamba', 'Chachapoyas', 'Asunción', 'Balsas',\r\n        'Cheto', 'Chiliquín', 'Chuquibamba', 'Granada', 'Huancas', 'La Jalca', 'Leimebamba',\r\n        'Levanto', 'Magdalena', 'Mariscal Castilla', 'Molinopampa', 'Montevideo', 'Olleros',\r\n        'Quinjalca', 'San Francisco de Daguas', 'San Isidro de Maino', 'Soloco', 'Sonche',\r\n        'Abancay', 'Andahuaylas', 'Antabamba', 'Aymaraes', 'Chincheros', 'Cotabambas',\r\n        'Grau', 'Huancarama', 'Huancaray', 'Huanipaca', 'Kishuara', 'Lambrama', 'Pacobamba',\r\n        'Pacucha', 'Pampachiri', 'Pomacocha', 'San Antonio de Cachi', 'San Jerónimo',\r\n        'San Miguel de Chaccrampa', 'Santa María de Chicmo', 'Talavera', 'Tamburco',\r\n        'Andahuaylas', 'Antabamba', 'Aymaraes', 'Chincheros', 'Cotabambas', 'Grau',\r\n        'Huancarama', 'Huancaray', 'Huanipaca', 'Kishuara', 'Lambrama', 'Pacobamba',\r\n        'Pacucha', 'Pampachiri', 'Pomacocha', 'San Antonio de Cachi', 'San Jerónimo',\r\n        'San Miguel de Chaccrampa', 'Santa María de Chicmo', 'Talavera', 'Tamburco'\r\n      ]\r\n    },\r\n    {\r\n      name: 'sector',\r\n      label: 'Sector',\r\n      type: 'text',\r\n      placeholder: 'Escribe el sector (ej: Construcción, Minería, Tecnología...)',\r\n      autocomplete: true,\r\n      suggestions: [\r\n        'General', 'Construcción', 'Minería', 'Ingeniería', 'Laboratorio', 'Consultoría', \r\n        'Tecnología', 'Ambiental', 'Geología', 'Agricultura', 'Ganadería', 'Pesca',\r\n        'Manufactura', 'Textil', 'Alimentario', 'Farmacéutico', 'Químico', 'Petroquímico',\r\n        'Energía', 'Electricidad', 'Gas', 'Agua', 'Saneamiento', 'Transporte', 'Logística',\r\n        'Comercio', 'Retail', 'Mayorista', 'Distribución', 'Servicios Financieros', 'Banca',\r\n        'Seguros', 'Inversiones', 'Bienes Raíces', 'Inmobiliaria', 'Turismo', 'Hotelería',\r\n        'Restaurantes', 'Entretenimiento', 'Medios', 'Comunicaciones', 'Telecomunicaciones',\r\n        'Software', 'Hardware', 'Sistemas', 'Internet', 'E-commerce', 'Marketing', 'Publicidad',\r\n        'Educación', 'Capacitación', 'Investigación', 'Desarrollo', 'Salud', 'Medicina',\r\n        'Farmacéutica', 'Biotecnología', 'Gobierno', 'Público', 'Defensa', 'Seguridad',\r\n        'Legal', 'Jurídico', 'Contable', 'Auditoría', 'Recursos Humanos', 'Administración',\r\n        'Gestión', 'Consultoría Empresarial', 'Outsourcing', 'Servicios Profesionales',\r\n        'Arquitectura', 'Diseño', 'Arte', 'Cultura', 'Deportes', 'Recreación', 'ONG',\r\n        'Fundaciones', 'Religioso', 'Espiritual', 'Otro'\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Calcular estadísticas\r\n  const stats = useMemo(() => {\r\n    // Usar estadísticas reales del backend si están disponibles\r\n    if (statsData && statsData.data) {\r\n      console.log('📊 Stats - Usando estadísticas reales del backend:', statsData);\r\n      console.log('📊 Stats - Datos extraídos:', statsData.data);\r\n      return {\r\n        total: statsData.data.total || 0,\r\n        empresas: statsData.data.empresas || 0,\r\n        personas: statsData.data.personas || 0,\r\n        conEmail: statsData.data.withEmail || 0,\r\n        conTelefono: statsData.data.withPhone || 0\r\n      };\r\n    }\r\n    \r\n    // Fallback: calcular desde los datos de la página actual\r\n    const companies = data?.data || [];\r\n    console.log('📊 Stats - Fallback: calculando desde página actual:', companies);\r\n    return {\r\n      total: companies.length,\r\n      empresas: companies.filter(c => c.type === 'empresa').length,\r\n      personas: companies.filter(c => c.type === 'persona').length,\r\n      conEmail: companies.filter(c => c.email).length,\r\n      conTelefono: companies.filter(c => c.phone).length\r\n    };\r\n  }, [statsData, data]);\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <div className=\"fade-in\">\r\n        <PageHeader\r\n          title=\"Gestión de Clientes\"\r\n          subtitle=\"Crear, editar y gestionar clientes del sistema\"\r\n          icon={FiUsers}\r\n          actions={\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={handleCreate}\r\n              disabled={!userCanCreateClient}\r\n              title={!userCanCreateClient ? `No tienes permisos para crear clientes. Rol actual: ${currentUser?.role || 'No autenticado'}` : 'Crear nuevo cliente'}\r\n            >\r\n              <FiPlus className=\"me-2\" />\r\n              Nuevo Cliente\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        {/* Información de depuración */}\r\n        {!userCanCreateClient && (\r\n          <div className=\"alert alert-warning mb-4\" role=\"alert\">\r\n            <strong>⚠️ Permisos insuficientes:</strong> Tu rol actual ({currentUser?.role || 'No autenticado'}) no tiene permisos para crear clientes. \r\n            Solo los roles <code>admin</code>, <code>jefa_comercial</code> y <code>vendedor_comercial</code> pueden crear clientes.\r\n          </div>\r\n        )}\r\n\r\n        {/* Estadísticas */}\r\n        <Row className=\"g-4 mb-4\">\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Total Clientes\"\r\n              value={stats.total}\r\n              icon={FiUsers}\r\n              color=\"primary\"\r\n              subtitle=\"Clientes registrados\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Empresas\"\r\n              value={stats.empresas}\r\n              icon={FiBuilding}\r\n              color=\"success\"\r\n              subtitle=\"Clientes corporativos\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Personas\"\r\n              value={stats.personas}\r\n              icon={FiUser}\r\n              color=\"info\"\r\n              subtitle=\"Clientes individuales\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <StatsCard\r\n              title=\"Con Contacto\"\r\n              value={stats.conEmail}\r\n              icon={FiMail}\r\n              color=\"warning\"\r\n              subtitle=\"Con email registrado\"\r\n              loading={statsLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Tabla de clientes */}\r\n        <Card className=\"shadow-sm border-0\">\r\n          <Card.Header className=\"bg-white border-bottom\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"mb-0\">\r\n                <FiUsers className=\"me-2 text-primary\" />\r\n                Lista de Clientes\r\n              </h5>\r\n              <Badge bg=\"light\" text=\"dark\" className=\"px-3 py-2\">\r\n                {stats.total} clientes\r\n              </Badge>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <DataTable\r\n              data={data?.data || []}\r\n              columns={columns}\r\n              loading={isLoading || isSearching}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              emptyMessage=\"No hay clientes registrados\"\r\n              // Props para paginación del backend\r\n              totalItems={data?.pagination?.total || 0}\r\n              itemsPerPage={data?.pagination?.limit || 20}\r\n              currentPage={currentPage}\r\n              onPageChange={setCurrentPage}\r\n              onSearch={handleSearch}\r\n              onFilter={handleFilter}\r\n              // Filtros específicos para clientes\r\n              filterOptions={clientFilterOptions}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      <ModalForm\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        title={editingClient?.id ? 'Editar Cliente' : 'Nuevo Cliente'}\r\n        data={editingClient || emptyForm}\r\n        fields={formFields}\r\n        onSubmit={handleSubmit}\r\n        loading={createMutation.isLoading || updateMutation.isLoading}\r\n        submitText={editingClient?.id ? 'Actualizar' : 'Crear'}\r\n      />\r\n\r\n      {/* Modal de confirmación para eliminar cliente */}\r\n      <ConfirmModal\r\n        show={!!deletingClient}\r\n        onHide={() => setDeletingClient(null)}\r\n        onConfirm={confirmDelete}\r\n        title=\"Eliminar Cliente\"\r\n        message={`¿Estás seguro de que quieres eliminar el cliente \"${deletingClient?.name}\"?`}\r\n        confirmText=\"Eliminar\"\r\n        variant=\"danger\"\r\n        isLoading={deleteMutation.isLoading}\r\n        alertMessage=\"Esta acción eliminará permanentemente el cliente y todos sus datos asociados (proyectos, cotizaciones, etc.).\"\r\n        alertVariant=\"danger\"\r\n      />\r\n      </div>\r\n    </Container>\r\n  );\r\n};"],"names":["getCurrentUser","token","payload","error","hasRole","requiredRoles","user","canCreateClient","canEditClient","canDeleteClient","logUserInfo","emptyForm","Clientes","showModal","setShowModal","useState","editingClient","setEditingClient","deletingClient","setDeletingClient","currentUser","userCanCreateClient","React","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedType","setSelectedType","selectedCity","setSelectedCity","selectedSector","setSelectedSector","isSearching","setIsSearching","queryClient","useQueryClient","navigate","useNavigate","data","isLoading","refetch","useQuery","listCompanies","statsData","statsLoading","statsError","getCompanyStats","filterOptionsData","filterOptionsLoading","getCompanyFilterOptions","handleMutationSuccess","message","handleSearch","searchValue","handleFilter","filters","clientFilterOptions","useMemo","_a","type","_b","sector","_c","city","createMutation","useMutation","createCompany","updateMutation","updateCompany","deleteMutation","deleteCompany","handleCreate","handleEdit","client","handleDelete","confirmDelete","handleCreateProject","handleSubmit","formData","getTypeBadge","config","FiHome","FiUser","Icon","Badge","jsx","columns","value","row","jsxs","FiMail","FiPhone","cityColor","sectorColor","FiMapPin","Button","FiEdit","FiFolderPlus","FiTrash2","formFields","stats","companies","c","Container","PageHeader","FiUsers","FiPlus","Row","Col","StatsCard","FiBuilding","Card","DataTable","ModalForm","ConfirmModal"],"mappings":"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"}