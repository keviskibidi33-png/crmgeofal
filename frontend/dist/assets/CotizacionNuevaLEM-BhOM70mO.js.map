{"version":3,"file":"CotizacionNuevaLEM-BhOM70mO.js","sources":["../../src/pages/CotizacionNuevaLEM.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport ModuloBase from '../components/ModuloBase';\r\nimport { listVariants } from '../services/quoteVariants';\r\nimport { createQuote, addQuoteItem } from '../services/quotes';\r\nimport { getExistingServices, listProjects } from '../services/projects';\r\nimport CompanyProjectPicker from '../components/CompanyProjectPicker';\r\nimport './CotizacionNuevaLEM.css';\r\nimport '../styles/autocomplete.css';\r\n\r\nconst emptyClient = {\r\n  company_name: '', ruc: '', contact_name: '', contact_phone: '', contact_email: '',\r\n  project_location: '', project_name: '', service_name: '',\r\n};\r\n\r\nconst emptyQuote = {\r\n  request_date: '', issue_date: '', commercial_name: '', payment_terms: 'adelantado', acceptance: false, reference: '', reference_type: ['email', 'phone'], igv: true,\r\n};\r\n\r\nconst emptyItem = { code: '', description: '', norm: '', unit_price: 0, quantity: 1 };\r\n\r\nfunction computePartial(item) {\r\n  const u = Number(item.unit_price || 0);\r\n  const q = Number(item.quantity || 0);\r\n  return Number((u * q).toFixed(2));\r\n}\r\n\r\nfunction suggestedFileName(seq = 'xxx-XX', client = '') {\r\n  const clientName = (client || '').toUpperCase().trim() || 'NOMBRE DEL CLIENTE';\r\n  return `Cotización ${seq} LEM-GEOFAL-${clientName}`;\r\n}\r\n\r\nconst normalizeKey = (s = '') => (s || '')\r\n  .normalize('NFD')\r\n  .replace(/[\\u0300-\\u036f]/g, '')\r\n  .toUpperCase()\r\n  .trim();\r\n\r\nconst VARIANT_TEXTS = {\r\n  [normalizeKey('MUESTRA DE SUELO Y AGREGADO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('PROBETAS')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente debe proporcionar las probetas antes del ingreso a obra.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('DENSIDAD DE CAMPO Y MUESTREO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, para los ensayo en suelo y agregados, la cantidad minima de 100 kg por cada muestra.\\n- Para el ensayo de Densidad de campo, la cantidad de puntos/salida minimo 4 und.\\n- El cliente deberá de programar el servicio, Densidad de campo, con 24 horas de anticipación.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima.`,\r\n  [normalizeKey('EXTRACCIÓN DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  // alias sin acentos\r\n  [normalizeKey('EXTRACCION DE DIAMANTINA')]: `CONDICIONES ESPECÍFICAS:\\n- Movilización y desmovilización de equipos y del personal técnico, estara a cargo de GEOFAL.\\n- Resane de estructura de concreto con sika rep 500 y Sikadur 32, estara a cargo de GEOFAL.\\n- El servicio no incluye trabajos de acabados como pintura, mayolica y otros.\\n- El area de trabajo, zona de extracción de diamantina, tiene que estar libre de interferencia.\\n- La extracción de diamantina se realizara en 2 dia en campo, en laboratorio se realizará el tallado y refrentado de diamantina, el ensayo de resistencia a la compresión de testigo de diamantina se realizara en 5 dias (el tiempo de ensayo obedece a la normativa vigente).\\n- Costo de resane insumos 250 soles, este costo se distribuira de acuerdo con el numero de perforaciones Donde se hara las extracciones de diamantina`,\r\n  [normalizeKey('DIAMANTINA PARA PASES')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Extracción diamantina, con 24 horas de anticipación.\\n- El area de trabajo, zona de extraccion de diamantina, debera estar libre de interferencia.\\n- Para extraer la diamantina, se ubicara el acero con un escaneador.\\n- Movilizacion y desmovilizacion de equipos y del personal tecnico, estara a cargo de Geofal.`,\r\n  [normalizeKey('ALBAÑILERÍA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  // alias sin ñ\r\n  [normalizeKey('ALBANILERIA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá enviar al laboratorio, 20 ladrillo de cada tipo, en buen estado y sin presentar fisuras.\\n- El cliente deberá de entregar las muestras debidamente identificadas.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.\\n- El cliente deberá entregar las muestras en las instalaciones del LEM, ubicado en la Av. Marañón N° 763, Los Olivos, Lima`,\r\n  [normalizeKey('VIGA BECKELMAN')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, Ensayo de Deflexión, con 24 horas de anticipación.\\n- El area de trabajo tiene que estar habilitado.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP o MTC vigente de acuerdo con el alcance del laboratorio.\\n- Especificar las caracteristicas del camion`,\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n  // alias más corto usado en análisis\r\n  [normalizeKey('CONTROL DE CALIDAD DE CONCRETO FRESCO')]: `CONDICIONES ESPECÍFICAS:\\n- El cliente deberá de programar el servicio, con 24 horas de anticipación.\\n- Para el ensayo de control de calidad de concreto fresco en obra, se moldeara 6 probetas, ensayo slump, control de temperatura, en laboratorio las probetas se colocara en camara de curado, el ensayo de compresión de las probetas seran 3 a 7 dias y 3 a 28 dias.\\n- El control de calidad del concreto fresco se sacara cada 50m3 a uno de los mixer donde se hara todos los ensayos respectivos mencionados, o por dia asi no se halla llegado los 50m3.\\n- El cliente deberá especificar la Norma a ser utilizada para la ejecución del ensayo, caso contrario se considera Norma ASTM o NTP vigente de acuerdo con el alcance del laboratorio.`,\r\n};\r\n\r\nconst getVariantText = (v) => {\r\n  const t = normalizeKey(v?.title || '');\r\n  if (VARIANT_TEXTS[t]) return VARIANT_TEXTS[t];\r\n  // intento de match por inclusión si el título difiere levemente\r\n  const entry = Object.entries(VARIANT_TEXTS).find(([k]) => t.includes(k) || k.includes(t));\r\n  return entry ? entry[1] : '';\r\n};\r\n\r\nexport default function CotizacionNuevaLEM() {\r\n  const [variants, setVariants] = useState([]);\r\n  const [variantId, setVariantId] = useState('');\r\n  const [client, setClient] = useState(emptyClient);\r\n  const [selection, setSelection] = useState({ company_id: null, project_id: null, company: null, project: null });\r\n  const [quote, setQuote] = useState(emptyQuote);\r\n  const [items, setItems] = useState([{ ...emptyItem }]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [conditionsText, setConditionsText] = useState('');\r\n  const [currentStep, setCurrentStep] = useState(1); // 1: Cliente/Proyecto, 2: Condiciones, 3: Ítems, 4: Resumen\r\n  const [lastSavedId, setLastSavedId] = useState(null);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const [allServices, setAllServices] = useState([]);\r\n  const [serviceSuggestions, setServiceSuggestions] = useState([]);\r\n  const [showServiceSuggestions, setShowServiceSuggestions] = useState(false);\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [projectSuggestions, setProjectSuggestions] = useState([]);\r\n  const [showProjectSuggestions, setShowProjectSuggestions] = useState(false);\r\n  const [suggestedFileName, setSuggestedFileName] = useState('');\r\n  \r\n  // Etiquetas predefinidas para referencia\r\n  const referenceTypes = [\r\n    { value: 'email', label: '📧 Correo electrónico', icon: '📧' },\r\n    { value: 'phone', label: '📞 Llamada telefónica', icon: '📞' },\r\n    { value: 'ticket', label: '🎯 Sistema de tickets', icon: '🎯' },\r\n    { value: 'meeting', label: '🤝 Reunión presencial', icon: '🤝' },\r\n    { value: 'form', label: '📋 Formulario web', icon: '📋' },\r\n    { value: 'referral', label: '👥 Referido', icon: '👥' },\r\n    { value: 'other', label: '📝 Otro', icon: '📝' }\r\n  ];\r\n\r\n  // Cargar variantes desde API con fallback local\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const v = await listVariants({ active: true });\r\n        const loaded = v || [];\r\n        if (loaded.length > 0) {\r\n          setVariants(loaded);\r\n        } else {\r\n          const fallback = [\r\n            { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n            { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n            { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n            { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n            { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n            { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n            { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n            { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n          ];\r\n          setVariants(fallback);\r\n        }\r\n      } catch {\r\n        setVariants([\r\n          { id: 'V1', code: 'V1', title: 'MUESTRA DE SUELO Y AGREGADO', description: getVariantText({ title: 'MUESTRA DE SUELO Y AGREGADO' }) },\r\n          { id: 'V2', code: 'V2', title: 'PROBETAS', description: getVariantText({ title: 'PROBETAS' }) },\r\n          { id: 'V3', code: 'V3', title: 'DENSIDAD DE CAMPO Y MUESTREO', description: getVariantText({ title: 'DENSIDAD DE CAMPO Y MUESTREO' }) },\r\n          { id: 'V4', code: 'V4', title: 'EXTRACCIÓN DE DIAMANTINA', description: getVariantText({ title: 'EXTRACCIÓN DE DIAMANTINA' }) },\r\n          { id: 'V5', code: 'V5', title: 'DIAMANTINA PARA PASES', description: getVariantText({ title: 'DIAMANTINA PARA PASES' }) },\r\n          { id: 'V6', code: 'V6', title: 'ALBAÑILERÍA', description: getVariantText({ title: 'ALBAÑILERÍA' }) },\r\n          { id: 'V7', code: 'V7', title: 'VIGA BECKELMAN', description: getVariantText({ title: 'VIGA BECKELMAN' }) },\r\n          { id: 'V8', code: 'V8', title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA', description: getVariantText({ title: 'CONTROL DE CALIDAD DE CONCRETO FRESCO EN OBRA' }) },\r\n        ]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Cargar servicios existentes para autocompletado\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const services = await getExistingServices();\r\n        // Combinar servicios de proyectos con servicios predefinidos\r\n        const predefinedServices = [\r\n          { service_name: 'Ensayos de suelo y agregado', usage_count: 0 },\r\n          { service_name: 'Extracción de diamantina', usage_count: 0 },\r\n          { service_name: 'Control de calidad de concreto fresco', usage_count: 0 },\r\n          { service_name: 'Densidad de campo y muestreo', usage_count: 0 },\r\n          { service_name: 'Probetas de concreto', usage_count: 0 },\r\n          { service_name: 'Viga Beckelman', usage_count: 0 },\r\n          { service_name: 'Albañilería', usage_count: 0 },\r\n          { service_name: 'Diamantina para pases', usage_count: 0 },\r\n          { service_name: 'Consultoría geotécnica', usage_count: 0 },\r\n          { service_name: 'Capacitación técnica', usage_count: 0 },\r\n          { service_name: 'Auditoría de calidad', usage_count: 0 },\r\n          { service_name: 'Estudios de suelos', usage_count: 0 },\r\n          { service_name: 'Análisis de materiales', usage_count: 0 },\r\n          { service_name: 'Inspección de obras', usage_count: 0 },\r\n          { service_name: 'Certificación de materiales', usage_count: 0 }\r\n        ];\r\n        \r\n        // Combinar y eliminar duplicados\r\n        const allServicesCombined = [...predefinedServices];\r\n        services.forEach(service => {\r\n          if (!allServicesCombined.find(s => s.service_name === service.service_name)) {\r\n            allServicesCombined.push(service);\r\n          }\r\n        });\r\n        \r\n        setAllServices(allServicesCombined);\r\n        setServiceSuggestions(allServicesCombined);\r\n      } catch (e) {\r\n        console.warn('No se pudieron cargar servicios existentes:', e);\r\n        // Usar solo servicios predefinidos como fallback\r\n        const fallbackServices = [\r\n          { service_name: 'Ensayos de suelo y agregado', usage_count: 0 },\r\n          { service_name: 'Extracción de diamantina', usage_count: 0 },\r\n          { service_name: 'Control de calidad de concreto fresco', usage_count: 0 },\r\n          { service_name: 'Densidad de campo y muestreo', usage_count: 0 },\r\n          { service_name: 'Probetas de concreto', usage_count: 0 }\r\n        ];\r\n        setAllServices(fallbackServices);\r\n        setServiceSuggestions(fallbackServices);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Cargar proyectos existentes para autocompletado\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await listProjects({ page: 1, limit: 100 });\r\n        const projects = response.data || [];\r\n        setAllProjects(projects);\r\n        setProjectSuggestions(projects);\r\n      } catch (e) {\r\n        console.warn('No se pudieron cargar proyectos existentes:', e);\r\n        setAllProjects([]);\r\n        setProjectSuggestions([]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Detectar estado del sidebar\r\n  useEffect(() => {\r\n    const checkSidebarState = () => {\r\n      const sidebar = document.querySelector('.sidebar');\r\n      if (sidebar) {\r\n        setSidebarCollapsed(sidebar.classList.contains('collapsed'));\r\n      }\r\n    };\r\n\r\n    // Verificar estado inicial\r\n    checkSidebarState();\r\n\r\n    // Observar cambios en el sidebar\r\n    const observer = new MutationObserver(checkSidebarState);\r\n    const sidebar = document.querySelector('.sidebar');\r\n    if (sidebar) {\r\n      observer.observe(sidebar, { attributes: true, attributeFilter: ['class'] });\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Autocompletar datos del cliente cuando se selecciona en CompanyProjectPicker\r\n  useEffect(() => {\r\n    if (selection.company) {\r\n      setClient(prev => ({\r\n        ...prev,\r\n        company_name: selection.company.name || prev.company_name,\r\n        ruc: selection.company.ruc || prev.ruc,\r\n        contact_name: selection.company.contact_name || prev.contact_name,\r\n        contact_phone: selection.company.phone || prev.contact_phone,\r\n        contact_email: selection.company.email || prev.contact_email,\r\n        project_location: selection.project?.location || prev.project_location,\r\n        project_name: selection.project?.name || prev.project_name\r\n      }));\r\n    }\r\n  }, [selection.company, selection.project]);\r\n\r\n  // Auto-completar datos del asesor comercial según el usuario logueado\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n        if (payload.name) {\r\n          setQuote(prev => ({\r\n            ...prev,\r\n            commercial_name: payload.name\r\n          }));\r\n        }\r\n      } catch (e) {\r\n        console.warn('No se pudo decodificar el token:', e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Generar nombre de archivo automáticamente cuando cambien los datos del cliente\r\n  useEffect(() => {\r\n    if (client.company_name) {\r\n      const fileName = generateFileName();\r\n      setSuggestedFileName(fileName);\r\n    }\r\n  }, [client.company_name]);\r\n\r\n  // Generar texto de referencia automáticamente cuando cambien las etiquetas\r\n  useEffect(() => {\r\n    if (quote.reference_type && quote.reference_type.length > 0) {\r\n      const referenceText = generateReferenceText(quote.reference_type);\r\n      setQuote(prev => ({ ...prev, reference: referenceText }));\r\n    }\r\n  }, [quote.reference_type]);\r\n\r\n  // Inicializar texto de referencia por defecto\r\n  useEffect(() => {\r\n    if (quote.reference_type && quote.reference_type.length > 0 && !quote.reference) {\r\n      const referenceText = generateReferenceText(quote.reference_type);\r\n      setQuote(prev => ({ ...prev, reference: referenceText }));\r\n    }\r\n  }, []);\r\n\r\n  // Funciones para manejar autocompletado de servicios\r\n  const handleServiceInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setClient(prev => ({ ...prev, service_name: value }));\r\n    \r\n    if (value.length > 0) {\r\n      const filtered = allServices.filter(service => \r\n        service.service_name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setServiceSuggestions(filtered);\r\n      setShowServiceSuggestions(true);\r\n    } else {\r\n      setServiceSuggestions(allServices);\r\n      setShowServiceSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleServiceSuggestionClick = (serviceName) => {\r\n    setClient(prev => ({ ...prev, service_name: serviceName }));\r\n    setShowServiceSuggestions(false);\r\n  };\r\n\r\n  const handleServiceBlur = () => {\r\n    // Delay para permitir que se ejecute el click en la sugerencia\r\n    setTimeout(() => setShowServiceSuggestions(false), 200);\r\n  };\r\n\r\n  // Funciones para manejar autocompletado de proyectos\r\n  const handleProjectInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setClient(prev => ({ ...prev, project_name: value }));\r\n    \r\n    if (value.length > 0) {\r\n      const filtered = allProjects.filter(project => \r\n        project.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setProjectSuggestions(filtered);\r\n      setShowProjectSuggestions(true);\r\n    } else {\r\n      setProjectSuggestions(allProjects);\r\n      setShowProjectSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleProjectSuggestionClick = (projectName) => {\r\n    setClient(prev => ({ ...prev, project_name: projectName }));\r\n    setShowProjectSuggestions(false);\r\n  };\r\n\r\n  const handleProjectBlur = () => {\r\n    // Delay para permitir que se ejecute el click en la sugerencia\r\n    setTimeout(() => setShowProjectSuggestions(false), 200);\r\n  };\r\n\r\n  // Generar nombre de archivo automáticamente\r\n  const generateFileName = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = String(new Date().getMonth() + 1).padStart(2, '0');\r\n    const currentDay = String(new Date().getDate()).padStart(2, '0');\r\n    \r\n    // Generar código de cotización\r\n    const quoteCode = `COT-${currentYear}-${currentMonth}${currentDay}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`;\r\n    \r\n    // Obtener nombre del cliente (limpio para archivo)\r\n    const clientName = client.company_name || 'CLIENTE';\r\n    const cleanClientName = clientName\r\n      .replace(/[^a-zA-Z0-9\\s]/g, '') // Remover caracteres especiales\r\n      .replace(/\\s+/g, '_') // Reemplazar espacios con guiones bajos\r\n      .toUpperCase()\r\n      .substring(0, 30); // Limitar longitud\r\n    \r\n    return `${quoteCode} LEM-GEOFAL-${cleanClientName}`;\r\n  };\r\n\r\n  // Generar texto de referencia automáticamente\r\n  const generateReferenceText = (selectedTypes) => {\r\n    if (!selectedTypes || selectedTypes.length === 0) {\r\n      return 'SEGÚN LO SOLICITADO';\r\n    }\r\n    \r\n    const typeLabels = selectedTypes.map(type => {\r\n      const refType = referenceTypes.find(rt => rt.value === type);\r\n      return refType ? refType.label.replace(/^[^\\s]+\\s/, '') : type; // Remover emoji\r\n    });\r\n    \r\n    if (typeLabels.length === 1) {\r\n      return `SEGÚN LO SOLICITADO VÍA ${typeLabels[0].toUpperCase()}`;\r\n    } else if (typeLabels.length === 2) {\r\n      return `SEGÚN LO SOLICITADO VÍA ${typeLabels[0].toUpperCase()} / ${typeLabels[1].toUpperCase()}`;\r\n    } else {\r\n      const lastType = typeLabels.pop();\r\n      return `SEGÚN LO SOLICITADO VÍA ${typeLabels.join(', ').toUpperCase()} Y ${lastType.toUpperCase()}`;\r\n    }\r\n  };\r\n\r\n  const subtotal = useMemo(() => items.reduce((acc, it) => acc + computePartial(it), 0), [items]);\r\n  const igvAmount = useMemo(() => (quote.igv ? Number((subtotal * 0.18).toFixed(2)) : 0), [subtotal, quote.igv]);\r\n  const total = useMemo(() => Number((subtotal + igvAmount).toFixed(2)), [subtotal, igvAmount]);\r\n\r\n  const onAddItem = () => setItems([...items, { ...emptyItem }]);\r\n  const onRemoveItem = (idx) => setItems(items.filter((_, i) => i !== idx));\r\n  const onChangeItem = (idx, patch) => setItems(items.map((it, i) => (i === idx ? { ...it, ...patch } : it)));\r\n\r\n  // Autocompletar campos desde la variante seleccionada\r\n  useEffect(() => {\r\n    if (!variantId) return;\r\n    const v = (variants || []).find(x => String(x.id) === String(variantId));\r\n    if (!v) return;\r\n    const c = v.conditions || {};\r\n    setQuote(prev => ({\r\n      ...prev,\r\n      payment_terms: c.default_payment_terms || prev.payment_terms,\r\n      acceptance: typeof c.default_acceptance === 'boolean' ? c.default_acceptance : prev.acceptance,\r\n      igv: typeof c.default_igv === 'boolean' ? c.default_igv : prev.igv,\r\n      reference: c.default_reference || prev.reference,\r\n    }));\r\n    // Autollenar textarea de Condiciones específicas con el texto exacto\r\n    const extra = getVariantText(v) || v.description || '';\r\n    if (extra) setConditionsText(extra);\r\n    if (Array.isArray(c.default_items) && items.length <= 1 && !items[0].code && !items[0].description && !items[0].norm) {\r\n      const mapped = c.default_items.map(di => ({\r\n        code: di.code || '',\r\n        description: di.description || '',\r\n        norm: di.norm || '',\r\n        unit_price: Number(di.unit_price || 0),\r\n        quantity: Number(di.quantity || 1),\r\n      }));\r\n      if (mapped.length) setItems(mapped);\r\n    }\r\n    if (c.default_service_name && !client.service_name) {\r\n      setClient(prev => ({ ...prev, service_name: c.default_service_name }));\r\n    }\r\n  }, [variantId]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      console.log('🔍 onSubmit - Iniciando creación de cotización...');\r\n      console.log('🔍 onSubmit - Selection:', selection);\r\n      console.log('🔍 onSubmit - Client:', client);\r\n      console.log('🔍 onSubmit - Quote:', quote);\r\n      \r\n      // Validar que tenemos un proyecto seleccionado\r\n      if (!selection.project?.id && !selection.project_id) {\r\n        throw new Error('Debe seleccionar un proyecto para crear la cotización');\r\n      }\r\n      \r\n      // Construir payload de cotización base\r\n      const numericVariantId = /^\\d+$/.test(String(variantId)) ? Number(variantId) : null;\r\n      const payload = {\r\n        project_id: selection.project?.id || selection.project_id,\r\n        variant_id: numericVariantId,\r\n        client_contact: client.contact_name,\r\n        client_email: client.contact_email,\r\n        client_phone: client.contact_phone,\r\n        issue_date: quote.issue_date || new Date().toISOString().slice(0, 10),\r\n        subtotal,\r\n        igv: igvAmount,\r\n        total,\r\n        status: 'borrador',\r\n        reference: quote.reference,\r\n        reference_type: quote.reference_type,\r\n        // campos adicionales útiles\r\n        meta: {\r\n          customer: client,\r\n          quote,\r\n          conditions_text: conditionsText,\r\n          payment_terms: quote.payment_terms,\r\n          acceptance: quote.acceptance,\r\n          file_name: suggestedFileName || generateFileName(),\r\n        }\r\n      };\r\n      \r\n      console.log('🔍 onSubmit - Payload:', payload);\r\n      \r\n      const saved = await createQuote(payload);\r\n      console.log('✅ onSubmit - Cotización creada:', saved);\r\n      \r\n      // Añadir ítems\r\n      for (const it of items) {\r\n        if (it.code && it.description) { // Solo agregar ítems con datos\r\n          await addQuoteItem({\r\n            quote_id: saved.id,\r\n            code: it.code,\r\n            description: it.description,\r\n            norm: it.norm,\r\n            unit_price: Number(it.unit_price || 0),\r\n            quantity: Number(it.quantity || 0),\r\n            partial_price: computePartial(it),\r\n          });\r\n        }\r\n      }\r\n      \r\n      alert('Cotización creada exitosamente');\r\n      // Guardar id para exportaciones\r\n      setLastSavedId(saved.id);\r\n      // Redirigir a detalle/edición en el futuro\r\n    } catch (e) {\r\n      console.error('❌ onSubmit - Error:', e);\r\n      setError(e.message || 'Error al crear cotización');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const exportFile = async (type) => {\r\n    try {\r\n      const id = lastSavedId; // en futuro usar id de ruta/estado\r\n      if (!id) return alert('Guarde la cotización antes de exportar');\r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/${type}`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      // abre en nueva pestaña para descargar\r\n      window.open(url, '_blank');\r\n    } catch (e) {\r\n      alert('No se pudo exportar');\r\n    }\r\n  };\r\n\r\n  const exportDraft = async () => {\r\n    try {\r\n      const id = lastSavedId;\r\n      if (!id) return alert('Guarde la cotización antes de generar el borrador');\r\n      const base = import.meta.env?.VITE_API_URL?.replace(/\\/$/, '') || '';\r\n      const path = `/api/quotes/${id}/export/pdf-draft`;\r\n      const url = base && /\\/api$/i.test(base) ? `${base}${path.replace(/^\\/api/, '')}` : `${base}${path}`;\r\n      window.open(url, '_blank');\r\n    } catch {\r\n      alert('No se pudo generar el borrador');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModuloBase titulo=\"Nueva Cotización LEM\" descripcion=\"Plantilla de cotización para Laboratorio con variantes y condiciones\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={onSubmit} className=\"lem-quote-page\">\r\n        <div className=\"alert alert-light border mt-3 lem-intro\">\r\n          Completa el formulario para crear una nueva cotización del Laboratorio (LEM). Los campos están agrupados por sección para facilitar el flujo.\r\n        </div>\r\n\r\n        {/* Stepper */}\r\n        <div className=\"lem-stepper card shadow-sm mt-3\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex justify-content-between align-items-center lem-steps\">\r\n              {[\r\n                { id: 1, label: 'Cliente y Proyecto' },\r\n                { id: 2, label: 'Condiciones' },\r\n                { id: 3, label: 'Ítems' },\r\n                { id: 4, label: 'Resumen' },\r\n              ].map(s => (\r\n                <div\r\n                  key={s.id}\r\n                  className={`lem-step ${currentStep===s.id?'active':''} ${currentStep>s.id?'done':''}`}\r\n                  onClick={()=>setCurrentStep(s.id)}\r\n                  role=\"button\"\r\n                >\r\n                  <div className=\"lem-step-index\">{s.id}</div>\r\n                  <div className=\"lem-step-label\">{s.label}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Paso 1: Cliente, Proyecto y Datos de Cotización */}\r\n        {currentStep === 1 && (\r\n          <div className=\"row g-4 mt-3\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-header py-2\">\r\n                  <strong>Proyecto</strong>\r\n                  <div className=\"lem-subtitle\">Selecciona la empresa y el proyecto al que se asociará la cotización.</div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <CompanyProjectPicker value={selection} onChange={setSelection} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-header py-2\">\r\n                  <strong>Datos del Cliente</strong>\r\n                  <div className=\"lem-subtitle\">Información del cliente vinculada a esta cotización.</div>\r\n                  {selection.company && (\r\n                    <div className=\"alert alert-info py-1 mt-2 mb-0\">\r\n                      <small>✅ Datos autocompletados desde la selección de cliente</small>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Empresa</label><input className=\"form-control\" value={client.company_name} onChange={e=>setClient({...client, company_name:e.target.value})} required/><div className=\"form-text\">Razón social o nombre comercial del cliente.</div></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">R.U.C.</label><input className=\"form-control\" value={client.ruc} onChange={e=>setClient({...client, ruc:e.target.value})} /><div className=\"form-text\">RUC de la empresa (si aplica). Para persona natural, deja vacío.</div></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Contacto</label><input className=\"form-control\" value={client.contact_name} onChange={e=>setClient({...client, contact_name:e.target.value})} required/><div className=\"form-text\">Nombre de la persona que solicita la cotización.</div></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Teléfono</label><input className=\"form-control\" value={client.contact_phone} onChange={e=>setClient({...client, contact_phone:e.target.value})} /><div className=\"form-text\">Teléfono del contacto para coordinaciones.</div></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Correo</label><input type=\"email\" className=\"form-control\" value={client.contact_email} onChange={e=>setClient({...client, contact_email:e.target.value})} /><div className=\"form-text\">Correo del contacto para envío de la cotización.</div></div>\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Ubicación del proyecto</label>\r\n                    <input \r\n                      className=\"form-control\" \r\n                      value={client.project_location} \r\n                      readOnly\r\n                      style={{ backgroundColor: '#f8f9fa', cursor: 'not-allowed' }}\r\n                    />\r\n                    <div className=\"form-text\">Se actualiza automáticamente desde la selección de arriba</div>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Nombre del proyecto</label>\r\n                    <input \r\n                      className=\"form-control\" \r\n                      value={client.project_name} \r\n                      readOnly\r\n                      style={{ backgroundColor: '#f8f9fa', cursor: 'not-allowed' }}\r\n                    />\r\n                    <div className=\"form-text\">Se actualiza automáticamente desde la selección de arriba</div>\r\n                  </div>\r\n                  <div className=\"mb-0\">\r\n                    <label className=\"form-label\">Nombre del servicio</label>\r\n                    <div className=\"position-relative\">\r\n                      <input \r\n                        className=\"form-control\" \r\n                        value={client.service_name} \r\n                        onChange={handleServiceInputChange}\r\n                        onBlur={handleServiceBlur}\r\n                        placeholder=\"Escriba para buscar servicios existentes...\"\r\n                      />\r\n                      {showServiceSuggestions && serviceSuggestions.length > 0 && (\r\n                        <div className=\"autocomplete-suggestions position-absolute w-100\" style={{ zIndex: 1000, top: '100%', left: 0 }}>\r\n                          {serviceSuggestions.slice(0, 10).map((service, index) => (\r\n                            <div \r\n                              key={index}\r\n                              className=\"list-group-item list-group-item-action py-2 px-3\"\r\n                              onClick={() => handleServiceSuggestionClick(service.service_name)}\r\n                              style={{ cursor: 'pointer' }}\r\n                            >\r\n                              <div className=\"fw-medium\">{service.service_name}</div>\r\n                              <small className=\"text-muted\">\r\n                                {service.usage_count > 0 ? `Usado ${service.usage_count} veces` : 'Servicio estándar'}\r\n                              </small>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-text\">Ej.: Ensayos de suelo y agregado, Extracción de diamantina, etc.</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-header py-2\">\r\n                  <strong>Datos de la Cotización</strong>\r\n                  <div className=\"lem-subtitle\">Fechas, referencia y configuración principal.</div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Fecha de Solicitud</label><input type=\"date\" className=\"form-control\" value={quote.request_date} onChange={e=>setQuote({...quote, request_date:e.target.value})} /></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Fecha de Emisión</label><input type=\"date\" className=\"form-control\" value={quote.issue_date} onChange={e=>setQuote({...quote, issue_date:e.target.value})} /></div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Comercial</label><input className=\"form-control\" value={quote.commercial_name} onChange={e=>setQuote({...quote, commercial_name:e.target.value})} /><div className=\"form-text\">Nombre del asesor comercial que atiende al cliente.</div></div>\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Referencia</label>\r\n                    <div className=\"mb-2\">\r\n                      <div className=\"row g-2\">\r\n                        {referenceTypes.map(type => (\r\n                          <div key={type.value} className=\"col-md-3 col-sm-4 col-6\">\r\n                            <div className=\"form-check\">\r\n                              <input \r\n                                className=\"form-check-input\" \r\n                                type=\"checkbox\" \r\n                                id={`ref-${type.value}`}\r\n                                checked={quote.reference_type?.includes(type.value) || false}\r\n                                onChange={(e) => {\r\n                                  const currentTypes = quote.reference_type || [];\r\n                                  if (e.target.checked) {\r\n                                    setQuote({\r\n                                      ...quote, \r\n                                      reference_type: [...currentTypes, type.value]\r\n                                    });\r\n                                  } else {\r\n                                    setQuote({\r\n                                      ...quote, \r\n                                      reference_type: currentTypes.filter(t => t !== type.value)\r\n                                    });\r\n                                  }\r\n                                }}\r\n                              />\r\n                              <label className=\"form-check-label\" htmlFor={`ref-${type.value}`}>\r\n                                {type.label}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                      <input \r\n                        className=\"form-control\" \r\n                        value={quote.reference} \r\n                        onChange={e => setQuote({...quote, reference: e.target.value})} \r\n                        readOnly\r\n                        style={{ backgroundColor: '#f8f9fa', cursor: 'not-allowed' }}\r\n                      />\r\n                      <button \r\n                        className=\"btn btn-outline-secondary\" \r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          const referenceText = generateReferenceText(quote.reference_type);\r\n                          setQuote(prev => ({ ...prev, reference: referenceText }));\r\n                        }}\r\n                        title=\"Regenerar texto de referencia\"\r\n                      >\r\n                        🔄\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"form-text\">Se genera automáticamente basado en las etiquetas seleccionadas. Puedes editarlo si necesitas.</div>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Variante</label>\r\n                    <div className=\"d-flex gap-2 align-items-center\">\r\n                      <select className=\"form-select\" value={variantId} onChange={(e)=>setVariantId(e.target.value)} style={{maxWidth:'70%'}}>\r\n                        <option value=\"\">Sin variante</option>\r\n                        {(variants||[]).map(v => <option key={v.id} value={v.id}>{v.code} - {v.title}</option>)}\r\n                      </select>\r\n                      {variantId ? (\r\n                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={()=>{ setVariantId(''); setConditionsText(''); }}>\r\n                          Quitar\r\n                        </button>\r\n                      ) : null}\r\n                    </div>\r\n                    {variantId ? (()=>{\r\n                      const v = (variants||[]).find(x=>String(x.id)===String(variantId));\r\n                      if (!v) return null;\r\n                      const extra = getVariantText(v) || v.description || '';\r\n                      return (\r\n                        <div className=\"alert alert-info mt-2 p-2\">\r\n                          <div className=\"fw-semibold small\">{v.code} - {v.title}</div>\r\n                          {extra ? <div className=\"small text-muted\" style={{whiteSpace:'pre-line'}}>{extra}</div> : null}\r\n                        </div>\r\n                      );\r\n                    })() : <div className=\"form-text\">Selecciona una variante del listado.</div>}\r\n                  </div>\r\n                  <div className=\"mb-3\"><label className=\"form-label\">Forma de pago</label>\r\n                    <select className=\"form-select\" value={quote.payment_terms} onChange={e=>setQuote({...quote, payment_terms:e.target.value})}>\r\n                      <option value=\"adelantado\">Adelantado</option>\r\n                      <option value=\"50%\">Adelanto 50% y saldo previo al informe</option>\r\n                      <option value=\"credito7\">Crédito 7 días con OS</option>\r\n                      <option value=\"credito15\">Crédito 15 días con OS</option>\r\n                      <option value=\"credito30\">Crédito 30 días con OS</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-check mb-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"igv\" checked={quote.igv} onChange={e=>setQuote({...quote, igv: e.target.checked})}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"igv\">Aplicar IGV 18%</label>\r\n                  </div>\r\n                  <div className=\"form-check mb-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"acceptance\" checked={quote.acceptance} onChange={e=>setQuote({...quote, acceptance:e.target.checked})}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"acceptance\">Aceptación de cotización</label>\r\n                  </div>\r\n                  <div className=\"mb-0\">\r\n                    <label className=\"form-label\">Nombre de archivo sugerido</label>\r\n                    <div className=\"input-group\">\r\n                      <input \r\n                        className=\"form-control\" \r\n                        value={suggestedFileName} \r\n                        onChange={(e) => setSuggestedFileName(e.target.value)}\r\n                        placeholder=\"Se genera automáticamente...\"\r\n                      />\r\n                      <button \r\n                        className=\"btn btn-outline-secondary\" \r\n                        type=\"button\"\r\n                        onClick={() => setSuggestedFileName(generateFileName())}\r\n                        title=\"Regenerar nombre automáticamente\"\r\n                      >\r\n                        🔄\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"form-text\">Se genera automáticamente basado en el cliente. Puedes editarlo si necesitas.</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 2: Condiciones específicas y ajustes */}\r\n        {currentStep === 2 && (\r\n          <div className=\"card shadow-sm lem-section-gap\">\r\n            <div className=\"card-header py-2\">\r\n              <strong>Condiciones específicas</strong>\r\n              <div className=\"lem-subtitle\">Se auto-completan según la variante; puedes editarlas.</div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <textarea\r\n                className=\"form-control lem-monospace\"\r\n                rows={8}\r\n                placeholder=\"Aquí aparecerán las condiciones de la variante seleccionada; puedes editarlas si es necesario.\"\r\n                value={conditionsText}\r\n                onChange={(e)=>setConditionsText(e.target.value)}\r\n              />\r\n              <div className=\"form-text mt-2\">Este texto se guardará en la cotización y se usará para PDF/Excel.</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal eliminado: la selección se hace solo con el menú desplegable */}\r\n\r\n        {currentStep === 3 && (\r\n          <div className=\"card shadow-sm mt-4\">\r\n            <div className=\"card-header py-2\">\r\n              <strong>Ítems</strong>\r\n              <div className=\"lem-subtitle\">Detalle de ensayos/servicios cotizados.</div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped align-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Código/N° ensayo</th>\r\n                      <th>Descripción</th>\r\n                      <th>Norma</th>\r\n                      <th className=\"text-right\">Unitario (S/)</th>\r\n                      <th className=\"text-right\">Cantidad</th>\r\n                      <th className=\"text-right\">Parcial (S/)</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items.map((it, idx) => (\r\n                      <tr key={idx}>\r\n                        <td><input className=\"form-control\" value={it.code} onChange={e=>onChangeItem(idx, { code: e.target.value })} /></td>\r\n                        <td><textarea className=\"form-control\" rows={1} value={it.description} onChange={e=>onChangeItem(idx, { description: e.target.value })} /></td>\r\n                        <td><input className=\"form-control\" value={it.norm} onChange={e=>onChangeItem(idx, { norm: e.target.value })} /></td>\r\n                        <td style={{ width: 120 }}><input type=\"number\" step=\"0.01\" className=\"form-control\" value={it.unit_price} onChange={e=>onChangeItem(idx, { unit_price: e.target.value })} /></td>\r\n                        <td style={{ width: 100 }}><input type=\"number\" className=\"form-control\" value={it.quantity} onChange={e=>onChangeItem(idx, { quantity: e.target.value })} /></td>\r\n                        <td style={{ width: 120 }}>{computePartial(it)}</td>\r\n                        <td style={{ width: 80 }}>\r\n                          <button type=\"button\" className=\"btn btn-sm btn-link text-danger\" title=\"Eliminar\" onClick={()=>onRemoveItem(idx)} disabled={items.length===1}>🗑️</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onAddItem}>Agregar ítem</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {currentStep === 4 && (\r\n          <div className=\"card shadow-sm mt-3 mb-2\">\r\n            <div className=\"card-header py-2\">\r\n              <strong>Resumen y Acciones</strong>\r\n              <div className=\"lem-subtitle\">Revisa montos y genera tus archivos.</div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row align-items-center g-3\">\r\n                <div className=\"col-md\">\r\n                  <div className=\"text-md-end\">\r\n                    <div>Subtotal: S/ {subtotal.toFixed(2)}</div>\r\n                    <div>IGV 18%: S/ {igvAmount.toFixed(2)}</div>\r\n                    <div><strong>Total: S/ {total.toFixed(2)}</strong></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <div className=\"d-flex flex-wrap gap-2 lem-actions\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={saving || (!selection.project?.id && !selection.project_id)}>{saving ? 'Guardando...' : 'Guardar borrador'}</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={exportDraft}>PDF Borrador</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('pdf')}>Exportar PDF</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('excel')}>Exportar Excel</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Sticky action bar integrada */}\r\n        <div className={`lem-sticky-actions ${sidebarCollapsed ? 'sidebar-collapsed' : ''}`}>\r\n          <div className=\"lem-action-content\">\r\n            <div className=\"container-fluid px-0\">\r\n              <div className=\"row align-items-center\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"btn btn-outline-secondary\" \r\n                      onClick={()=>setCurrentStep(Math.max(1, currentStep-1))} \r\n                      disabled={currentStep===1}\r\n                    >\r\n                      ← Anterior\r\n                    </button>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"btn btn-primary\" \r\n                      onClick={()=> currentStep<4 ? setCurrentStep(currentStep+1) : onSubmit({ preventDefault: () => {} })}\r\n                    >\r\n                      {currentStep<4 ? 'Siguiente →' : (saving ? 'Guardando...' : 'Guardar borrador')}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex gap-2 justify-content-md-end flex-wrap\">\r\n                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={exportDraft}>\r\n                      📄 PDF Borrador\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('pdf')}>\r\n                      📋 Exportar PDF\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>exportFile('excel')}>\r\n                      📊 Exportar Excel\r\n              </button>\r\n            </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ModuloBase>\r\n  );\r\n};\r\n"],"names":["emptyClient","emptyQuote","emptyItem","computePartial","item","u","q","normalizeKey","s","VARIANT_TEXTS","getVariantText","v","t","entry","k","CotizacionNuevaLEM","variants","setVariants","useState","variantId","setVariantId","client","setClient","selection","setSelection","quote","setQuote","items","setItems","saving","setSaving","error","setError","conditionsText","setConditionsText","currentStep","setCurrentStep","lastSavedId","setLastSavedId","sidebarCollapsed","setSidebarCollapsed","allServices","setAllServices","serviceSuggestions","setServiceSuggestions","showServiceSuggestions","setShowServiceSuggestions","allProjects","setAllProjects","projectSuggestions","setProjectSuggestions","showProjectSuggestions","setShowProjectSuggestions","suggestedFileName","setSuggestedFileName","referenceTypes","useEffect","loaded","listVariants","fallback","services","getExistingServices","allServicesCombined","service","e","fallbackServices","projects","listProjects","checkSidebarState","sidebar","observer","prev","_a","_b","token","payload","fileName","generateFileName","referenceText","generateReferenceText","handleServiceInputChange","value","filtered","handleServiceSuggestionClick","serviceName","handleServiceBlur","currentYear","currentMonth","currentDay","quoteCode","cleanClientName","selectedTypes","typeLabels","type","refType","rt","lastType","subtotal","useMemo","acc","it","igvAmount","total","onAddItem","onRemoveItem","idx","_","i","onChangeItem","patch","x","c","extra","mapped","di","onSubmit","numericVariantId","saved","createQuote","addQuoteItem","exportFile","id","base","path","url","exportDraft","ModuloBase","jsx","jsxs","CompanyProjectPicker","index","currentTypes"],"mappings":"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"}