{"version":3,"file":"PlantillasCliente-CjFFuqbp.js","sources":["../../src/pages/PlantillasCliente.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Button, Badge, Form, Spinner, Alert, Table, Modal } from 'react-bootstrap';\r\nimport { FiUser, FiFileText, FiEdit, FiCopy, FiTrash2, FiEye, FiPlus, FiSearch, FiRefreshCw } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ConfirmModal from '../components/common/ConfirmModal';\r\nimport api from '../services/api';\r\n\r\nconst PlantillasCliente = () => {\r\n  const { user } = useAuth();\r\n  const [templates, setTemplates] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    client: '',\r\n    search: ''\r\n  });\r\n\r\n  // Modal para crear/editar plantilla\r\n  const [showTemplateModal, setShowTemplateModal] = useState(false);\r\n  const [editingTemplate, setEditingTemplate] = useState(null);\r\n  const [deletingTemplate, setDeletingTemplate] = useState(null);\r\n  const [templateData, setTemplateData] = useState({\r\n    name: '',\r\n    client_id: '',\r\n    description: '',\r\n    services: [\r\n      { code: '', description: '', norm: '', unit_price: 0, quantity: 1 }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Obtener plantillas del usuario\r\n      const templatesData = await api('/api/templates/client');\r\n      setTemplates(templatesData || []);\r\n\r\n      // Obtener clientes\r\n      const clientsData = await api('/api/companies');\r\n      setClients(clientsData || []);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Error al cargar los datos: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredTemplates = templates.filter(template => {\r\n    if (filters.client && template.client_id !== filters.client) return false;\r\n    if (filters.search && !template.name.toLowerCase().includes(filters.search.toLowerCase())) return false;\r\n    return true;\r\n  });\r\n\r\n  const openTemplateModal = (template = null) => {\r\n    if (template) {\r\n      setEditingTemplate(template);\r\n      setTemplateData({\r\n        name: template.name,\r\n        client_id: template.client_id,\r\n        description: template.description,\r\n        services: template.services || [{ code: '', description: '', norm: '', unit_price: 0, quantity: 1 }]\r\n      });\r\n    } else {\r\n      setEditingTemplate(null);\r\n      setTemplateData({\r\n        name: '',\r\n        client_id: '',\r\n        description: '',\r\n        services: [{ code: '', description: '', norm: '', unit_price: 0, quantity: 1 }]\r\n      });\r\n    }\r\n    setShowTemplateModal(true);\r\n  };\r\n\r\n  const handleSaveTemplate = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const url = editingTemplate \r\n        ? `/api/templates/${editingTemplate.id}` \r\n        : '/api/templates';\r\n      \r\n      const method = editingTemplate ? 'PUT' : 'POST';\r\n\r\n      await api(url, {\r\n        method,\r\n        body: templateData\r\n      });\r\n\r\n      setShowTemplateModal(false);\r\n      setEditingTemplate(null);\r\n      setTemplateData({\r\n        name: '',\r\n        client_id: '',\r\n        description: '',\r\n        services: [{ code: '', description: '', norm: '', unit_price: 0, quantity: 1 }]\r\n      });\r\n\r\n      await fetchData();\r\n\r\n    } catch (error) {\r\n      setError('Error al guardar plantilla: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTemplate = (template) => {\r\n    setDeletingTemplate(template);\r\n  };\r\n\r\n  const confirmDeleteTemplate = async () => {\r\n    try {\r\n      await api(`/api/templates/${deletingTemplate.id}`, { method: 'DELETE' });\r\n      await fetchData();\r\n      setDeletingTemplate(null);\r\n    } catch (error) {\r\n      setError('Error al eliminar plantilla: ' + (error.message || 'Error desconocido'));\r\n      setDeletingTemplate(null);\r\n    }\r\n  };\r\n\r\n  const handleCopyTemplate = async (template) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const newTemplate = {\r\n        ...template,\r\n        name: `${template.name} (Copia)`,\r\n        id: undefined\r\n      };\r\n\r\n      await api('/api/templates', {\r\n        method: 'POST',\r\n        body: newTemplate\r\n      });\r\n\r\n      await fetchData();\r\n\r\n    } catch (error) {\r\n      setError('Error al copiar plantilla: ' + (error.message || 'Error desconocido'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUseTemplate = (template) => {\r\n    // Navegar a cotizaciÃ³n inteligente con datos de la plantilla\r\n    const templateData = encodeURIComponent(JSON.stringify(template));\r\n    window.location.href = `/cotizaciones/inteligente?template=${templateData}`;\r\n  };\r\n\r\n  const addService = () => {\r\n    setTemplateData(prev => ({\r\n      ...prev,\r\n      services: [...prev.services, { code: '', description: '', norm: '', unit_price: 0, quantity: 1 }]\r\n    }));\r\n  };\r\n\r\n  const removeService = (index) => {\r\n    if (templateData.services.length > 1) {\r\n      setTemplateData(prev => ({\r\n        ...prev,\r\n        services: prev.services.filter((_, i) => i !== index)\r\n      }));\r\n    }\r\n  };\r\n\r\n  const updateService = (index, field, value) => {\r\n    setTemplateData(prev => ({\r\n      ...prev,\r\n      services: prev.services.map((service, i) => \r\n        i === index ? { ...service, [field]: value } : service\r\n      )\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" />\r\n          <p className=\"mt-2\">Cargando plantillas...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <Alert variant=\"danger\">\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2>ðŸ“‹ Plantillas por Cliente</h2>\r\n          <p className=\"text-muted\">Guarda y reutiliza cotizaciones por cliente</p>\r\n        </Col>\r\n        <Col md=\"auto\">\r\n          <Button variant=\"primary\" onClick={() => openTemplateModal()}>\r\n            <FiPlus className=\"me-2\" />\r\n            Nueva Plantilla\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filtros */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <Form.Select\r\n            value={filters.client}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, client: e.target.value }))}\r\n          >\r\n            <option value=\"\">Todos los clientes</option>\r\n            {Array.isArray(clients) && clients.map(client => (\r\n              <option key={client.id} value={client.id}>{client.name}</option>\r\n            ))}\r\n          </Form.Select>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Buscar plantilla...\"\r\n            value={filters.search}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, search: e.target.value }))}\r\n          />\r\n        </Col>\r\n        <Col md={4}>\r\n          <div className=\"d-flex gap-2\">\r\n            <Button variant=\"outline-secondary\" onClick={fetchData}>\r\n              <FiRefreshCw className=\"me-2\" />\r\n              Actualizar\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              onClick={() => setFilters({ client: '', search: '' })}\r\n            >\r\n              Limpiar\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Lista de plantillas */}\r\n      <Row>\r\n        {filteredTemplates.length === 0 ? (\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center py-5\">\r\n                <FiFileText size={48} className=\"text-muted mb-3\" />\r\n                <h5>No hay plantillas</h5>\r\n                <p className=\"text-muted\">\r\n                  {Object.values(filters).some(f => f) \r\n                    ? 'No se encontraron plantillas con los filtros aplicados'\r\n                    : 'No tienes plantillas guardadas'\r\n                  }\r\n                </p>\r\n                <Button variant=\"primary\" onClick={() => openTemplateModal()}>\r\n                  <FiPlus className=\"me-2\" />\r\n                  Crear Primera Plantilla\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ) : (\r\n          filteredTemplates.map((template) => (\r\n            <Col key={template.id} md={6} lg={4} className=\"mb-3\">\r\n              <Card>\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                  <strong>{template.name}</strong>\r\n                  <Badge bg=\"info\">{template.client_name}</Badge>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Cliente:</strong> {template.client_name || 'N/A'}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>DescripciÃ³n:</strong> {template.description || 'Sin descripciÃ³n'}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Servicios:</strong> {template.services?.length || 0}\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <strong>Creada:</strong> {new Date(template.created_at).toLocaleDateString()}\r\n                  </div>\r\n                  \r\n                  <div className=\"d-flex gap-2 mt-3\">\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleUseTemplate(template)}\r\n                    >\r\n                      <FiCopy className=\"me-1\" />\r\n                      Usar\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      size=\"sm\"\r\n                      onClick={() => openTemplateModal(template)}\r\n                    >\r\n                      <FiEdit className=\"me-1\" />\r\n                      Editar\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleCopyTemplate(template)}\r\n                    >\r\n                      <FiCopy className=\"me-1\" />\r\n                      Copiar\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleDeleteTemplate(template)}\r\n                    >\r\n                      <FiTrash2 className=\"me-1\" />\r\n                    </Button>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n\r\n      {/* Modal para crear/editar plantilla */}\r\n      <Modal show={showTemplateModal} onHide={() => setShowTemplateModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {editingTemplate ? 'Editar Plantilla' : 'Nueva Plantilla'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Nombre de la Plantilla *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={templateData.name}\r\n                  onChange={(e) => setTemplateData(prev => ({ ...prev, name: e.target.value }))}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Cliente *</Form.Label>\r\n                <Form.Select\r\n                  value={templateData.client_id}\r\n                  onChange={(e) => setTemplateData(prev => ({ ...prev, client_id: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">Seleccionar cliente</option>\r\n                  {Array.isArray(clients) && clients.map(client => (\r\n                    <option key={client.id} value={client.id}>{client.name}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>DescripciÃ³n</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  value={templateData.description}\r\n                  onChange={(e) => setTemplateData(prev => ({ ...prev, description: e.target.value }))}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <h6>Servicios de la Plantilla:</h6>\r\n          {templateData.services.map((service, index) => (\r\n            <Card key={index} className=\"mb-3\">\r\n              <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                <h6>Servicio {index + 1}</h6>\r\n                {templateData.services.length > 1 && (\r\n                  <Button\r\n                    variant=\"outline-danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => removeService(index)}\r\n                  >\r\n                    <FiTrash2 />\r\n                  </Button>\r\n                )}\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>CÃ³digo</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={service.code}\r\n                        onChange={(e) => updateService(index, 'code', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>DescripciÃ³n *</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={service.description}\r\n                        onChange={(e) => updateService(index, 'description', e.target.value)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Norma</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={service.norm}\r\n                        onChange={(e) => updateService(index, 'norm', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={4}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Precio Unitario (S/) *</Form.Label>\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={service.unit_price}\r\n                        onChange={(e) => updateService(index, 'unit_price', parseFloat(e.target.value) || 0)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Cantidad *</Form.Label>\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        value={service.quantity}\r\n                        onChange={(e) => updateService(index, 'quantity', parseInt(e.target.value) || 1)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Subtotal (S/)</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={(service.unit_price * service.quantity).toFixed(2)}\r\n                        readOnly\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n\r\n          <Button variant=\"outline-primary\" onClick={addService}>\r\n            <FiPlus className=\"me-2\" />Agregar Servicio\r\n          </Button>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowTemplateModal(false)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"success\" onClick={handleSaveTemplate} disabled={loading}>\r\n            {loading ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"me-2\" />\r\n                Guardando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiFileText className=\"me-2\" />\r\n                {editingTemplate ? 'Actualizar' : 'Crear'} Plantilla\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Modal de confirmaciÃ³n para eliminar plantilla */}\r\n      <ConfirmModal\r\n        show={!!deletingTemplate}\r\n        onHide={() => setDeletingTemplate(null)}\r\n        onConfirm={confirmDeleteTemplate}\r\n        title=\"Eliminar Plantilla\"\r\n        message={`Â¿EstÃ¡s seguro de que quieres eliminar la plantilla \"${deletingTemplate?.name}\"?`}\r\n        confirmText=\"Eliminar\"\r\n        variant=\"danger\"\r\n        alertMessage=\"Esta acciÃ³n eliminarÃ¡ permanentemente la plantilla y no se puede deshacer.\"\r\n        alertVariant=\"warning\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlantillasCliente;\r\n"],"names":["PlantillasCliente","user","useAuth","templates","setTemplates","useState","clients","setClients","loading","setLoading","error","setError","filters","setFilters","showTemplateModal","setShowTemplateModal","editingTemplate","setEditingTemplate","deletingTemplate","setDeletingTemplate","templateData","setTemplateData","useEffect","fetchData","templatesData","api","clientsData","filteredTemplates","template","openTemplateModal","handleSaveTemplate","url","handleDeleteTemplate","confirmDeleteTemplate","handleCopyTemplate","newTemplate","handleUseTemplate","addService","prev","removeService","index","_","i","updateService","field","value","service","Container","jsxs","jsx","Spinner","Alert","Row","Col","Button","FiPlus","Form","e","client","FiRefreshCw","Card","FiFileText","f","Badge","_a","FiCopy","FiEdit","FiTrash2","Modal","Fragment","ConfirmModal"],"mappings":"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"}