{"version":3,"file":"Reportes-Z3_rFFZO.js","sources":["../../src/services/reports.js","../../src/pages/Reportes.jsx"],"sourcesContent":["import { apiFetch } from './api';\r\n\r\nexport const getVentasPorVendedor = () => {\r\n  return apiFetch('/api/reports/ventas-por-vendedor');\r\n};\r\n\r\nexport default {\r\n  getVentasPorVendedor,\r\n};","import React, { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { Row, Col, Card, Button, Form, InputGroup, Badge, Alert } from 'react-bootstrap';\r\nimport { \r\n  FiBarChart2, FiDownload, FiCalendar, FiUsers, FiDollarSign, \r\n  FiArrowUp, FiFileText, FiFilter, FiRefreshCw, FiEye,\r\n  FiHome, FiCheckCircle, FiClock, FiX\r\n} from 'react-icons/fi';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport DataTable from '../components/common/DataTable';\r\nimport StatsCard from '../components/common/StatsCard';\r\nimport { getVentasPorVendedor } from '../services/reports';\r\n\r\nconst VentasPorVendedorReport = () => {\r\n  const { data, isLoading, error } = useQuery('ventasPorVendedor', getVentasPorVendedor);\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Vendedor',\r\n      accessor: 'name',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.name}</div>\r\n          <small className=\"text-muted\">{row.email}</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Período',\r\n      accessor: 'period',\r\n      render: (value, row) => (\r\n        <div>\r\n          <div className=\"fw-medium\">{row.month}/{row.year}</div>\r\n          <small className=\"text-muted\">Mes/Año</small>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Total Proyectos',\r\n      accessor: 'total_proyectos',\r\n      render: (value) => (\r\n        <Badge bg=\"primary\" className=\"status-badge\">\r\n          {value} proyectos\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      header: 'Acciones',\r\n      accessor: 'actions',\r\n      render: (value, row) => (\r\n        <Button variant=\"outline-primary\" size=\"sm\">\r\n          <FiEye className=\"me-1\" />\r\n          Ver Detalles\r\n        </Button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (isLoading) return <Alert variant=\"info\">Cargando reporte...</Alert>;\r\n  if (error) return <Alert variant=\"danger\">Error al cargar el reporte: {error.message}</Alert>;\r\n\r\n  return (\r\n    <DataTable\r\n      data={data || []}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      emptyMessage=\"No hay datos de ventas disponibles\"\r\n    />\r\n  );\r\n};\r\n\r\nconst ProyectosPorEstadoReport = () => {\r\n  // Simulamos datos para el reporte\r\n  const mockData = [\r\n    { estado: 'activo', cantidad: 45, porcentaje: 60 },\r\n    { estado: 'pendiente', cantidad: 20, porcentaje: 27 },\r\n    { estado: 'completado', cantidad: 8, porcentaje: 11 },\r\n    { estado: 'cancelado', cantidad: 2, porcentaje: 2 }\r\n  ];\r\n\r\n  const getStatusBadge = (estado) => {\r\n    const statusConfig = {\r\n      'activo': { bg: 'success', text: 'Activo', icon: FiCheckCircle },\r\n      'pendiente': { bg: 'warning', text: 'Pendiente', icon: FiClock },\r\n      'completado': { bg: 'primary', text: 'Completado', icon: FiCheckCircle },\r\n      'cancelado': { bg: 'danger', text: 'Cancelado', icon: FiX }\r\n    };\r\n    \r\n    const config = statusConfig[estado] || { bg: 'secondary', text: estado, icon: FiCheckCircle };\r\n    const Icon = config.icon;\r\n    \r\n    return (\r\n      <Badge bg={config.bg} className=\"status-badge d-flex align-items-center\">\r\n        <Icon size={12} className=\"me-1\" />\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      header: 'Estado',\r\n      accessor: 'estado',\r\n      render: (value) => getStatusBadge(value)\r\n    },\r\n    {\r\n      header: 'Cantidad',\r\n      accessor: 'cantidad',\r\n      render: (value) => (\r\n        <div className=\"fw-bold text-primary\">{value}</div>\r\n      )\r\n    },\r\n    {\r\n      header: 'Porcentaje',\r\n      accessor: 'porcentaje',\r\n      render: (value) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"progress flex-grow-1 me-2\" style={{ height: '8px' }}>\r\n            <div \r\n              className=\"progress-bar bg-primary\" \r\n              style={{ width: `${value}%` }}\r\n            ></div>\r\n          </div>\r\n          <span className=\"fw-medium\">{value}%</span>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <DataTable\r\n      data={mockData}\r\n      columns={columns}\r\n      loading={false}\r\n      emptyMessage=\"No hay datos de proyectos disponibles\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default function Reportes() {\r\n  const [activeReport, setActiveReport] = useState('ventas');\r\n  const [dateRange, setDateRange] = useState({\r\n    start: new Date().toISOString().slice(0, 7), // YYYY-MM\r\n    end: new Date().toISOString().slice(0, 7)\r\n  });\r\n\r\n  const reportTypes = [\r\n    {\r\n      id: 'ventas',\r\n      title: 'Ventas por Vendedor',\r\n      description: 'Análisis de ventas y proyectos por vendedor',\r\n      icon: FiUsers,\r\n      color: 'primary'\r\n    },\r\n    {\r\n      id: 'proyectos',\r\n      title: 'Proyectos por Estado',\r\n      description: 'Distribución de proyectos según su estado',\r\n      icon: FiHome,\r\n      color: 'info'\r\n    },\r\n    {\r\n      id: 'cotizaciones',\r\n      title: 'Cotizaciones',\r\n      description: 'Reporte de cotizaciones generadas',\r\n      icon: FiFileText,\r\n      color: 'success'\r\n    },\r\n    {\r\n      id: 'clientes',\r\n      title: 'Clientes',\r\n      description: 'Análisis de clientes y empresas',\r\n      icon: FiUsers,\r\n      color: 'warning'\r\n    }\r\n  ];\r\n\r\n  const renderReport = () => {\r\n    switch (activeReport) {\r\n      case 'ventas':\r\n        return <VentasPorVendedorReport />;\r\n      case 'proyectos':\r\n        return <ProyectosPorEstadoReport />;\r\n      case 'cotizaciones':\r\n        return (\r\n          <Alert variant=\"info\">\r\n            <FiFileText className=\"me-2\" />\r\n            Reporte de cotizaciones en desarrollo\r\n          </Alert>\r\n        );\r\n      case 'clientes':\r\n        return (\r\n          <Alert variant=\"info\">\r\n            <FiUsers className=\"me-2\" />\r\n            Reporte de clientes en desarrollo\r\n          </Alert>\r\n        );\r\n      default:\r\n        return <VentasPorVendedorReport />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fade-in\">\r\n      <PageHeader\r\n        title=\"Reportes y Análisis\"\r\n        subtitle=\"Visualiza estadísticas y genera reportes del sistema\"\r\n        icon={FiBarChart2}\r\n        actions={\r\n          <div className=\"d-flex gap-2\">\r\n            <Button variant=\"outline-primary\">\r\n              <FiDownload className=\"me-2\" />\r\n              Exportar\r\n            </Button>\r\n            <Button variant=\"primary\">\r\n              <FiRefreshCw className=\"me-2\" />\r\n              Actualizar\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Filtros de fecha */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <Row className=\"align-items-center\">\r\n            <Col md={3}>\r\n              <Form.Label>Período de Análisis</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Text><FiCalendar /></InputGroup.Text>\r\n                <Form.Control\r\n                  type=\"month\"\r\n                  value={dateRange.start}\r\n                  onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Form.Label>Hasta</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Text><FiCalendar /></InputGroup.Text>\r\n                <Form.Control\r\n                  type=\"month\"\r\n                  value={dateRange.end}\r\n                  onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={6} className=\"d-flex align-items-end\">\r\n              <Button variant=\"outline-secondary\" className=\"me-2\">\r\n                <FiFilter className=\"me-2\" />\r\n                Aplicar Filtros\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Estadísticas generales */}\r\n      <Row className=\"g-4 mb-4\">\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Total Proyectos\"\r\n            value=\"75\"\r\n            icon={FiHome}\r\n            trend=\"up\"\r\n            trendValue=\"+12% este mes\"\r\n            variant=\"primary\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Cotizaciones Enviadas\"\r\n            value=\"45\"\r\n            icon={FiFileText}\r\n            trend=\"up\"\r\n            trendValue=\"+8% esta semana\"\r\n            variant=\"success\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Clientes Activos\"\r\n            value=\"120\"\r\n            icon={FiUsers}\r\n            trend=\"up\"\r\n            trendValue=\"+5% este trimestre\"\r\n            variant=\"info\"\r\n          />\r\n        </Col>\r\n        <Col md={6} lg={3}>\r\n          <StatsCard\r\n            title=\"Ventas del Mes\"\r\n            value=\"S/ 85,000\"\r\n            icon={FiDollarSign}\r\n            trend=\"up\"\r\n            trendValue=\"+15% respecto al mes anterior\"\r\n            variant=\"warning\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Selector de reportes */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <h5 className=\"mb-3\">Seleccionar Tipo de Reporte</h5>\r\n          <Row className=\"g-3\">\r\n            {reportTypes.map((report) => {\r\n              const Icon = report.icon;\r\n              return (\r\n                <Col md={6} lg={3} key={report.id}>\r\n                  <Card \r\n                    className={`h-100 cursor-pointer ${activeReport === report.id ? 'border-primary' : ''}`}\r\n                    onClick={() => setActiveReport(report.id)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <Card.Body className=\"text-center\">\r\n                      <Icon size={32} className={`text-${report.color} mb-2`} />\r\n                      <h6 className=\"fw-medium\">{report.title}</h6>\r\n                      <small className=\"text-muted\">{report.description}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Contenido del reporte */}\r\n      <Card>\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">\r\n            {reportTypes.find(r => r.id === activeReport)?.title}\r\n          </h5>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {renderReport()}\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":["getVentasPorVendedor","apiFetch","VentasPorVendedorReport","data","isLoading","error","useQuery","columns","value","row","jsx","jsxs","Badge","Button","FiEye","Alert","DataTable","ProyectosPorEstadoReport","mockData","getStatusBadge","estado","config","FiCheckCircle","FiClock","FiX","Icon","Reportes","activeReport","setActiveReport","useState","dateRange","setDateRange","reportTypes","FiUsers","FiHome","FiFileText","renderReport","PageHeader","FiBarChart2","FiDownload","FiRefreshCw","Card","Row","Col","Form","InputGroup","FiCalendar","e","FiFilter","StatsCard","FiDollarSign","report","_a","r"],"mappings":"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"}